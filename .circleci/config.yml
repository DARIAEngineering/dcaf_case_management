# Empty
version: 2

jobs:
  build:
    parallelism: 4
    working_directory: ~/abortioneering
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          TESTOPTS: "--ci-dir=test-results"
          PGUSER: circleci
          PGHOST: localhost
          PGDATABASE: dcaf_case_management_test
      - image: circleci/mongo:latest
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: dcaf_case_management_test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run: sudo apt-get install libfontconfig postgresql-client
      - run: gem install bundler # Update bundler
      - run: sudo gem update --system # Update rubygems
      - restore_cache:
          keys:
            - dcaf_case_management-{{ checksum "Gemfile.lock" }}
            - dcaf_case_management-{{ checksum ".circleci/config.yml" }}
      - run: bundle check || bundle install
      - run: yarn install
      - run: NODE_ENV=test bundle exec rails webpacker:compile
      - run: RAILS_ENV=test bundle exec rails db:create db:migrate
      - run: gem install --no-document brakeman
      - run: gem install --no-document ruby_audit
      - run: gem install --no-document bundler-audit
      - save_cache:
          key: dcaf_case_management-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rake knapsack:minitest
      - run: brakeman --exit-on-warn .
      - run: bundle exec ruby-audit check
      - run: bundle-audit update; bundle-audit check
      - run: bundle exec rails zeitwerk:check
      - store_artifacts:
          path: /home/circleci/abortioneering/tmp/capybara/
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: test-results/
  predeploy:
    working_directory: ~/abortioneering
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
    steps:
      - checkout
      - run: "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow" # necessary due to moving to an organization
  deploy:
    working_directory: ~/abortioneering
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          keys:
            - dcaf_case_management-{{ epoch }}
      - run: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/dcaf-cmapp-staging.git main

workflows:
  version: 2
  dcaf_workflow_build_test_deploy:
    jobs:
      - build
      - predeploy:
          filters:
            branches:
              only: main
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: main
          requires:
            - build
            - predeploy
