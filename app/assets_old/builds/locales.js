(() => {
  // app/javascript/locales.json
  var af = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validering het misluk: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan rekord nie skrap nie omdat afhanklike %{record} bestaan",
            has_one: "Kan rekord nie skrap nie omdat 'n afhanklike %{record} bestaan"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Son",
        "Maan",
        "Dins",
        "Woe",
        "Don",
        "Vry",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "Mei",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Des"
      ],
      day_names: [
        "Sondag",
        "Maandag",
        "Dinsdag",
        "Woensdag",
        "Donderdag",
        "Vrydag",
        "Saterdag"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Januarie",
        "Februarie",
        "Maart",
        "April",
        "Mei",
        "Junie",
        "Julie",
        "Augustus",
        "September",
        "Oktober",
        "November",
        "Desember"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ongeveer %{count} uur",
          other: "ongeveer %{count} ure"
        },
        about_x_months: {
          one: "ongeveer %{count} maand",
          other: "ongeveer %{count} maande"
        },
        about_x_years: {
          one: "ongeveer %{count} jaar",
          other: "ongeveer %{count} jaar"
        },
        almost_x_years: {
          one: "sowat %{count} jaar",
          other: "sowat %{count} jaar"
        },
        half_a_minute: "halfminuut",
        less_than_x_minutes: {
          one: "minder as %{count} minuut",
          other: "minder as %{count} minute"
        },
        less_than_x_seconds: {
          one: "minder as %{count} sekonde",
          other: "minder as %{count} sekondes"
        },
        over_x_years: {
          one: "meer as %{count} jaar",
          other: "meer as %{count} jaar"
        },
        x_days: {
          one: "%{count} dag",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minuut",
          other: "%{count} minute"
        },
        x_months: {
          one: "%{count} maand",
          other: "%{count} maande"
        },
        x_seconds: {
          one: "%{count} sekonde",
          other: "%{count} sekondes"
        },
        x_years: {
          one: "%{count} jaar",
          other: "%{count} jare"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Uur",
        minute: "Minuut",
        month: "Maand",
        second: "Sekondes",
        year: "Jaar"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "moet aanvaar word",
        blank: "mag nie leeg wees nie",
        confirmation: "pas nie by bevestiging nie",
        empty: "mag nie leeg wees nie",
        equal_to: "moet gelyk wees aan %{count}",
        even: "moet ewe wees",
        exclusion: "is bespreek",
        greater_than: "moet meer wees as %{count}",
        greater_than_or_equal_to: "moet meer of gelykstaande wees aan %{count}",
        inclusion: "is nie by die lys ingesluit nie",
        invalid: "is ongeldig",
        less_than: "moet minder wees as %{count}",
        less_than_or_equal_to: "moet minder of gelykstaande wees aan %{count}",
        model_invalid: "Validering het misluk: %{errors}",
        not_a_number: "is nie 'n getal nie",
        not_an_integer: "moet 'n heelgetal wees",
        odd: "moet onewe wees",
        other_than: "moet anders wees as %{count}",
        present: "moet leeg wees",
        required: "moet bestaan",
        taken: "is reeds geneem",
        too_long: {
          one: "is te lank (maksimum is %{count} karakter)",
          other: "is te lank (maksimum is %{count} karakters)"
        },
        too_short: {
          one: "is te kort (minimum is %{count} karakter)",
          other: "is te kort (minimum is %{count} karakters)"
        },
        wrong_length: {
          one: "is die verkeerde lengte (moet %{count} karakter wees)",
          other: "is die verkeerde lengte (moet %{count} karakters wees)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} fout het verhoed dat hierdie %{model} gestoor kon word",
          other: "%{count} foute het verhoed dat hierdie %{model} gestoor kon word"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Kies asseblief"
      },
      submit: {
        create: "Skep %{model}",
        submit: "Stoor %{model}",
        update: "Dateer %{model} op"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "R"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miljard",
            million: "miljoen",
            quadrillion: "biljard",
            thousand: "duisend",
            trillion: "biljoen",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Greep",
              other: "Grepe"
            },
            gb: "GG",
            kb: "kG",
            mb: "MG",
            tb: "TG"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", en ",
        two_words_connector: " en ",
        words_connector: ", "
      }
    },
    time: {
      am: "vm",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "nm"
    }
  };
  var ar = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0641\u0634\u0644 \u0627\u0644\u062A\u062D\u0642\u0651\u0642 \u0645\u0646: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0644\u0627 \u064A\u0645\u0643\u0646 \u062D\u0630\u0641 \u0627\u0644\u0633\u062C\u0644 \u0644\u0648\u062C\u0648\u062F \u0633\u062C\u0644\u0627\u062A \u062A\u0639\u062A\u0645\u062F \u0639\u0644\u064A\u0647 %{record}",
            has_one: "\u0644\u0627 \u064A\u0645\u0643\u0646 \u062D\u0630\u0641 \u0627\u0644\u0633\u062C\u0644 \u0644\u0648\u062C\u0648\u062F \u0633\u062C\u0644 \u064A\u0639\u062A\u0645\u062F \u0639\u0644\u064A\u0647 %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0627\u0644\u0623\u062D\u062F",
        "\u0627\u0644\u0625\u062B\u0646\u064A\u0646",
        "\u0627\u0644\u062B\u0651\u0644\u0627\u062B\u0627\u0621",
        "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621",
        "\u0627\u0644\u062E\u0645\u064A\u0633",
        "\u0627\u0644\u062C\u0645\u0639\u0629",
        "\u0627\u0644\u0633\u0651\u0628\u062A"
      ],
      abbr_month_names: [
        null,
        "\u064A\u0646\u0627\u064A\u0631",
        "\u0641\u0628\u0631\u0627\u064A\u0631",
        "\u0645\u0627\u0631\u0633",
        "\u0623\u0628\u0631\u064A\u0644",
        "\u0645\u0627\u064A\u0648",
        "\u064A\u0648\u0646\u064A\u0648",
        "\u064A\u0648\u0644\u064A\u0648",
        "\u0623\u063A\u0633\u0637\u0633",
        "\u0633\u0628\u062A\u0645\u0628\u0631",
        "\u0623\u0643\u062A\u0648\u0628\u0631",
        "\u0646\u0648\u0641\u0645\u0628\u0631",
        "\u062F\u064A\u0633\u0645\u0628\u0631"
      ],
      day_names: [
        "\u0627\u0644\u0623\u062D\u062F",
        "\u0627\u0644\u0625\u062B\u0646\u064A\u0646",
        "\u0627\u0644\u062B\u0651\u0644\u0627\u062B\u0627\u0621",
        "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621",
        "\u0627\u0644\u062E\u0645\u064A\u0633",
        "\u0627\u0644\u062C\u0645\u0639\u0629",
        "\u0627\u0644\u0633\u0651\u0628\u062A"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e %B\u060C %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u064A\u0646\u0627\u064A\u0631",
        "\u0641\u0628\u0631\u0627\u064A\u0631",
        "\u0645\u0627\u0631\u0633",
        "\u0623\u0628\u0631\u064A\u0644",
        "\u0645\u0627\u064A\u0648",
        "\u064A\u0648\u0646\u064A\u0648",
        "\u064A\u0648\u0644\u064A\u0648",
        "\u0623\u063A\u0633\u0637\u0633",
        "\u0633\u0628\u062A\u0645\u0628\u0631",
        "\u0623\u0643\u062A\u0648\u0628\u0631",
        "\u0646\u0648\u0641\u0645\u0628\u0631",
        "\u062F\u064A\u0633\u0645\u0628\u0631"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0627\u0639\u0627\u062A",
          many: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0627\u0639\u0629",
          one: "\u062D\u0648\u0627\u0644\u064A \u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629",
          other: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0627\u0639\u0629",
          two: "\u062D\u0648\u0627\u0644\u064A \u0633\u0627\u0639\u062A\u0627\u0646",
          zero: "\u062D\u0648\u0627\u0644\u064A \u0635\u0641\u0631 \u0633\u0627\u0639\u0627\u062A"
        },
        about_x_months: {
          few: "\u062D\u0648\u0627\u0644\u064A %{count} \u0623\u0634\u0647\u0631",
          many: "\u062D\u0648\u0627\u0644\u064A %{count} \u0634\u0647\u0631",
          one: "\u062D\u0648\u0627\u0644\u064A \u0634\u0647\u0631 \u0648\u0627\u062D\u062F",
          other: "\u062D\u0648\u0627\u0644\u064A %{count} \u0634\u0647\u0631",
          two: "\u062D\u0648\u0627\u0644\u064A \u0634\u0647\u0631\u0627\u0646",
          zero: "\u062D\u0648\u0627\u0644\u064A \u0635\u0641\u0631 \u0623\u0634\u0647\u0631"
        },
        about_x_years: {
          few: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0646\u0648\u0627\u062A",
          many: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0646\u0629",
          one: "\u062D\u0648\u0627\u0644\u064A \u0633\u0646\u0629",
          other: "\u062D\u0648\u0627\u0644\u064A %{count} \u0633\u0646\u0629",
          two: "\u062D\u0648\u0627\u0644\u064A \u0633\u0646\u062A\u0627\u0646",
          zero: "\u062D\u0648\u0627\u0644\u064A \u0635\u0641\u0631 \u0633\u0646\u0648\u0627\u062A"
        },
        almost_x_years: {
          few: "\u0645\u0627 \u064A\u0642\u0631\u0628 \u0645\u0646 %{count} \u0633\u0646\u0648\u0627\u062A",
          many: "\u0645\u0627 \u064A\u0642\u0631\u0628 \u0645\u0646 %{count} \u0633\u0646\u0629",
          one: "\u062A\u0642\u0631\u064A\u0628\u0627 \u0633\u0646\u0629 \u0648\u0627\u062D\u062F\u0629",
          other: "\u0645\u0627 \u064A\u0642\u0631\u0628 \u0645\u0646 %{count} \u0633\u0646\u0629",
          two: "\u0645\u0627 \u064A\u0642\u0631\u0628 \u0645\u0646 \u0633\u0646\u062A\u064A\u0646",
          zero: "\u0645\u0627 \u064A\u0642\u0631\u0628 \u0645\u0646 \u0635\u0641\u0631 \u0633\u0646\u0648\u0627\u062A"
        },
        half_a_minute: "\u0646\u0635\u0641 \u062F\u0642\u064A\u0642\u0629",
        less_than_x_minutes: {
          few: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062F\u0642\u0627\u0626\u0642",
          many: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062F\u0642\u064A\u0642\u0629",
          one: "\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629",
          other: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062F\u0642\u064A\u0642\u0629",
          two: "\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u0627\u0646",
          zero: "\u0623\u0642\u0644 \u0645\u0646 \u0635\u0641\u0631 \u062F\u0642\u0627\u0626\u0642"
        },
        less_than_x_seconds: {
          few: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062B\u0648\u0627\u0646",
          many: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062B\u0627\u0646\u064A\u0629",
          one: "\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629",
          other: "\u0623\u0642\u0644 \u0645\u0646 %{count} \u062B\u0627\u0646\u064A\u0629",
          two: "\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u062A\u0627\u0646",
          zero: "\u0623\u0642\u0644 \u0645\u0646 \u0635\u0641\u0631 \u062B\u0648\u0627\u0646\u064A"
        },
        over_x_years: {
          few: "\u0623\u0643\u062B\u0631 \u0645\u0646 %{count} \u0633\u0646\u0648\u0627\u062A",
          many: "\u0623\u0643\u062B\u0631 \u0645\u0646 %{count} \u0633\u0646\u0629",
          one: "\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u0629",
          other: "\u0623\u0643\u062B\u0631 \u0645\u0646 %{count} \u0633\u0646\u0629",
          two: "\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u062A\u064A\u0646",
          zero: "\u0623\u0643\u062B\u0631 \u0645\u0646 \u0635\u0641\u0631 \u0633\u0646\u0648\u0627\u062A"
        },
        x_days: {
          few: "%{count} \u0623\u064A\u0627\u0645",
          many: "%{count} \u064A\u0648\u0645",
          one: "\u064A\u0648\u0645 \u0648\u0627\u062D\u062F",
          other: "%{count} \u064A\u0648\u0645",
          two: "\u064A\u0648\u0645\u0627\u0646",
          zero: "\u0635\u0641\u0631 \u0623\u064A\u0627\u0645"
        },
        x_minutes: {
          few: "%{count} \u062F\u0642\u0627\u0626\u0642",
          many: "%{count} \u062F\u0642\u064A\u0642\u0629",
          one: "\u062F\u0642\u064A\u0642\u0629 \u0648\u0627\u062D\u062F\u0629",
          other: "%{count} \u062F\u0642\u064A\u0642\u0629",
          two: "\u062F\u0642\u064A\u0642\u062A\u0627\u0646",
          zero: "\u0635\u0641\u0631 \u062F\u0642\u0627\u0626\u0642"
        },
        x_months: {
          few: "%{count} \u0623\u0634\u0647\u0631",
          many: "%{count} \u0634\u0647\u0631",
          one: "\u0634\u0647\u0631 \u0648\u0627\u062D\u062F",
          other: "%{count} \u0634\u0647\u0631",
          two: "\u0634\u0647\u0631\u0627\u0646",
          zero: "\u0635\u0641\u0631 \u0623\u0634\u0647\u0631"
        },
        x_seconds: {
          few: "%{count} \u062B\u0648\u0627\u0646",
          many: "%{count} \u062B\u0627\u0646\u064A\u0629",
          one: "\u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629",
          other: "%{count} \u062B\u0627\u0646\u064A\u0629",
          two: "\u062B\u0627\u0646\u064A\u062A\u0627\u0646",
          zero: "\u0635\u0641\u0631 \u062B\u0648\u0627\u0646\u064A"
        }
      },
      prompts: {
        day: "\u0627\u0644\u064A\u0648\u0645",
        hour: "\u0633\u0627\u0639\u0629",
        minute: "\u062F\u0642\u064A\u0642\u0629",
        month: "\u0627\u0644\u0634\u0647\u0631",
        second: "\u062B\u0627\u0646\u064A\u0629",
        year: "\u0627\u0644\u0633\u0646\u0629"
      }
    },
    errors: {
      format: "%{message}",
      messages: {
        accepted: "\u064A\u062C\u0628 \u0623\u0646 \u062A\u0642\u0628\u0644 %{attribute}",
        blank: "\u0644\u0627 \u064A\u0645\u0643\u0646 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0645\u062D\u062A\u0648\u0649 %{attribute} \u0641\u0627\u0631\u063A\u0627\u064B",
        confirmation: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0644\u0627 \u064A\u062A\u0648\u0627\u0641\u0642 \u0645\u0639 %{attribute}",
        empty: "\u0644\u0627 \u064A\u0645\u0643\u0646 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0645\u062D\u062A\u0648\u0649 %{attribute} \u0641\u0627\u0631\u063A\u0627\u064B",
        equal_to: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0633\u0627\u0648\u064A \u0637\u0648\u0644 %{attribute} %{count}",
        even: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0632\u0648\u062C\u064A\u0627\u064B",
        exclusion: "\u062D\u0642\u0644 %{attribute} \u0645\u062D\u062C\u0648\u0632",
        greater_than: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0623\u0643\u0628\u0631 \u0645\u0646 %{count}",
        greater_than_or_equal_to: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0623\u0643\u0628\u0631 \u0623\u0648 \u064A\u0633\u0627\u0648\u064A %{count}",
        inclusion: "%{attribute} \u063A\u064A\u0631 \u0648\u0627\u0631\u062F \u0641\u064A \u0627\u0644\u0642\u0627\u0626\u0645\u0629",
        invalid: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u063A\u064A\u0631 \u0635\u0627\u0644\u062D",
        less_than: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0623\u0635\u063A\u0631 \u0645\u0646 %{count}",
        less_than_or_equal_to: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0623\u0635\u063A\u0631 \u0623\u0648  \u064A\u0633\u0627\u0648\u064A %{count}",
        not_a_number: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0645\u062D\u062A\u0648\u0649 %{attribute} \u0631\u0642\u0645\u0627\u064B",
        not_an_integer: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0639\u062F\u062F \u0635\u062D\u064A\u062D\u0627\u064B",
        odd: "\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F %{attribute} \u0639\u062F\u062F\u0627\u064B \u0641\u0631\u062F\u064A\u0627\u064B",
        other_than: {
          few: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 %{count} \u0623\u062D\u0631\u0641",
          many: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 %{count} \u062D\u0631\u0641\u0627\u064B",
          one: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 \u062D\u0631\u0641\u0627\u064B \u0648\u0627\u062D\u062F\u0627\u064B",
          other: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 %{count} \u062D\u0631\u0641\u0627\u064B",
          two: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 \u062D\u0631\u0641\u0627\u0646",
          zero: "\u0637\u0648\u0644 %{attribute} \u064A\u062C\u0628 \u0623\u0644\u0627\u0651 \u064A\u0643\u0648\u0646 \u0635\u0641\u0631 \u062D\u0631\u0641"
        },
        present: "\u064A\u062C\u0628 \u062A\u0631\u0643 \u062D\u0642\u0644 %{attribute} \u0641\u0627\u0631\u063A\u0627\u064B",
        taken: "\u062D\u0642\u0644 %{attribute} \u0645\u062D\u062C\u0648\u0632 \u0645\u0633\u0628\u0642\u0627\u064B",
        too_long: {
          few: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 %{count} \u062D\u0631\u0648\u0641)",
          many: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 %{count} \u062D\u0631\u0641)",
          one: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 \u062D\u0631\u0641 \u0648\u0627\u062D\u062F)",
          other: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 %{count} \u062D\u0631\u0641)",
          two: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 \u062D\u0631\u0641\u0627\u0646)",
          zero: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0637\u0648\u0644 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0647\u0648 \u0648\u0644\u0627 \u062D\u0631\u0641)"
        },
        too_short: {
          few: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 %{count} \u062D\u0631\u0648\u0641)",
          many: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 %{count} \u062D\u0631\u0641)",
          one: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 \u062D\u0631\u0641 \u0648\u0627\u062D\u062F)",
          other: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 %{count} \u062D\u0631\u0641)",
          two: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 \u062D\u0631\u0641\u0627\u0646)",
          zero: "\u0645\u062D\u062A\u0648\u0649 %{attribute} \u0623\u0642\u0635\u0631 \u0645\u0646 \u0627\u0644\u0644\u0651\u0627\u0632\u0645 (\u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0647\u0648 \u0648\u0644\u0627 \u062D\u0631\u0641)"
        },
        wrong_length: {
          few: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 %{count} \u0623\u062D\u0631\u0641)",
          many: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 %{count} \u062D\u0631\u0641)",
          one: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u062D\u0631\u0641 \u0648\u0627\u062D\u062F)",
          other: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 %{count} \u062D\u0631\u0641)",
          two: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u062D\u0631\u0641\u0627\u0646)",
          zero: "\u0637\u0648\u0644 %{attribute} \u063A\u064A\u0631 \u0645\u0637\u0627\u0628\u0642 \u0644\u0644\u062D\u062F \u0627\u0644\u0645\u0637\u0644\u0648\u0628 (\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0648\u0644\u0627 \u062D\u0631\u0641)"
        }
      },
      template: {
        body: "\u064A\u064F\u0631\u062C\u0649 \u0627\u0644\u062A\u062D\u0642\u0651\u0642 \u0645\u0646 \u0627\u0644\u062D\u0642\u0648\u0644 \u0627\u0644\u062A\u0651\u0627\u0644\u064A\u0629:%{attribute}",
        header: {
          few: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u062C\u0648\u062F %{count} \u0623\u062E\u0637\u0627\u0621.",
          many: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u062C\u0648\u062F %{count} \u062E\u0637\u0623.",
          one: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u062C\u0648\u062F \u062E\u0637\u0623 \u0648\u0627\u062D\u062F.",
          other: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u062C\u0648\u062F %{count} \u062E\u0637\u0623.",
          two: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u062C\u0648\u062F \u062E\u0637\u0626\u0627\u0646.",
          zero: "\u0644\u064A\u0633 \u0628\u0627\u0644\u0627\u0645\u0643\u0627\u0646 \u062D\u0641\u0638 %{model} \u0644\u0633\u0628\u0628 \u0648\u0644\u0627 \u062E\u0637\u0623."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u064A\u064F\u0631\u062C\u0649 \u0627\u0644\u0627\u062E\u062A\u064A\u0627\u0631"
      },
      submit: {
        create: "%{model} \u0625\u0646\u0634\u0627\u0621",
        submit: "%{model} \u062D\u0650\u0641\u0638",
        update: "%{model} \u062A\u062D\u062F\u064A\u062B"
      }
    },
    i18n: {
      plural: {
        keys: [
          "zero",
          "one",
          "two",
          "few",
          "many",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 3,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "KWD"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0645\u0644\u064A\u0627\u0631",
            million: "\u0645\u0644\u064A\u0648\u0646",
            quadrillion: "\u0643\u062F\u0631\u064A\u0644\u064A\u0648\u0646",
            thousand: "\u0623\u0644\u0641\u0651",
            trillion: "\u062A\u0631\u064A\u0644\u064A\u0648\u0646",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Bytes",
              many: "Bytes",
              one: "Byte",
              other: "Bytes",
              two: "Bytes",
              zero: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0648 ",
        two_words_connector: " \u0648 ",
        words_connector: " \u060C "
      }
    },
    time: {
      am: "\u0635\u0628\u0627\u062D\u064B\u0627",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %Z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0645\u0633\u0627\u0621\u064B"
    }
  };
  var az = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Yoxlama u\u011Fursuz oldu: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u018Flaq\u0259li %{record} yaz\u0131lar oldu\u011Fundan bu yaz\u0131n\u0131 silm\u0259k m\xFCmk\xFCn deyil",
            has_one: "\u018Flaq\u0259li %{record} yaz\u0131 oldu\u011Fundan bu yaz\u0131n\u0131 silm\u0259k m\xFCmk\xFCn deyil"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "B.",
        "B.E.",
        "\xC7.A.",
        "\xC7.",
        "C.A.",
        "C.",
        "\u015E."
      ],
      abbr_month_names: [
        null,
        "Yan",
        "Fev",
        "Mar",
        "Apr",
        "May",
        "\u0130yn",
        "\u0130yl",
        "Avq",
        "Sen",
        "Okt",
        "Noy",
        "Dek"
      ],
      day_names: [
        "Bazar",
        "Bazar ert\u0259si",
        "\xC7\u0259r\u015F\u0259nb\u0259 ax\u015Fam\u0131",
        "\xC7\u0259r\u015F\u0259nb\u0259",
        "C\xFCm\u0259 ax\u015Fam\u0131",
        "C\xFCm\u0259",
        "\u015E\u0259nb\u0259"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Yanvar",
        "Fevral",
        "Mart",
        "Aprel",
        "May",
        "\u0130yun",
        "\u0130yul",
        "Avqust",
        "Sentyabr",
        "Oktyabr",
        "Noyabr",
        "Dekabr"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "t\u0259xmin\u0259n %{count} saat",
          other: "t\u0259xmin\u0259n %{count} saat"
        },
        about_x_months: {
          one: "t\u0259xmin\u0259n %{count} ay",
          other: "t\u0259xmin\u0259n %{count} ay"
        },
        about_x_years: {
          one: "t\u0259xmin\u0259n %{count} il",
          other: "t\u0259xmin\u0259n %{count} il"
        },
        almost_x_years: {
          one: "t\u0259qrib\u0259n %{count} il",
          other: "t\u0259qrib\u0259n %{count} il"
        },
        half_a_minute: "yar\u0131m d\u0259qiq\u0259",
        less_than_x_minutes: {
          one: "%{count} d\u0259qiq\u0259d\u0259n az",
          other: "%{count} d\u0259qiq\u0259d\u0259n az"
        },
        less_than_x_seconds: {
          one: "%{count} saniy\u0259d\u0259n az",
          other: "%{count} saniy\u0259d\u0259n az"
        },
        over_x_years: {
          one: "%{count} ild\u0259n \xE7ox",
          other: "%{count} ild\u0259n \xE7ox"
        },
        x_days: {
          one: "%{count} g\xFCn",
          other: "%{count} g\xFCn"
        },
        x_minutes: {
          one: "%{count} d\u0259qiq\u0259",
          other: "%{count} d\u0259qiq\u0259"
        },
        x_months: {
          one: "%{count} ay",
          other: "%{count} ay"
        },
        x_seconds: {
          one: "%{count} saniy\u0259",
          other: "%{count} saniy\u0259"
        }
      },
      prompts: {
        day: "G\xFCn",
        hour: "Saat",
        minute: "D\u0259qiq\u0259",
        month: "Ay",
        second: "Saniy\u0259",
        year: "\u0130l"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "q\u0259bul olunmal\u0131d\u0131r",
        blank: "bo\u015F ola bilm\u0259z",
        confirmation: "t\u0259sdiq\u0259 uygun deyil",
        empty: "bo\u015F ola bilm\u0259z",
        equal_to: "%{count}-\u0259 b\u0259rab\u0259r olmal\u0131d\u0131r",
        even: "c\xFCt olmal\u0131d\u0131r",
        exclusion: "qorunur",
        greater_than: "%{count}-d\u0259n b\xF6y\xFCk olmal\u0131d\u0131r",
        greater_than_or_equal_to: "b\xF6y\xFCk v\u0259 ya %{count}-\u0259 b\u0259rab\u0259r olmal\u0131d\u0131r",
        inclusion: "siyahiy\u0259 daxil deyil",
        invalid: "yanl\u0131\u015Fd\u0131r",
        less_than: "%{count}-d\u0259n ki\xE7ik olmal\u0131d\u0131r",
        less_than_or_equal_to: "ki\xE7ik v\u0259 ya %{count}-\u0259 b\u0259rab\u0259r olmal\u0131d\u0131r",
        model_invalid: "Yoxlama u\u011Fursuz oldu: %{errors}",
        not_a_number: "r\u0259q\u0259m deyil",
        not_an_integer: "tam r\u0259q\u0259m olmal\u0131d\u0131r",
        odd: "t\u0259k olmal\u0131d\u0131r",
        other_than: "%{count}-d\u0259n f\u0259rqli olmal\u0131d\u0131r",
        present: "bo\u015F olmal\u0131d\u0131r",
        required: "m\xF6vcud olmal\u0131d\u0131r",
        taken: "art\u0131q m\xF6vcuddur",
        too_long: "\xE7ox uzundur (%{count} simvoldan \xE7ox olmal\u0131 deyil)",
        too_short: "\xE7ox q\u0131sad\u0131r (%{count} simvoldan az olmal\u0131 deyil)",
        wrong_length: "uzunluqu s\u0259hvdir (%{count} simvol olmal\u0131d\u0131r)"
      },
      template: {
        body: "A\u015Fa\u011F\u0131daki s\u0259hvl\u0259r \xFCz\u0259 \xE7\u0131xd\u0131:",
        header: {
          one: "%{model} saxlanmad\u0131: %{count} s\u0259hv",
          other: "%{model} saxlanmad\u0131: %{count} s\u0259hv"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Se\xE7in"
      },
      submit: {
        create: "%{model} yarat",
        submit: "%{model} saxla",
        update: "%{model} yenil\u0259"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      },
      transliterate: {
        rule: {
          C: "J",
          J: "Zh",
          Q: "G",
          X: "Kh",
          c: "j",
          j: "zh",
          q: "g",
          x: "kh",
          \u00C7: "Ch",
          \u00DC: "U",
          \u00E7: "ch",
          \u00FC: "u",
          \u011E: "Gh",
          \u011F: "gh",
          \u0130: "I",
          \u0131: "i",
          \u015E: "Sh",
          \u015F: "sh",
          \u018F: "E",
          \u0259: "e"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "AZN"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Milyard",
            million: "Milyon",
            quadrillion: "Kvadrilyon",
            thousand: "Min",
            trillion: "Trilyon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bayt",
              other: "Bayt"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " v\u0259 ",
        two_words_connector: " v\u0259 ",
        words_connector: ", "
      }
    },
    time: {
      am: "g\xFCnortaya q\u0259d\u0259r",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "g\xFCnortadan sonra"
    }
  };
  var be = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u041F\u0430\u043C\u044B\u043B\u043A\u0456 \u0432\u0430\u043B\u0456\u0434\u0430\u0446\u044B\u0456: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u041D\u0435\u043B\u044C\u0433\u0430 \u0432\u044B\u0434\u0430\u043B\u0456\u0446\u044C \u0437\u0430\u043F\u0456\u0441, \u0442\u0430\u043C\u0443 \u0448\u0442\u043E \u0456\u0441\u043D\u0443\u044E\u0446\u044C \u0437\u0430\u043B\u0435\u0436\u043D\u0430\u0441\u0446\u0456 %{record}",
            has_one: "\u041D\u0435\u043B\u044C\u0433\u0430 \u0432\u044B\u0434\u0430\u043B\u0456\u0446\u044C \u0437\u0430\u043F\u0456\u0441, \u0442\u0430\u043C\u0443 \u0448\u0442\u043E \u0456\u0441\u043D\u0443\u0435 \u0437\u0430\u043B\u0435\u0436\u043D\u0430\u0441\u0446\u044C %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u041F\u0430\u043D",
        "\u0410\u045E\u0442",
        "\u0421\u0435\u0440",
        "\u0427\u0446\u0432",
        "\u041F\u044F\u0442",
        "\u0421\u0443\u0431",
        "\u041D\u0434\u0437"
      ],
      abbr_month_names: [
        null,
        "\u0421\u0442\u0443",
        "\u041B\u044E\u0442",
        "\u0421\u0430\u043A",
        "\u041A\u0440\u0430",
        "\u0422\u0440\u0430",
        "\u0427\u044D\u0440",
        "\u041B\u0456\u043F",
        "\u0416\u043D\u0456",
        "\u0412\u0435\u0440",
        "\u041A\u0430\u0441",
        "\u041B\u0456\u0441",
        "\u0421\u043D\u0435"
      ],
      day_names: [
        "\u041D\u044F\u0434\u0437\u0435\u043B\u044F",
        "\u041F\u0430\u043D\u044F\u0434\u0437\u0435\u043B\u0430\u043A",
        "\u0410\u045E\u0442\u043E\u0440\u0430\u043A",
        "\u0421\u0435\u0440\u0430\u0434\u0430",
        "\u0427\u0430\u0446\u0432\u0435\u0440",
        "\u041F\u044F\u0442\u043D\u0456\u0446\u0430",
        "\u0421\u0443\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "\u0421\u0442\u0443\u0434\u0437\u0435\u043D\u044C",
        "\u041B\u044E\u0442\u044B",
        "\u0421\u0430\u043A\u0430\u0432\u0456\u043A",
        "\u041A\u0440\u0430\u0441\u0430\u0432\u0456\u043A",
        "\u0422\u0440\u0430\u0432\u0435\u043D\u044C",
        "\u0427\u044D\u0440\u0432\u0435\u043D\u044C",
        "\u041B\u0456\u043F\u0435\u043D\u044C",
        "\u0416\u043D\u0456\u0432\u0435\u043D\u044C",
        "\u0412\u0435\u0440\u0430\u0441\u0435\u043D\u044C",
        "\u041A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A",
        "\u041B\u0456\u0441\u0442\u0430\u043F\u0430\u0434",
        "\u0421\u043D\u0435\u0436\u0430\u043D\u044C"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u0437\u0456\u043D",
          many: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u0437\u0456\u043D",
          one: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u0437\u0456\u043D\u044B",
          other: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u0437\u0456\u043D"
        },
        about_x_months: {
          few: "\u043A\u0430\u043B\u044F %{count} \u043C\u0435\u0441\u044F\u0446\u0430\u045E",
          many: "\u043A\u0430\u043B\u044F %{count} \u043C\u0435\u0441\u044F\u0446\u0430\u045E",
          one: "\u043A\u0430\u043B\u044F %{count} \u043C\u0435\u0441\u044F\u0446\u0430",
          other: "\u043A\u0430\u043B\u044F %{count} \u043C\u0435\u0441\u044F\u0446\u0430\u045E"
        },
        about_x_years: {
          few: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u043E\u045E",
          many: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u043E\u045E",
          one: "\u043A\u0430\u043B\u044F %{count} \u0433\u043E\u0434\u0430",
          other: "\u043A\u0430\u043B\u044F %{count} \u0433\u0430\u0434\u043E\u045E"
        },
        almost_x_years: {
          few: "\u0430\u043C\u0430\u043B\u044C %{count} \u0433\u0430\u0434\u044B",
          many: "\u0430\u043C\u0430\u043B\u044C %{count} \u0433\u0430\u0434\u043E\u045E",
          one: "\u0430\u043C\u0430\u043B\u044C %{count} \u0433\u043E\u0434",
          other: "\u0430\u043C\u0430\u043B\u044C %{count} \u0433\u0430\u0434\u043E\u045E"
        },
        half_a_minute: "\u043F\u0430\u043B\u043E\u0432\u0430 \u0445\u0432\u0456\u043B\u0456\u043D\u044B",
        less_than_x_minutes: {
          few: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0445\u0432\u0456\u043B\u0456\u043D\u044B",
          many: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0445\u0432\u0456\u043B\u0456\u043D",
          one: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0445\u0432\u0456\u043B\u0456\u043D\u0443",
          other: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0445\u0432\u0456\u043B\u0456\u043D\u044B"
        },
        less_than_x_seconds: {
          few: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
          many: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0443",
          other: "\u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B"
        },
        over_x_years: {
          few: "\u0431\u043E\u043B\u0435\u0439 \u0437\u0430 %{count} \u0433\u0430\u0434\u044B",
          many: "\u0431\u043E\u043B\u0435\u0439 \u0437\u0430 %{count} \u0433\u0430\u0434\u043E\u045E",
          one: "\u0431\u043E\u043B\u0435\u0439 \u0437\u0430 %{count} \u0433\u043E\u0434",
          other: "\u0431\u043E\u043B\u0435\u0439 \u0437\u0430 %{count} \u0433\u043E\u0434\u0430"
        },
        x_days: {
          few: "%{count} \u0434\u043D\u0456",
          many: "%{count} \u0434\u0437\u0451\u043D",
          one: "%{count} \u0434\u0437\u0435\u043D\u044C",
          other: "%{count} \u0434\u043D\u044F"
        },
        x_minutes: {
          few: "%{count} \u0445\u0432\u0456\u043B\u0456\u043D\u044B",
          many: "%{count} \u0445\u0432\u0456\u043B\u0456\u043D",
          one: "%{count} \u0445\u0432\u0456\u043B\u0456\u043D\u0430",
          other: "%{count} \u0445\u0432\u0456\u043B\u0456\u043D\u044B"
        },
        x_months: {
          few: "%{count} \u043C\u0435\u0441\u044F\u0446\u044B",
          many: "%{count} \u043C\u0435\u0441\u044F\u0446\u0430\u045E",
          one: "%{count} \u043C\u0435\u0441\u044F\u0446",
          other: "%{count} \u043C\u0435\u0441\u044F\u0446\u0430"
        },
        x_seconds: {
          few: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
          many: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B"
        },
        x_years: {
          few: "%{count} \u0433\u0430\u0434\u044B",
          many: "%{count} \u0433\u0430\u0434\u043E\u045E",
          one: "%{count} \u0433\u043E\u0434",
          other: "%{count} \u0433\u043E\u0434\u0430"
        }
      },
      prompts: {
        day: "\u0414\u0437\u0435\u043D\u044C",
        hour: "\u0413\u0430\u0434\u0437\u0456\u043D\u0430",
        minute: "\u0425\u0432\u0456\u043B\u0456\u043D\u0430",
        month: "\u041C\u0435\u0441\u044F\u0446",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434\u0430",
        year: "\u0413\u043E\u0434"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0442\u0440\u044D\u0431\u0430 \u043F\u0440\u044B\u043D\u044F\u0446\u044C",
        blank: "\u043D\u0435 \u043C\u043E\u0436\u0430 \u0431\u044B\u0446\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        confirmation: "\u043D\u0435 \u0441\u0443\u043F\u0430\u0434\u0430\u0435 \u0437 %{attribute}",
        empty: "\u043D\u0435 \u043C\u043E\u0436\u0430 \u0431\u044B\u0446\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        equal_to: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0440\u043E\u045E\u043D\u044B\u043C %{count}",
        even: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0446\u043E\u0442\u043D\u044B\u043C",
        exclusion: "\u043C\u0430\u0435 \u0437\u0430\u0440\u044D\u0437\u0435\u0440\u0432\u0430\u0432\u0430\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435",
        greater_than: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0431\u043E\u043B\u0435\u0439 \u0437\u0430 %{count}",
        greater_than_or_equal_to: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0431\u043E\u043B\u0435\u0439 \u0446\u0456 \u0440\u043E\u045E\u043D\u044B\u043C %{count}",
        inclusion: "\u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0443\u043A\u043B\u044E\u0447\u0430\u043D\u0430 \u045E \u0441\u043F\u0456\u0441",
        invalid: "\u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435",
        less_than: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043C\u0435\u043D\u0435\u0439 \u0437\u0430 %{count}",
        less_than_or_equal_to: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043C\u0435\u043D\u0435\u0439 \u0446\u0456 \u0440\u043E\u045E\u043D\u044B\u043C %{count}",
        model_invalid: "\u0423\u0437\u043D\u0456\u043A\u043B\u0456 \u043D\u0430\u0441\u0442\u043F\u0443\u043F\u043D\u044B\u044F \u043F\u0430\u043C\u044B\u043B\u043A\u0456: %{errors}",
        not_a_number: "\u0433\u044D\u0442\u0430 \u043D\u0435 \u043B\u0456\u0447\u0431\u0430",
        not_an_integer: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0446\u044D\u043B\u0430\u0439 \u043B\u0456\u0447\u0431\u0430\u0439",
        odd: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043D\u044F\u0446\u043E\u0442\u043D\u044B\u043C",
        other_than: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0430\u0434\u0440\u043E\u0437\u043D\u0456\u0432\u0430\u0446\u0446\u0430 \u0430\u0434 %{count}",
        present: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        required: "\u043D\u0435 \u043C\u043E\u0436\u0430 \u0430\u0434\u0441\u0443\u0442\u043D\u0456\u0447\u0430\u0446\u044C",
        taken: "\u045E\u0436\u043E \u0437\u0430\u043D\u044F\u0442\u0430",
        too_long: {
          few: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0456 (\u043C\u0430\u043A\u0441\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430)",
          many: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0456 (\u043C\u0430\u043A\u0441\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)",
          one: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0456 (\u043C\u0430\u043A\u0441\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B)",
          other: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0456 (\u043C\u0430\u043A\u0441\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)"
        },
        too_short: {
          few: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0456 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430)",
          many: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0456 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)",
          one: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0456 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B)",
          other: "\u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0456 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)"
        },
        wrong_length: {
          few: "\u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u044F \u0434\u0430\u045E\u0436\u044B\u043D\u044F (\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0431\u044B\u0446\u044C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430)",
          many: "\u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u044F \u0434\u0430\u045E\u0436\u044B\u043D\u044F (\u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0431\u044B\u0446\u044C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)",
          one: "\u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u044F \u0434\u0430\u045E\u0436\u044B\u043D\u044F (\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0431\u044B\u0446\u044C %{count} \u0441\u0456\u043C\u0432\u0430\u043B)",
          other: "\u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u044F \u0434\u0430\u045E\u0436\u044B\u043D\u044F (\u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0431\u044B\u0446\u044C %{count} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E)"
        }
      },
      template: {
        body: "\u0423\u0437\u043D\u0456\u043A\u043B\u0456 \u043F\u0440\u0430\u0431\u043B\u0435\u043C\u044B \u0437 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u044B\u043C\u0456 \u043F\u0430\u043B\u044F\u043C\u0456:",
        header: {
          few: "\u043D\u0435 \u0430\u0442\u0440\u044B\u043C\u0430\u043B\u0430\u0441\u044F \u0437\u0430\u0445\u0430\u0432\u0430\u0446\u044C %{model} \u0437-\u0437\u0430 %{count} \u043F\u0430\u043C\u044B\u043B\u0430\u043A",
          many: "\u043D\u0435 \u0430\u0442\u0440\u044B\u043C\u0430\u043B\u0430\u0441\u044F \u0437\u0430\u0445\u0430\u0432\u0430\u0446\u044C %{model} \u0437-\u0437\u0430 %{count} \u043F\u0430\u043C\u044B\u043B\u0430\u043A",
          one: "\u043D\u0435 \u0430\u0442\u0440\u044B\u043C\u0430\u043B\u0430\u0441\u044F \u0437\u0430\u0445\u0430\u0432\u0430\u0446\u044C %{model} \u0437-\u0437\u0430 %{count} \u043F\u0430\u043C\u044B\u043B\u043A\u0456",
          other: "\u043D\u0435 \u0430\u0442\u0440\u044B\u043C\u0430\u043B\u0430\u0441\u044F \u0437\u0430\u0445\u0430\u0432\u0430\u0446\u044C %{model} \u0437-\u0437\u0430 %{count} \u043F\u0430\u043C\u044B\u043B\u0430\u043A"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0430\u0431\u044F\u0440\u044B\u0446\u0435"
      },
      submit: {
        create: "\u0421\u0442\u0432\u0430\u0440\u044B\u0446\u044C %{model}",
        submit: "\u0417\u0430\u0445\u0430\u0432\u0430\u0446\u044C %{model}",
        update: "\u0410\u0431\u043D\u0430\u0432\u0456\u0446\u044C %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "many",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0440\u0443\u0431."
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              few: "\u043C\u0456\u043B\u044C\u044F\u0440\u0434\u0430",
              many: "\u043C\u0456\u043B\u044C\u044F\u0440\u0434\u0430\u045E",
              one: "\u043C\u0456\u043B\u044C\u044F\u0440\u0434",
              other: "\u043C\u0456\u043B\u044C\u044F\u0440\u0434\u0430"
            },
            million: {
              few: "\u043C\u0456\u043B\u044C\u0451\u043D\u0430",
              many: "\u043C\u0456\u043B\u044C\u0451\u043D\u0430\u045E",
              one: "\u043C\u0456\u043B\u044C\u0451\u043D",
              other: "\u043C\u0456\u043B\u044C\u0451\u043D\u0430"
            },
            quadrillion: {
              few: "\u043A\u0432\u0430\u0434\u0440\u044B\u043B\u044C\u0451\u043D\u0430",
              many: "\u043A\u0432\u0430\u0434\u0440\u044B\u043B\u044C\u0451\u043D\u0430\u045E",
              one: "\u043A\u0432\u0430\u0434\u0440\u044B\u043B\u044C\u0451\u043D",
              other: "\u043A\u0432\u0430\u0434\u0440\u044B\u043B\u044C\u0451\u043D\u0430"
            },
            thousand: {
              few: "\u0442\u044B\u0441\u044F\u0447\u044B",
              many: "\u0442\u044B\u0441\u044F\u0447",
              one: "\u0442\u044B\u0441\u044F\u0447\u0430",
              other: "\u0442\u044B\u0441\u044F\u0447\u044B"
            },
            trillion: {
              few: "\u0442\u0440\u044B\u043B\u044C\u0451\u043D\u0430",
              many: "\u0442\u0440\u044B\u043B\u044C\u0451\u043D\u0430\u045E",
              one: "\u0442\u0440\u044B\u043B\u044C\u0451\u043D",
              other: "\u0442\u0440\u044B\u043B\u044C\u0451\u043D\u0430"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "\u0431\u0430\u0439\u0442\u0430",
              many: "\u0431\u0430\u0439\u0442\u0430\u045E",
              one: "\u0431\u0430\u0439\u0442",
              other: "\u0431\u0430\u0439\u0442\u0430"
            },
            eb: "\u042D\u0411",
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            pb: "\u041F\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0456 ",
        two_words_connector: " \u0456 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0440\u0430\u043D\u0456\u0446\u044B",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0432\u0435\u0447\u0430\u0440\u0430"
    }
  };
  var bg = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0438\u043C\u0430\u0448\u0435 \u0433\u0440\u0435\u0448\u043A\u0438: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u043D\u0435\u0434",
        "\u043F\u043E\u043D",
        "\u0432\u0442",
        "\u0441\u0440",
        "\u0447\u0435\u0442",
        "\u043F\u0435\u0442",
        "\u0441\u044A\u0431"
      ],
      abbr_month_names: [
        null,
        "\u044F\u043D.",
        "\u0444\u0435\u0432.",
        "\u043C\u0430\u0440\u0442",
        "\u0430\u043F\u0440.",
        "\u043C\u0430\u0439",
        "\u044E\u043D\u0438",
        "\u044E\u043B\u0438",
        "\u0430\u0432\u0433.",
        "\u0441\u0435\u043F.",
        "\u043E\u043A\u0442.",
        "\u043D\u043E\u0435\u043C.",
        "\u0434\u0435\u043A."
      ],
      day_names: [
        "\u043D\u0435\u0434\u0435\u043B\u044F",
        "\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A",
        "\u0432\u0442\u043E\u0440\u043D\u0438\u043A",
        "\u0441\u0440\u044F\u0434\u0430",
        "\u0447\u0435\u0442\u0432\u044A\u0440\u0442\u044A\u043A",
        "\u043F\u0435\u0442\u044A\u043A",
        "\u0441\u044A\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u044F\u043D\u0443\u0430\u0440\u0438",
        "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438",
        "\u043C\u0430\u0440\u0442",
        "\u0430\u043F\u0440\u0438\u043B",
        "\u043C\u0430\u0439",
        "\u044E\u043D\u0438",
        "\u044E\u043B\u0438",
        "\u0430\u0432\u0433\u0443\u0441\u0442",
        "\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438",
        "\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438",
        "\u043D\u043E\u0435\u043C\u0432\u0440\u0438",
        "\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441\u0430"
        },
        about_x_months: {
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u0435\u0446",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u0435\u0446\u0430"
        },
        about_x_years: {
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        almost_x_years: {
          one: "\u043F\u043E\u0447\u0442\u0438 %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u043F\u043E\u0447\u0442\u0438 %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        half_a_minute: "\u043F\u043E\u043B\u043E\u0432\u0438\u043D \u043C\u0438\u043D\u0443\u0442\u0430",
        less_than_x_minutes: {
          one: "\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 %{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          other: "\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 %{count} \u043C\u0438\u043D\u0443\u0442\u0438"
        },
        less_than_x_seconds: {
          one: "\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        },
        over_x_years: {
          one: "\u043D\u0430\u0434 %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u043D\u0430\u0434 %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        x_days: {
          one: "%{count} \u0434\u0435\u043D",
          other: "%{count} \u0434\u043D\u0438"
        },
        x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0438"
        },
        x_months: {
          one: "%{count} \u043C\u0435\u0441\u0435\u0446",
          other: "%{count} \u043C\u0435\u0441\u0435\u0446\u0430"
        },
        x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        }
      },
      prompts: {
        day: "\u0414\u0435\u043D",
        hour: "\u0427\u0430\u0441",
        minute: "\u041C\u0438\u043D\u0443\u0442\u0430",
        month: "\u041C\u0435\u0441\u0435\u0446",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434\u0430",
        year: "\u0413\u043E\u0434\u0438\u043D\u0430"
      }
    },
    devise: {
      failure: {
        expired: "\u0412\u0430\u0448\u0438\u044F \u0430\u043A\u0430\u0443\u043D\u0442 \u0435 \u0437\u0430\u0442\u0432\u043E\u0440\u0435\u043D \u043F\u043E\u0440\u0430\u0434\u0438 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442. \u041C\u043E\u043B\u044F \u0441\u0432\u044A\u0440\u0436\u0435\u0442\u0435 \u0441\u0435 \u0441 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440.",
        session_limited: "\u0412\u0430\u0448\u0435\u0442\u043E \u043F\u043E\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043B\u0441\u043A\u043E \u0438\u043C\u0435 \u0438 \u043F\u0430\u0440\u043E\u043B\u0430 \u0441\u0430 \u0438\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u043D\u0438 \u0432 \u0434\u0440\u0443\u0433 \u0431\u0440\u0430\u0443\u0437\u044A\u0440. \u041C\u043E\u043B\u044F \u0432\u043B\u0435\u0437\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E \u0437\u0430 \u0434\u0430 \u043F\u0440\u043E\u0434\u044A\u043B\u0436\u0438\u0442\u0435 \u0432 \u0442\u043E\u0437\u0438 \u0431\u0440\u0430\u0443\u0437\u044A\u0440."
      },
      invalid_captcha: "\u041A\u043E\u0434\u044A\u0442 \u0435 \u0433\u0440\u0435\u0448\u0435\u043D.",
      invalid_security_question: "\u041E\u0442\u0433\u043E\u0432\u043E\u0440\u0430 \u043D\u0430 \u0442\u0430\u0439\u043D\u0438\u044F \u0432\u044A\u043F\u0440\u043E\u0441 \u0435 \u0433\u0440\u0435\u0448\u0435\u043D.",
      paranoid_verification_code: {
        show: {
          submit: "\u0418\u0437\u043F\u0440\u0430\u0442\u0438",
          submit_verification_code: "\u0418\u0437\u043F\u0440\u0430\u0442\u0438 \u043A\u043E\u0434 \u0437\u0430 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435",
          verification_code: "\u041A\u043E\u0434 \u0437\u0430 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435"
        },
        updated: "\u041A\u043E\u0434\u044A\u0442 \u0437\u0430 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u0435 \u043F\u0440\u0438\u0435\u0442"
      },
      paranoid_verify: {
        code_required: "\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u043A\u043E\u0434\u0430, \u043A\u043E\u0439\u0442\u043E \u043D\u0430\u0448\u0438\u044F \u0435\u043A\u0438\u043F \u043F\u043E \u043F\u043E\u0434\u0434\u0440\u044A\u0436\u043A\u0430\u0442\u0430 \u0412\u0438 \u0435 \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u0438\u043B"
      },
      password_expired: {
        change_required: "\u0412\u0430\u0448\u0430\u0442\u0430 \u043F\u0430\u0440\u043E\u043B\u0430 \u0435 \u0438\u0437\u0442\u0435\u043A\u043B\u0430. \u041C\u043E\u043B\u044F \u043F\u043E\u0434\u043D\u043E\u0432\u0435\u0442\u0435 \u043F\u0430\u0440\u043E\u043B\u0430\u0442\u0430 \u0441\u0438.",
        show: {
          change_my_password: "\u041F\u0440\u043E\u043C\u0435\u043D\u0438 \u043F\u0430\u0440\u043E\u043B\u0430\u0442\u0430 \u043C\u0438",
          current_password: "\u041D\u0430\u0441\u0442\u043E\u044F\u0449\u0430 \u043F\u0430\u0440\u043E\u043B\u0430",
          new_password: "\u041D\u043E\u0432\u0430 \u043F\u0430\u0440\u043E\u043B\u0430",
          new_password_confirmation: "\u041F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u043D\u0430 \u043D\u043E\u0432\u0430 \u043F\u0430\u0440\u043E\u043B\u0430",
          renew_your_password: "\u041F\u043E\u0434\u043D\u043E\u0432\u0435\u0442\u0435 \u043F\u0430\u0440\u043E\u043B\u0430\u0442\u0430 \u0441\u0438"
        },
        updated: "\u0412\u0430\u0448\u0430\u0442\u0430 \u043D\u043E\u0432\u0430 \u043F\u0430\u0440\u043E\u043B\u0430 \u0435 \u0437\u0430\u043F\u0430\u0437\u0435\u043D\u0430."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u0435 \u043F\u043E\u0442\u0432\u044A\u0440\u0434\u0438",
        blank: "\u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0435 \u0431\u0435\u0437 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442",
        confirmation: "\u043D\u0435 \u0441\u044A\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0430 \u043D\u0430 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435\u0442\u043E",
        empty: "\u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0435 \u043F\u0440\u0430\u0437\u043D\u043E",
        equal_to: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442, \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 %{count}",
        equal_to_current_password: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u0430 \u043E\u0442 \u043D\u0430\u0441\u0442\u043E\u044F\u0449\u0430\u0442\u0430 \u043F\u0430\u0440\u043E\u043B\u0430.",
        equal_to_email: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u0430 \u043E\u0442 e-mail \u0430\u0434\u0440\u0435\u0441\u0430.",
        even: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u043D\u0435\u0447\u0435\u0442\u043D\u043E",
        exclusion: "\u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043B\u043D\u043E \u0437\u0430\u0434\u0430\u0434\u0435\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442",
        greater_than: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442, \u043F\u043E-\u0433\u043E\u043B\u044F\u043C\u0430 \u043E\u0442 %{count}",
        greater_than_or_equal_to: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442, \u043F\u043E-\u0433\u043E\u043B\u044F\u043C\u0430 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 %{count}",
        inclusion: "\u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0435\u043F\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442",
        invalid: "\u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0435\u0432\u044F\u0440\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442",
        less_than: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442, \u043F\u043E-\u043C\u0430\u043B\u043A\u0430 \u043E\u0442 %{count}",
        less_than_or_equal_to: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442, \u043F\u043E-\u043C\u0430\u043B\u043A\u0430 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 %{count}",
        not_a_number: "\u043D\u0435 \u0435 \u0447\u0438\u0441\u043B\u043E",
        not_an_integer: "\u043D\u0435 \u0435 \u0446\u044F\u043B\u043E \u0447\u0438\u0441\u043B\u043E",
        odd: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u0447\u0435\u0442\u043D\u043E",
        password_complexity: {
          digit: {
            one: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 \u0435\u0434\u043D\u0430 \u0446\u0438\u0444\u0440\u0430",
            other: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 %{count} \u0446\u0438\u0444\u0440\u0438"
          },
          lower: {
            one: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 \u0435\u0434\u043D\u0430 \u043C\u0430\u043B\u043A\u0430 \u0431\u0443\u043A\u0432\u0430",
            other: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 %{count} \u043C\u0430\u043B\u043A\u0438 \u0431\u0443\u043A\u0432\u0438"
          },
          symbol: {
            one: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 \u0435\u0434\u0438\u043D \u043F\u0443\u043D\u043A\u0442\u043E\u0430\u0446\u0438\u043E\u043D\u0435\u043D \u0437\u043D\u0430\u043A \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B",
            other: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 %{count} \u043F\u0443\u043D\u043A\u0442\u043E\u0430\u0446\u0438\u043E\u043D\u043D\u0438 \u0437\u043D\u0430\u043A\u0430 \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u0438"
          },
          upper: {
            one: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 \u0435\u0434\u043D\u0430 \u0433\u043B\u0430\u0432\u043D\u0430 \u0431\u0443\u043A\u0432\u0430",
            other: "\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 %{count} \u0433\u043B\u0430\u0432\u043D\u0438 \u0431\u0443\u043A\u0432\u0438"
          }
        },
        taken: "\u0432\u0435\u0447\u0435 \u0441\u044A\u0449\u0435\u0441\u0442\u0432\u0443\u0432\u0430",
        taken_in_past: "\u0435 \u0438\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u043D\u0430 \u0438 \u043F\u0440\u0435\u0434\u0438.",
        too_long: "\u0435 \u043F\u0440\u0435\u043A\u0430\u043B\u0435\u043Do \u0434\u044A\u043B\u0433\u043E (\u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0435 \u043F\u043E\u0432\u0435\u0447\u0435 \u043E\u0442 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)",
        too_short: "\u0435 \u043F\u0440\u0435\u043A\u0430\u043B\u0435\u043D\u043E \u043A\u044A\u0441\u043E (\u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)",
        wrong_length: "\u0435 \u0441 \u0433\u0440\u0435\u0448\u043D\u0430 \u0434\u044A\u043B\u0436\u0438\u043D\u0430 (\u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u0441 \u0434\u044A\u043B\u0436\u0438\u043D\u0430, \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)"
      },
      template: {
        body: "\u0412\u044A\u0437\u043D\u0438\u043A\u043D\u0430\u0445\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0438 \u0441\u044A\u0441 \u0441\u043B\u0435\u0434\u043D\u0438\u0442\u0435 \u043F\u043E\u043B\u0435\u0442\u0430:",
        header: {
          one: "%{model}: \u0437\u0430\u043F\u0438\u0441\u044A\u0442 \u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u0435\u043D \u0437\u0430\u0440\u0430\u0434\u0438 %{count} \u0433\u0440\u0435\u0448\u043A\u0430",
          other: "%{model}: \u0437\u0430\u043F\u0438\u0441\u044A\u0442 \u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u0435\u043D \u0437\u0430\u0440\u0430\u0434\u0438 %{count} \u0433\u0440\u0435\u0448\u043A\u0438"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u041C\u043E\u043B\u044F \u043E\u0442\u0431\u0435\u043B\u0435\u0436\u0435\u0442\u0435"
      },
      submit: {
        create: "\u0421\u044A\u0437\u0434\u0430\u0439 %{model}",
        submit: "\u0417\u0430\u043F\u0430\u0437\u0438 %{model}",
        update: "\u041E\u0431\u043D\u043E\u0432\u0438 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u0410: "A",
          \u0411: "B",
          \u0412: "V",
          \u0413: "G",
          \u0414: "D",
          \u0415: "E",
          \u0416: "Zh",
          \u0417: "Z",
          \u0418: "I",
          \u0419: "Y",
          \u041A: "K",
          \u041B: "L",
          \u041C: "M",
          \u041D: "N",
          \u041E: "O",
          \u041F: "P",
          \u0420: "R",
          \u0421: "S",
          \u0422: "T",
          \u0423: "U",
          \u0424: "F",
          \u0425: "H",
          \u0426: "Ts",
          \u0427: "Ch",
          \u0428: "Sh",
          \u0429: "Sht",
          \u042A: "A",
          \u042C: "Y",
          \u042E: "Yu",
          \u042F: "Ya",
          \u0430: "a",
          \u0431: "b",
          \u0432: "v",
          \u0433: "g",
          \u0434: "d",
          \u0435: "e",
          \u0436: "zh",
          \u0437: "z",
          \u0438: "i",
          \u0439: "y",
          \u043A: "k",
          \u043B: "l",
          \u043C: "m",
          \u043D: "n",
          \u043E: "o",
          \u043F: "p",
          \u0440: "r",
          \u0441: "s",
          \u0442: "t",
          \u0443: "u",
          \u0444: "f",
          \u0445: "h",
          \u0446: "ts",
          \u0447: "ch",
          \u0448: "sh",
          \u0449: "sht",
          \u044A: "a",
          \u044C: "y",
          \u044E: "yu",
          \u044F: "ya"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u043B\u0432."
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u043C\u0438\u043B\u0438\u0430\u0440\u0434\u0430",
            million: "\u043C\u0438\u043B\u0438\u043E\u043D\u0430",
            quadrillion: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u0438\u043E\u043D\u0430",
            thousand: "\u0445\u0438\u043B\u044F\u0434\u0438",
            trillion: "\u0442\u0440\u0438\u043B\u0438\u043E\u043D\u0430",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0411\u0430\u0439\u0442",
              other: "\u0411\u0430\u0439\u0442\u0430"
            },
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0438 ",
        two_words_connector: " \u0438 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u043F\u0440\u0435\u0434\u0438 \u043E\u0431\u044F\u0434",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u0441\u043B\u0435\u0434\u043E\u0431\u0435\u0434"
    }
  };
  var bn = {
    date: {
      abbr_day_names: [
        "\u09B0\u09AC\u09BF\u09AC\u09BE\u09B0",
        "\u09B8\u09CB\u09AE\u09AC\u09BE\u09B0",
        "\u09AE\u0999\u09CD\u0997\u09B2\u09AC\u09BE\u09B0",
        "\u09AC\u09C1\u09A7\u09AC\u09BE\u09B0",
        "\u09AC\u09C3\u09B9\u09B8\u09CD\u09AA\u09A4\u09BF\u09AC\u09BE\u09B0",
        "\u09B6\u09C1\u0995\u09CD\u09B0\u09AC\u09BE\u09B0",
        "\u09B6\u09A8\u09BF\u09AC\u09BE\u09B0"
      ],
      abbr_month_names: [
        null,
        "\u099C\u09BE\u09A8\u09C1\u09AF\u09BC\u09BE\u09B0\u09BF",
        "\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\u09AF\u09BC\u09BE\u09B0\u09BF",
        "\u09AE\u09BE\u09B0\u09CD\u099A",
        "\u098F\u09AA\u09CD\u09B0\u09BF\u09B2",
        "\u09AE\u09C7",
        "\u099C\u09C1\u09A8",
        "\u099C\u09C1\u09B2\u09BE\u0987",
        "\u0986\u0997\u09B8\u09CD\u099F",
        "\u09B8\u09C7\u09AA\u09CD\u099F\u09C7\u09AE\u09CD\u09AC\u09B0",
        "\u0985\u0995\u09CD\u099F\u09CB\u09AC\u09B0",
        "\u09A8\u09AD\u09C7\u09AE\u09CD\u09AC\u09B0",
        "\u09A1\u09BF\u09B8\u09C7\u09AE\u09CD\u09AC\u09B0"
      ],
      day_names: [
        "\u09B0\u09AC\u09BF\u09AC\u09BE\u09B0",
        "\u09B8\u09CB\u09AE\u09AC\u09BE\u09B0",
        "\u09AE\u0999\u09CD\u0997\u09B2\u09AC\u09BE\u09B0",
        "\u09AC\u09C1\u09A7\u09AC\u09BE\u09B0",
        "\u09AC\u09C3\u09B9\u09B8\u09CD\u09AA\u09A4\u09BF\u09AC\u09BE\u09B0",
        "\u09B6\u09C1\u0995\u09CD\u09B0\u09AC\u09BE\u09B0",
        "\u09B6\u09A8\u09BF\u09AC\u09BE\u09B0"
      ],
      formats: {
        default: "%e/%m/%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u099C\u09BE\u09A8\u09C1\u09AF\u09BC\u09BE\u09B0\u09BF",
        "\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\u09AF\u09BC\u09BE\u09B0\u09BF",
        "\u09AE\u09BE\u09B0\u09CD\u099A",
        "\u098F\u09AA\u09CD\u09B0\u09BF\u09B2",
        "\u09AE\u09C7",
        "\u099C\u09C1\u09A8",
        "\u099C\u09C1\u09B2\u09BE\u0987",
        "\u0986\u0997\u09B8\u09CD\u099F",
        "\u09B8\u09C7\u09AA\u09CD\u099F\u09C7\u09AE\u09CD\u09AC\u09B0",
        "\u0985\u0995\u09CD\u099F\u09CB\u09AC\u09B0",
        "\u09A8\u09AD\u09C7\u09AE\u09CD\u09AC\u09B0",
        "\u09A1\u09BF\u09B8\u09C7\u09AE\u09CD\u09AC\u09B0"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC \u09E7 \u0998\u09A3\u09CD\u099F\u09BE",
          other: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC %{count} \u0998\u09A3\u09CD\u099F\u09BE"
        },
        about_x_months: {
          one: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC \u09E7 \u09AE\u09BE\u09B8",
          other: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC %{count} \u09AE\u09BE\u09B8"
        },
        about_x_years: {
          one: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC \u09E7 \u09AC\u099B\u09B0",
          other: "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC %{count} \u09AC\u099B\u09B0"
        },
        almost_x_years: {
          one: "\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09AC\u099B\u09B0",
          other: "\u09AA\u09CD\u09B0\u09BE\u09DF %{count} \u09AC\u099B\u09B0"
        },
        half_a_minute: "\u0985\u09B0\u09CD\u09A7 \u09AE\u09BF\u09A8\u09BF\u099F",
        less_than_x_minutes: {
          one: "\u09E7 \u09AE\u09BF\u09A8\u09BF\u099F\u09C7\u09B0 \u0995\u09AE",
          other: "%{count} \u09AE\u09BF\u09A8\u09BF\u099F\u09C7\u09B0 \u0995\u09AE"
        },
        less_than_x_seconds: {
          one: "\u09E7 \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\u09B0 \u0995\u09AE",
          other: "%{count} \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\u09C7\u09B0 \u0995\u09AE"
        },
        over_x_years: {
          one: "\u09E7 \u09AC\u099B\u09B0\u09C7\u09B0 \u09AC\u09C7\u09B6\u09BF",
          other: "%{count} \u09AC\u099B\u09B0\u09C7\u09B0 \u09AC\u09C7\u09B6\u09BF"
        },
        x_days: {
          one: "\u09E7 \u09A6\u09BF\u09A8",
          other: "%{count} \u09A6\u09BF\u09A8"
        },
        x_minutes: {
          one: "\u09E7 \u09AE\u09BF\u09A8\u09BF\u099F",
          other: "%{count} \u09AE\u09BF\u09A8\u09BF\u099F"
        },
        x_months: {
          one: "\u09E7 \u09AE\u09BE\u09B8",
          other: "%{count} \u09AE\u09BE\u09B8"
        },
        x_seconds: {
          one: "\u09E7 \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1",
          other: "%{count} \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1"
        }
      },
      prompts: {
        day: "\u09A6\u09BF\u09A8",
        hour: "\u0998\u09A3\u09CD\u099F\u09BE",
        minute: "\u09AE\u09BF\u09A8\u09BF\u099F",
        month: "\u09AE\u09BE\u09B8",
        second: "\u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1",
        year: "\u09AC\u099B\u09B0"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0997\u09CD\u09B0\u09BE\u09B9\u09CD\u09AF \u0995\u09B0\u09A4\u09C7 \u09B9\u09AC\u09C7",
        blank: "\u09AB\u09BE\u0981\u0995\u09BE \u09B0\u09BE\u0996\u09BE \u09AF\u09BE\u09AC\u09C7 \u09A8\u09BE",
        confirmation: "\u0985\u09A8\u09C1\u09AE\u09CB\u09A6\u09A8\u09C7\u09B0 \u09B8\u0999\u09CD\u0997\u09C7 \u09AE\u09BF\u09B2\u099B\u09C7 \u09A8\u09BE",
        empty: "\u0996\u09BE\u09B2\u09BF \u09B0\u09BE\u0996\u09BE \u09AF\u09BE\u09AC\u09C7 \u09A8\u09BE",
        equal_to: "%{count} \u098F\u09B0 \u09B8\u0999\u09CD\u0997\u09C7 \u09B8\u09AE\u09BE\u09A8 \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        even: "\u099C\u09CB\u09A1\u09BC \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        exclusion: "\u09B0\u09BF\u09B8\u09BE\u09B0\u09CD\u09AD \u0995\u09B0\u09BE \u0986\u099B\u09C7",
        greater_than: "%{count} \u09A5\u09C7\u0995\u09C7 \u09AC\u09A1\u09BC \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        greater_than_or_equal_to: "%{count} \u09A5\u09C7\u0995\u09C7 \u09AC\u09A1\u09BC \u0985\u09A5\u09AC\u09BE \u09A4\u09BE\u09B0 \u09B8\u09AE\u09BE\u09A8 \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        inclusion: "\u09A4\u09BE\u09B2\u09BF\u0995\u09BE\u09AF\u09BC \u0985\u09A8\u09CD\u09A4\u09B0\u09CD\u09AD\u09C1\u0995\u09CD\u09A4 \u09A8\u09AF\u09BC",
        invalid: "\u09B8\u09A0\u09BF\u0995 \u09A8\u09AF\u09BC",
        less_than: "%{count} \u09A5\u09C7\u0995\u09C7 \u099B\u09CB\u099F\u09CB \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        less_than_or_equal_to: "%{count} \u09A5\u09C7\u0995\u09C7 \u099B\u09CB\u099F\u09CB \u0985\u09A5\u09AC\u09BE \u09A4\u09BE\u09B0 \u09B8\u09AE\u09BE\u09A8 \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        not_a_number: "\u09A8\u09AE\u09CD\u09AC\u09B0 \u09A8\u09AF\u09BC",
        odd: "\u09AC\u09C7\u099C\u09CB\u09A1\u09BC \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7",
        taken: "\u0986\u0997\u09C7\u0987 \u09A8\u09BF\u09AF\u09BC\u09C7 \u09A8\u09C7\u0993\u09AF\u09BC\u09BE \u09B9\u09AF\u09BC\u09C7\u099B\u09C7",
        too_long: "\u0996\u09C1\u09AC \u09AC\u09A1\u09BC\u09CB (\u09B8\u09B0\u09CD\u09AC\u09CB\u099A\u09CD\u099A %{count} \u0985\u0995\u09CD\u09B7\u09B0)",
        too_short: "\u0996\u09C1\u09AC \u099B\u09CB\u099F\u09CB (\u09B8\u09B0\u09CD\u09AC\u09A8\u09BF\u09AE\u09CD\u09A8 %{count} \u0985\u0995\u09CD\u09B7\u09B0)",
        wrong_length: "\u09A6\u09C8\u09B0\u09CD\u0998\u09CD\u09AF\u099F\u09BF \u09B8\u09A0\u09BF\u0995 \u09A8\u09AF\u09BC (%{count} \u0985\u0995\u09CD\u09B7\u09B0 \u09B9\u09A4\u09C7 \u09B9\u09AC\u09C7)"
      },
      template: {
        body: "\u098F\u0987 \u09AB\u09BF\u09B2\u09CD\u09A1\u0997\u09C1\u09B2\u09CB\u09A4\u09C7 \u0995\u09BF\u099B\u09C1 \u09B8\u09AE\u09B8\u09CD\u09AF\u09BE \u09A6\u09C7\u0996\u09BE \u09A6\u09BF\u09AF\u09BC\u09C7\u099B\u09C7:",
        header: {
          one: "\u09E7\u099F\u09BF \u09A4\u09CD\u09B0\u09C1\u099F\u09BF\u09B0 \u0995\u09BE\u09B0\u09A3\u09C7 %{model} \u09B8\u0982\u09B0\u0995\u09CD\u09B7\u09A3 \u0995\u09B0\u09BE \u09B8\u09AE\u09CD\u09AD\u09AC \u09B9\u09AF\u09BC\u09A8\u09BF",
          other: "%{count}\u099F\u09BF \u09A4\u09CD\u09B0\u09C1\u099F\u09BF\u09B0 \u0995\u09BE\u09B0\u09A3\u09C7 %{model} \u09B8\u0982\u09B0\u0995\u09CD\u09B7\u09A3 \u0995\u09B0\u09BE \u09B8\u09AE\u09CD\u09AD\u09AC \u09B9\u09AF\u09BC\u09A8\u09BF"
        }
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u09F3"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u09AC\u09BE\u0987\u099F",
              other: "\u09AC\u09BE\u0987\u099F"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u098F\u09AC\u0982 ",
        two_words_connector: " \u098F\u09AC\u0982 ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %e %B %Y %H:%M:%S %z",
        long: "%e %B %Y %H:%M",
        short: "%e %b %H:%M"
      },
      pm: "pm"
    }
  };
  var bs = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validacija nije uspjela: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Nije mogu\u0107e izbrisati zapis jer postoje ovisni %{record}",
            has_one: "Nije mogu\u0107e izbrisati zapis jer postoji ovisan %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "ned",
        "pon",
        "uto",
        "sri",
        "\u010Det",
        "pet",
        "sub"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "nedjelja",
        "ponedjeljak",
        "utorak",
        "srijeda",
        "\u010Detvrtak",
        "petak",
        "subota"
      ],
      formats: {
        default: "%d.%m.%Y.",
        long: "%e. %B %Y.",
        short: "%e. %b. %Y."
      },
      month_names: [
        null,
        "januar",
        "februar",
        "mart",
        "april",
        "maj",
        "juni",
        "juli",
        "august",
        "septembar",
        "oktobar",
        "novembar",
        "decembar"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "oko %{count} sata",
          many: "oko %{count} sati",
          one: "oko sat",
          other: "oko %{count} sati"
        },
        about_x_months: {
          few: "oko %{count} mjeseca",
          many: "oko %{count} mjeseci",
          one: "oko mjesec",
          other: "oko %{count} mjeseci"
        },
        about_x_years: {
          few: "oko %{count} godine",
          many: "oko %{count} godina",
          one: "oko godine",
          other: "oko %{count} godina"
        },
        almost_x_years: {
          few: "skoro %{count} godine",
          many: "skoro %{count} godina",
          one: "skoro %{count} godina",
          other: "skoro %{count} godina"
        },
        half_a_minute: "pola minute",
        less_than_x_minutes: {
          few: "manje od %{count} minute",
          many: "manje od %{count} minuta",
          one: "manje od minute",
          other: "manje od %{count} minuta"
        },
        less_than_x_seconds: {
          few: "manje od %{count} sekunde",
          many: "manje od %{count} sekundi",
          one: "manje od sekunde",
          other: "manje od %{count} sekundi"
        },
        over_x_years: {
          few: "preko %{count} godine",
          many: "preko %{count} godina",
          one: "preko godine",
          other: "preko %{count} godina"
        },
        x_days: {
          few: "%{count} dana",
          many: "%{count} dana",
          one: "%{count} dan",
          other: "%{count} dana"
        },
        x_minutes: {
          few: "%{count} minute",
          many: "%{count} minuta",
          one: "%{count} minut",
          other: "%{count} minuta"
        },
        x_months: {
          few: "%{count} mjeseca",
          many: "%{count} mjeseci",
          one: "%{count} mjesec",
          other: "%{count} mjeseci"
        },
        x_seconds: {
          few: "%{count} sekunde",
          many: "%{count} sekundi",
          one: "%{count} sekund",
          other: "%{count} sekundi"
        }
      },
      prompts: {
        day: "dan",
        hour: "sat",
        minute: "minut",
        month: "mjesec",
        second: "sekundi",
        year: "godina"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mora biti prihva\u0107eno",
        blank: "ne smije biti prazno",
        confirmation: "se ne poklapa sa potvrdom",
        empty: "ne smije biti prazno",
        equal_to: "mora biti %{count}",
        even: "mora biti parno",
        exclusion: "je rezervisano",
        greater_than: "mora biti ve\u0107e od %{count}",
        greater_than_or_equal_to: "mora biti ve\u0107e ili jednako %{count}",
        inclusion: "nije uklju\u010Deno u listu",
        invalid: "nije validno",
        less_than: "mora biti manje od %{count}",
        less_than_or_equal_to: "mora biti manje ili jednako %{count}",
        not_a_number: "nije broj",
        not_an_integer: "mora biti cijeli broj",
        odd: "mora biti neparno",
        other_than: "mora biti razli\u010Dito od %{count}",
        present: "mora biti prazno",
        taken: "je ve\u0107 zauzet",
        too_long: "je predugo (maksimalno je dozvoljeno %{count} znakova)",
        too_short: "je prekratko (predvi\u0111eno je minimalno %{count} znakova)",
        wrong_length: "je pogre\u0161ne du\u017Eine (trebalo bi biti ta\u010Dno %{count} znakova)"
      },
      template: {
        body: "Desili su se problemi sa sljede\u0107im poljima:",
        header: {
          few: "%{count} gre\u0161ke su sprije\u010Dile da se ovaj %{model} spremi",
          many: "%{count} gre\u0161aka je sprije\u010Dilo da se ovaj %{model} spremi",
          one: "%{count} gre\u0161ka je sprije\u010Dila da se ovaj %{model} spremi",
          other: "%{count} gre\u0161aka je sprije\u010Dilo da se ovaj %{model} spremi"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Molimo odaberite"
      },
      submit: {
        create: "Kreiraj %{model}",
        submit: "Sa\u010Duvaj %{model}",
        update: "Osvje\u017Ei %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n%u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: true,
          unit: "KM"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: true
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              few: "milijarde",
              many: "milijardi",
              one: "milijarda",
              other: "milijardi"
            },
            million: {
              few: "miliona",
              many: "miliona",
              one: "milion",
              other: "miliona"
            },
            quadrillion: {
              few: "bilijarde",
              many: "bilijardi",
              one: "bilijarda",
              other: "bilijardi"
            },
            thousand: {
              few: "hiljade",
              many: "hiljada",
              one: "hiljada",
              other: "hiljada"
            },
            trillion: {
              few: "biliona",
              many: "biliona",
              one: "bilion",
              other: "biliona"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 0,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "bajta",
              many: "bajtova",
              one: "bajt",
              other: "bajtova"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " i ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d.%m.%Y. %H:%M:%S",
        long: "%d. %B %Y. - %H:%M:%S",
        short: "%d. %b %Y. %H:%M"
      },
      pm: "pm"
    }
  };
  var by = {
    devise: {
      failure: {
        expired: "\u0412\u0430\u0448 \u0443\u043B\u0456\u043A\u043E\u0432\u044B \u0437\u0430\u043F\u0456\u0441 \u0441\u0430\u0441\u0442\u0430\u0440\u044D\u045E \u0437-\u0437\u0430 \u043D\u0435\u0430\u043A\u0442\u044B\u045E\u043D\u0430\u0441\u0446\u0456. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0437\u0432\u044F\u0436\u044B\u0446\u0435\u0441\u044F \u0437 \u0430\u0434\u043C\u0456\u043D\u0456\u0441\u0442\u0440\u0430\u0442\u0430\u0440\u0430\u043C.",
        session_limited: "\u0412\u0430\u0448\u044B \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B \u045E\u0432\u0430\u0445\u043E\u0434\u0443 \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u044E\u0446\u0446\u0430 \u045E \u0456\u043D\u0448\u044B\u043C \u0431\u0440\u0430\u045E\u0437\u044D\u0440\u044B. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0430\u045E\u0442\u0430\u0440\u044B\u0437\u0443\u0439\u0446\u0435\u0441\u044F \u0437\u043D\u043E\u045E, \u043A\u0430\u0431 \u043F\u0440\u0430\u0446\u044F\u0433\u043D\u0443\u0446\u044C \u0443 \u0433\u044D\u0442\u044B\u043C \u0431\u0440\u0430\u045E\u0437\u044D\u0440\u044B."
      },
      invalid_captcha: "\u0423\u0432\u0435\u0434\u0437\u0435\u043D\u044B \u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043A\u043E\u0434 \u043A\u0430\u043F\u0447\u044B.",
      invalid_security_question: "\u0410\u0434\u043A\u0430\u0437 \u043D\u0430 \u0441\u0430\u043A\u0440\u044D\u0442\u043D\u0430\u0435 \u043F\u044B\u0442\u0430\u043D\u043D\u0435 \u0431\u044B\u045E \u043D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B.",
      paranoid_verification_code: {
        show: {
          submit: "\u0410\u0434\u043F\u0440\u0430\u0432\u0456\u0446\u044C",
          submit_verification_code: "\u0423\u0432\u043E\u0434 \u043A\u043E\u0434\u0430 \u043F\u0430\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043D\u043D\u044F",
          verification_code: "\u041A\u043E\u0434 \u043F\u0430\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043D\u043D\u044F"
        },
        updated: "\u041A\u043E\u0434 \u0441\u043F\u0440\u0430\u045E\u0434\u0436\u0430\u043D\u043D\u044F \u043F\u0440\u044B\u043D\u044F\u0442\u044B"
      },
      paranoid_verify: {
        code_required: "\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u043E\u0434, \u0430\u0442\u0440\u044B\u043C\u0430\u043D\u044B \u0430\u0434 \u043D\u0430\u0448\u0430\u0439 \u043A\u0430\u043C\u0430\u043D\u0434\u044B \u043F\u0430\u0434\u0442\u0440\u044B\u043C\u043A\u0456"
      },
      password_expired: {
        change_required: "\u0412\u0430\u0448 \u043F\u0430\u0440\u043E\u043B\u044C \u0441\u0430\u0441\u0442\u0430\u0440\u044D\u045E. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0441\u0442\u0430\u043B\u044E\u0439\u0446\u0435 \u043D\u043E\u0432\u044B.",
        show: {
          change_my_password: "\u0417\u043C\u044F\u043D\u0456\u0446\u044C \u043F\u0430\u0440\u043E\u043B\u044C",
          current_password: "\u0421\u0443\u0447\u0430\u0441\u043D\u044B \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password: "\u041D\u043E\u0432\u044B \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password_confirmation: "\u041F\u0430\u0446\u0432\u0435\u0440\u0434\u0437\u0456\u0446\u0435 \u043D\u043E\u0432\u044B \u043F\u0430\u0440\u043E\u043B\u044C",
          renew_your_password: "\u0417\u043C\u0435\u043D\u0430 \u043F\u0430\u0440\u043E\u043B\u044F"
        },
        updated: "\u0412\u0430\u0448 \u043D\u043E\u0432\u044B \u043F\u0430\u0440\u043E\u043B\u044C \u0437\u0430\u0445\u0430\u0432\u0430\u043D\u044B."
      }
    },
    errors: {
      messages: {
        equal_to_current_password: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0430\u0434\u0440\u043E\u0437\u043D\u0456\u0432\u0430\u0446\u0446\u0430 \u0430\u0434 \u0441\u0443\u0447\u0430\u0441\u043D\u0430\u0433\u0430 \u043F\u0430\u0440\u043E\u043B\u044F.",
        equal_to_email: "\u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0430\u0434\u0440\u043E\u0437\u043D\u0456\u0432\u0430\u0446\u0446\u0430 \u0430\u0434 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430\u0439 \u043F\u043E\u0448\u0442\u044B.",
        password_complexity: {
          digit: {
            few: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043B\u0456\u0447\u0431\u044B",
            many: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043B\u0456\u0447\u0431\u044B",
            one: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C \u0430\u0434\u043D\u0443 \u043B\u0456\u0447\u0431\u0443",
            other: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043B\u0456\u0447\u0431\u044B"
          },
          lower: {
            few: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043C\u0430\u043B\u044Bx \u043B\u0456\u0442\u0430\u0440\u044B",
            many: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043C\u0430\u043B\u044Bx \u043B\u0456\u0442\u0430\u0440\u044B",
            one: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C \u0430\u0434\u043D\u0443 \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u0443\u044E \u043B\u0456\u0442\u0430\u0440\u0443",
            other: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u043C\u0430\u043B\u044Bx \u043B\u0456\u0442\u0430\u0440\u044B"
          },
          symbol: {
            few: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0437\u043D\u0430\u043A\u0430 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u044B\u0456 \u0430\u0431\u043E \u0441\u0456\u043C\u0432\u0430\u043B\u0430",
            many: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0437\u043D\u0430\u043A\u0430 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u044B\u0456 \u0430\u0431\u043E \u0441\u0456\u043C\u0432\u0430\u043B\u0430",
            one: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C \u0430\u0434\u0437\u0456\u043D \u0437\u043D\u0430\u043A \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u044B\u0456 \u0430\u0431\u043E \u0441\u0456\u043C\u0432\u0430\u043B",
            other: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0437\u043D\u0430\u043A\u0430 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u044B\u0456 \u0430\u0431\u043E \u0441\u0456\u043C\u0432\u0430\u043B\u0430"
          },
          upper: {
            few: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0432\u044F\u043B\u0456\u043A\u0456x \u043B\u0456\u0442\u0430\u0440\u044B",
            many: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0432\u044F\u043B\u0456\u043A\u0456x \u043B\u0456\u0442\u0430\u0440\u044B",
            one: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C \u0430\u0434\u043D\u0443 \u0432\u044F\u043B\u0456\u043A\u0443\u044E \u043B\u0456\u0442\u0430\u0440\u0443",
            other: "\u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0443\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0445\u043E\u0446\u044C %{count} \u0432\u044F\u043B\u0456\u043A\u0456x \u043B\u0456\u0442\u0430\u0440\u044B"
          }
        },
        taken_in_past: "\u0443\u0436\u043E \u0440\u0430\u043D\u0435\u0439 \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u045E\u0441\u044F."
      }
    }
  };
  var ca = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3 ha fallat: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No es pot eliminar el registre perqu\xE8 existeixen %{record} dependents",
            has_one: "No es pot eliminar el registre perqu\xE8 existeix un %{record} dependent"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Dg",
        "Dl",
        "Dm",
        "Dc",
        "Dj",
        "Dv",
        "Ds"
      ],
      abbr_month_names: [
        null,
        "Gen",
        "Feb",
        "Mar",
        "Abr",
        "Mai",
        "Jun",
        "Jul",
        "Ago",
        "Set",
        "Oct",
        "Nov",
        "Des"
      ],
      day_names: [
        "Diumenge",
        "Dilluns",
        "Dimarts",
        "Dimecres",
        "Dijous",
        "Divendres",
        "Dissabte"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "Gener",
        "Febrer",
        "Mar\xE7",
        "Abril",
        "Maig",
        "Juny",
        "Juliol",
        "Agost",
        "Setembre",
        "Octubre",
        "Novembre",
        "Desembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "aproximadament %{count} hora",
          other: "aproximadament %{count} hores"
        },
        about_x_months: {
          one: "aproximadament %{count} mes",
          other: "aproximadament %{count} mesos"
        },
        about_x_years: {
          one: "aproximadament %{count} any",
          other: "aproximadament %{count} anys"
        },
        almost_x_years: {
          one: "quasi %{count} any",
          other: "quasi %{count} anys"
        },
        half_a_minute: "mig minut",
        less_than_x_minutes: {
          one: "menys d'%{count} minut",
          other: "menys de %{count} minuts"
        },
        less_than_x_seconds: {
          one: "menys d'%{count} segon",
          other: "menys de %{count} segons"
        },
        over_x_years: {
          one: "m\xE9s d'%{count} any",
          other: "m\xE9s de %{count} anys"
        },
        x_days: {
          one: "%{count} dia",
          other: "%{count} dies"
        },
        x_minutes: {
          one: "%{count} minut",
          other: "%{count} minuts"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} mesos"
        },
        x_seconds: {
          one: "%{count} segon",
          other: "%{count} segons"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "dia",
        hour: "hora",
        minute: "minut",
        month: "mes",
        second: "segon",
        year: "any"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "ha de ser acceptat",
        blank: "no pot estar en blanc",
        confirmation: "no coincideix",
        empty: "no pot estar buit",
        equal_to: "ha de ser igual a %{count}",
        even: "ha de ser parell",
        exclusion: "est\xE0 reservat",
        greater_than: "ha de ser m\xE9s gran que %{count}",
        greater_than_or_equal_to: "ha de ser m\xE9s gran o igual a %{count}",
        inclusion: "no est\xE0 incl\xF3s a la llista",
        invalid: "no \xE9s v\xE0lid",
        less_than: "ha de ser menor que %{count}",
        less_than_or_equal_to: "ha de ser menor o igual a %{count}",
        model_invalid: "La validaci\xF3 ha fallat: %{errors}",
        not_a_number: "no \xE9s un n\xFAmero",
        not_an_integer: "ha de ser un enter",
        odd: "ha de ser senar",
        other_than: "ha de ser diferent de %{count}",
        present: "ha d'estar en blanc",
        required: "ha d'existir",
        taken: "no est\xE0 disponible",
        too_long: {
          one: "\xE9s massa llarg (%{count} car\xE0cter m\xE0xim)",
          other: "\xE9s massa llarg (%{count} car\xE0cters m\xE0xim)"
        },
        too_short: {
          one: "\xE9s massa curt (%{count} car\xE0cter m\xEDnim)",
          other: "\xE9s massa curt (%{count} car\xE0cters m\xEDnim)"
        },
        wrong_length: {
          one: "no t\xE9 la longitud correcta (%{count} car\xE0cter exactament)",
          other: "no t\xE9 la longitud correcta (%{count} car\xE0cters exactament)"
        }
      },
      template: {
        body: "Hi ha hagut problemes amb els seg\xFCents camps:",
        header: {
          one: "No s'ha pogut desar aquest/a %{model} perqu\xE8 hi ha %{count} error",
          other: "No s'ha pogut desar aquest/a %{model} perqu\xE8 hi ha hagut %{count} errors"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Si us plau tria"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualitzar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C0: "A",
          \u00C1: "A",
          \u00C7: "C",
          \u00C8: "E",
          \u00C9: "E",
          \u00CB: "E",
          \u00CD: "I",
          \u00CF: "I",
          \u00D2: "O",
          \u00D3: "O",
          \u00DA: "U",
          \u00DC: "U",
          \u00E0: "a",
          \u00E1: "a",
          \u00E7: "c",
          \u00E8: "e",
          \u00E9: "e",
          \u00EB: "e",
          \u00ED: "i",
          \u00EF: "i",
          \u00F2: "o",
          \u00F3: "o",
          \u00FA: "u",
          \u00FC: "u"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil milions",
            million: {
              one: "mili\xF3",
              other: "milions"
            },
            quadrillion: {
              one: "quadrili\xF3",
              other: "quadrilions"
            },
            thousand: {
              one: "miler",
              other: "milers"
            },
            trillion: {
              one: "bili\xF3",
              other: "bilions"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", i ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %d de %B de %Y %H:%M:%S %z",
        long: "%d de %B de %Y %H:%M",
        short: "%d de %b %H:%M"
      },
      pm: "pm"
    }
  };
  var cs = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validace je ne\xFAspe\u0161n\xE1: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Nem\u016F\u017Eu smazat polo\u017Eku proto\u017Ee existuje z\xE1visl\xE9/\xFD %{record}",
            has_one: "Nem\u016F\u017Eu smazat polo\u017Eku proto\u017Ee existuje z\xE1visl\xE1/\xFD/\xE9 %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Ne",
        "Po",
        "\xDAt",
        "St",
        "\u010Ct",
        "P\xE1",
        "So"
      ],
      abbr_month_names: [
        null,
        "Led",
        "\xDAno",
        "B\u0159e",
        "Dub",
        "Kv\u011B",
        "\u010Cvn",
        "\u010Cvc",
        "Srp",
        "Z\xE1\u0159",
        "\u0158\xEDj",
        "Lis",
        "Pro"
      ],
      day_names: [
        "Ned\u011Ble",
        "Pond\u011Bl\xED",
        "\xDAter\xFD",
        "St\u0159eda",
        "\u010Ctvrtek",
        "P\xE1tek",
        "Sobota"
      ],
      formats: {
        default: "%d. %m. %Y",
        long: "%d. %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Leden",
        "\xDAnor",
        "B\u0159ezen",
        "Duben",
        "Kv\u011Bten",
        "\u010Cerven",
        "\u010Cervenec",
        "Srpen",
        "Z\xE1\u0159\xED",
        "\u0158\xEDjen",
        "Listopad",
        "Prosinec"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "asi %{count} hodinami",
          one: "asi hodinou",
          other: "asi %{count} hodinami"
        },
        about_x_months: {
          few: "asi %{count} m\u011Bs\xEDci",
          one: "asi m\u011Bs\xEDcem",
          other: "asi %{count} m\u011Bs\xEDci"
        },
        about_x_years: {
          few: "asi %{count} roky",
          one: "asi rokem",
          other: "asi %{count} roky"
        },
        almost_x_years: {
          few: "t\xE9m\u011B\u0159 %{count} roky",
          one: "t\xE9m\u011B\u0159 rokem",
          other: "t\xE9m\u011B\u0159 %{count} roky"
        },
        half_a_minute: "p\u016Fl minutou",
        less_than_x_minutes: {
          few: "ani ne %{count} minutami",
          one: "necelou minutou",
          other: "ani ne %{count} minutami"
        },
        less_than_x_seconds: {
          few: "ani ne %{count} sekundami",
          one: "necelou sekundou",
          other: "ani ne %{count} sekundami"
        },
        over_x_years: {
          few: "v\xEDce ne\u017E %{count} roky",
          one: "v\xEDce ne\u017E rokem",
          other: "v\xEDce ne\u017E %{count} roky"
        },
        x_days: {
          few: "%{count} dny",
          one: "24 hodinami",
          other: "%{count} dny"
        },
        x_minutes: {
          few: "%{count} minutami",
          one: "minutou",
          other: "%{count} minutami"
        },
        x_months: {
          few: "%{count} m\u011Bs\xEDci",
          one: "m\u011Bs\xEDcem",
          other: "%{count} m\u011Bs\xEDci"
        },
        x_seconds: {
          few: "%{count} sekundami",
          one: "sekundou",
          other: "%{count} sekundami"
        }
      },
      prompts: {
        day: "Den",
        hour: "Hodina",
        minute: "Minuta",
        month: "M\u011Bs\xEDc",
        second: "Sekunda",
        year: "Rok"
      }
    },
    devise: {
      failure: {
        expired: "Platnost Va\u0161eho \xFA\u010Dtu vypr\u0161ela z d\u016Fvodu ne\u010Dinnosti. Obra\u0165te se na spr\xE1vce webu.",
        session_limited: "Va\u0161e p\u0159ihla\u0161ovac\xED \xFAdaje byly pou\u017Eity v jin\xE9m prohl\xED\u017Ee\u010Di. Chcete-li pokra\u010Dovat v tomto prohl\xED\u017Ee\u010Di, znovu se p\u0159ihlaste."
      },
      invalid_captcha: "Chybn\xE1 captcha.",
      invalid_security_question: "Chybn\xE1 odpov\u011B\u010F na bezpe\u010Dnostn\xED ot\xE1zku.",
      paranoid_verification_code: {
        show: {
          submit: "Odeslat",
          submit_verification_code: "Odeslat ov\u011B\u0159ovac\xED k\xF3d",
          verification_code: "Ov\u011B\u0159ovac\xED k\xF3d"
        },
        updated: "Ov\u011B\u0159ovac\xED k\xF3d p\u0159ijat"
      },
      paranoid_verify: {
        code_required: "Zadejte k\xF3d, kter\xFD poskytla na\u0161e podpora"
      },
      password_expired: {
        change_required: "Platnost Va\u0161eho hesla vypr\u0161ela. Pros\xEDm, obnovte si jej.",
        show: {
          change_my_password: "Zm\u011Bnit moje heslo",
          current_password: "Sou\u010Dasn\xE9 heslo",
          new_password: "Nov\xE9 heslo",
          new_password_confirmation: "Potvr\u010Fte nov\xE9 heslo",
          renew_your_password: "Obnovit heslo"
        },
        updated: "Va\u0161e nov\xE9 heslo bylo ulo\u017Eeno."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mus\xED b\xFDt potvrzeno",
        blank: "je povinn\xE1 polo\u017Eka",
        confirmation: "nebylo potvrzeno",
        empty: "nesm\xED b\xFDt pr\xE1zdn\xFD/\xE1/\xE9",
        equal_to: "mus\xED b\xFDt rovno %{count}",
        equal_to_current_password: "se mus\xED li\u0161it od aktu\xE1ln\xEDho hesla.",
        equal_to_email: "mus\xED b\xFDt jin\xFD ne\u017E e-mail.",
        even: "mus\xED b\xFDt sud\xE9 \u010D\xEDslo",
        exclusion: "je vyhrazeno pro jin\xFD \xFA\u010Del",
        greater_than: "mus\xED b\xFDt v\u011Bt\u0161\xED ne\u017E %{count}",
        greater_than_or_equal_to: "mus\xED b\xFDt v\u011Bt\u0161\xED nebo rovno %{count}",
        inclusion: "nen\xED v seznamu povolen\xFDch hodnot",
        invalid: "nen\xED platn\xE1 hodnota",
        less_than: "mus\xED b\xFDt m\xE9n\u011B ne\u017E %{count}",
        less_than_or_equal_to: "mus\xED b\xFDt m\xE9n\u011B nebo rovno %{count}",
        not_a_number: "nen\xED \u010D\xEDslo",
        not_an_integer: "mus\xED b\xFDt cel\xE9 \u010D\xEDslo",
        odd: "mus\xED b\xFDt lich\xE9 \u010D\xEDslo",
        other_than: "mus\xED b\xFDt rozd\xEDln\xFD/\xE1/\xE9 od %{count}",
        password_complexity: {
          digit: {
            few: "mus\xED obsahovat alespo\u0148 %{count} \u010D\xEDslice",
            one: "mus\xED obsahovat alespo\u0148 jednu \u010D\xEDslici",
            other: "mus\xED obsahovat alespo\u0148 %{count} \u010D\xEDslice"
          },
          lower: {
            few: "mus\xED obsahovat alespo\u0148 %{count} mal\xE9 p\xEDsmena",
            one: "mus\xED obsahovat alespo\u0148 jedno mal\xE9 p\xEDsmeno",
            other: "mus\xED obsahovat alespo\u0148 %{count} mal\xE9 p\xEDsmena"
          },
          symbol: {
            few: "mus\xED obsahovat alespo\u0148 %{count} interpunk\u010Dn\xED znam\xE9nka nebo symboly",
            one: "mus\xED obsahovat alespo\u0148 jedno interpunk\u010Dn\xED znam\xE9nko nebo symbol",
            other: "mus\xED obsahovat alespo\u0148 %{count} interpunk\u010Dn\xED znam\xE9nka nebo symboly"
          },
          upper: {
            few: "mus\xED obsahovat alespo\u0148 %{count} velk\xE9 p\xEDsmena",
            one: "mus\xED obsahovat alespo\u0148 jedno velk\xE9 p\xEDsmeno",
            other: "mus\xED obsahovat alespo\u0148 %{count} velk\xE9 p\xEDsmena"
          }
        },
        present: "mus\xED b\xFDt pr\xE1zdn\xFD/\xE1/\xE9",
        required: "mus\xED existovat",
        taken: "ji\u017E datab\xE1ze obsahuje",
        taken_in_past: "bylo ji\u017E pou\u017Eito v minulosti.",
        too_long: "je p\u0159\xEDli\u0161 dlouh\xFD/\xE1/\xE9 (max. %{count} znak\u016F)",
        too_short: "je p\u0159\xEDli\u0161 kr\xE1tk\xFD/\xE1/\xE9 (min. %{count} znak\u016F)",
        wrong_length: "nem\xE1 spr\xE1vnou d\xE9lku (o\u010Dek\xE1v\xE1no %{count} znak\u016F)"
      },
      template: {
        body: "N\xE1sleduj\xEDc\xED pole obsahuj\xED chybn\u011B vypln\u011Bn\xE9 \xFAdaje: ",
        header: {
          few: "P\u0159i ukl\xE1d\xE1n\xED objektu %{model} do\u0161lo ke %{count} chyb\xE1m a nebylo mo\u017En\xE9 jej ulo\u017Eit",
          one: "P\u0159i ukl\xE1d\xE1n\xED objektu %{model} do\u0161lo k chyb\xE1m a nebylo jej mo\u017En\xE9 ulo\u017Eit",
          other: "P\u0159i ukl\xE1d\xE1n\xED objektu %{model} do\u0161lo ke %{count} chyb\xE1m a nebylo mo\u017En\xE9 jej ulo\u017Eit"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Pros\xEDm vyberte si"
      },
      submit: {
        create: "Vytvo\u0159it %{model}",
        submit: "Ulo\u017Eit %{model}",
        update: "Aktualizovat %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "K\u010D"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliarda",
            million: "Milion",
            quadrillion: "Biliarda",
            thousand: "Tis\xEDc",
            trillion: "Bilion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "B",
              one: "B",
              other: "B"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " a ",
        two_words_connector: " a ",
        words_connector: ", "
      }
    },
    time: {
      am: "dopoledne",
      formats: {
        default: "%a %e. %B %Y %H:%M %z",
        long: "%A %e. %B %Y %H:%M",
        short: "%e. %-m. %H:%M"
      },
      pm: "odpoledne"
    }
  };
  var cy = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Wedi methu dilysu: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Methu dileu cofnod oherwydd bod %{record} yn bodoli",
            has_one: "Methu dileu cofnod oherwydd bod %{record} yn bodoli"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sul",
        "Llun",
        "Maw",
        "Mer",
        "Iau",
        "Gwe",
        "Sad"
      ],
      abbr_month_names: [
        null,
        "Ion",
        "Chw",
        "Maw",
        "Ebr",
        "Mai",
        "Meh",
        "Gor",
        "Awst",
        "Med",
        "Hyd",
        "Tach",
        "Rha"
      ],
      day_names: [
        "Dydd Sul",
        "Dydd Llun",
        "Dydd Mawrth",
        "Dydd Mercher",
        "Dydd Iau",
        "Dydd Gwener",
        "Dydd Sadwrn"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Ionawr",
        "Chwefror",
        "Mawrth",
        "Ebrill",
        "Mai",
        "Mehefin",
        "Gorffennaf",
        "Awst",
        "Medi",
        "Hydref",
        "Tachwedd",
        "Rhagfyr"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "tua %{count} awr",
          many: "tua %{count} awr",
          one: "tuag awr",
          other: "tua %{count} awr",
          two: "tua %{count} awr",
          zero: "tua %{count} awr"
        },
        about_x_months: {
          few: "tua %{count} mis",
          many: "tua %{count} mis",
          one: "tua mis",
          other: "tua %{count} mis",
          two: "tua %{count} mis",
          zero: "tua %{count} mis"
        },
        about_x_years: {
          few: "tua %{count} blynedd",
          many: "tua %{count} blynedd",
          one: "tua blwyddyn",
          other: "tua %{count} blynedd",
          two: "tua %{count} blynedd",
          zero: "tua %{count} blynedd"
        },
        almost_x_years: {
          few: "bron yn %{count} blynedd",
          many: "bron yn %{count} blynedd",
          one: "bron yn flwyddyn",
          other: "bron yn %{count} blynedd",
          two: "bron yn %{count} blynedd",
          zero: "bron yn %{count} blynedd"
        },
        half_a_minute: "hanner munud",
        less_than_x_minutes: {
          few: "llai na %{count} munud",
          many: "llai na %{count} munud",
          one: "llai na munud",
          other: "llai na %{count} munud",
          two: "llai na %{count} munud",
          zero: "llai na %{count} munud"
        },
        less_than_x_seconds: {
          few: "llai na %{count} eiliad",
          many: "llai na %{count} eiliad",
          one: "llai nag eiliad",
          other: "llai na %{count} eiliad",
          two: "llai na %{count} eiliad",
          zero: "llai na %{count} eiliad"
        },
        over_x_years: {
          few: "dros %{count} blynedd",
          many: "dros %{count} blynedd",
          one: "dros flwyddyn",
          other: "dros %{count} blynedd",
          two: "dros %{count} blynedd",
          zero: "dros %{count} blynedd"
        },
        x_days: {
          few: "%{count} diwrnod",
          many: "%{count} diwrnod",
          one: "1 diwrnod",
          other: "%{count} diwrnod",
          two: "%{count} diwrnod",
          zero: "%{count} diwrnod"
        },
        x_minutes: {
          few: "%{count} o funudau",
          many: "%{count} o funudau",
          one: "1 munud",
          other: "%{count} o funudau",
          two: "%{count} o funudau",
          zero: "%{count} o funudau"
        },
        x_months: {
          few: "%{count} mis",
          many: "%{count} mis",
          one: "1 mis",
          other: "%{count} mis",
          two: "%{count} mis",
          zero: "%{count} mis"
        },
        x_seconds: {
          few: "%{count} o eiliadau",
          many: "%{count} o eiliadau",
          one: "1 eiliad",
          other: "%{count} o eiliadau",
          two: "%{count} o eiliadau",
          zero: "%{count} o eiliadau"
        },
        x_years: {
          few: "%{count} blwyddyn",
          many: "%{count} blwyddyn",
          one: "1 flwyddyn",
          other: "%{count} blwyddyn",
          two: "%{count} blwyddyn",
          zero: "%{count} blwyddyn"
        }
      },
      prompts: {
        day: "Diwrnod",
        hour: "Awr",
        minute: "Munud",
        month: "Mis",
        second: "Eiliad",
        year: "Blwyddyn"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "angen ei dderbyn",
        blank: "methu bod yn wag",
        confirmation: "heb fod yn gyfateb",
        empty: "methu bod yn wag",
        equal_to: "angen bod yn %{count}",
        even: "rhaid bod yn eilrif",
        exclusion: "wedi cadw",
        greater_than: "angen bod yn fwy na %{count}",
        greater_than_or_equal_to: "angen bod yr un maint neu fwy na %{count}",
        in: "rhaid bod mewn %{count}",
        inclusion: "heb fod yn y rhestr",
        invalid: "heb fod yn nheilwng",
        less_than: "angen bod yn llai na %{count}",
        less_than_or_equal_to: "angen bod yr un maint neu lai na %{count}",
        model_invalid: "Methodd y dilysu: %{errors}",
        not_a_number: "heb fod yn rhif",
        not_an_integer: "heb fod yn rhif llawn",
        odd: "rhaid bod yn odrif",
        other_than: "rhaid bod yn wahanol na %{count}",
        present: "rhaid bod yn wag",
        required: "rhaid bodoli",
        taken: "wedi'i gymryd yn barod",
        too_long: "yn rhy hir (cewch %{count} llythyren ar y fwyaf)",
        too_short: "yn rhy fyr (rhaid am o leiaf %{count} llythyren)",
        wrong_length: "gyda maint anghywir o lythrennau (dylai fod yn %{count} llythyren)"
      },
      template: {
        body: "Cafwyd broblemau gyda'r meysydd canlynol:",
        header: {
          few: "Atalwyd y %{model} hwn rhag ei gadw gan %{count} nam",
          many: "Atalwyd y %{model} hwn rhag ei gadw gan %{count} nam",
          one: "Atalwyd y %{model} hwn rhag ei gadw gan 1 nam",
          other: "Atalwyd y %{model} hwn rhag ei gadw gan %{count} nam",
          two: "Atalwyd y %{model} hwn rhag ei gadw gan %{count} nam",
          zero: "Atalwyd y %{model} hwn rhag ei gadw gan 0 nam"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Dewiswch"
      },
      submit: {
        create: "Creu %{model}",
        submit: "Cadw %{model}",
        update: "Diweddaru %{model}"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\xA3"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Biliwn",
            million: "Miliwn",
            quadrillion: "Cwadriliwn",
            thousand: "Mil",
            trillion: "Triliwn",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Bytes",
              many: "Bytes",
              one: "Byte",
              other: "Bytes",
              two: "Bytes",
              zero: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", a ",
        two_words_connector: " a ",
        words_connector: ", "
      }
    },
    time: {
      am: "yb",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "yh"
    }
  };
  var da = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Godkendelse gik galt: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kunne ikke slette posten fordi afh\xE6ngige %{record} findes",
            has_one: "Kunne ikke slette posten fordi en afh\xE6ngig %{record} findes"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "s\xF8n",
        "man",
        "tir",
        "ons",
        "tor",
        "fre",
        "l\xF8r"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "s\xF8ndag",
        "mandag",
        "tirsdag",
        "onsdag",
        "torsdag",
        "fredag",
        "l\xF8rdag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b %Y"
      },
      month_names: [
        null,
        "januar",
        "februar",
        "marts",
        "april",
        "maj",
        "juni",
        "juli",
        "august",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cirka en time",
          other: "cirka %{count} timer"
        },
        about_x_months: {
          one: "cirka en m\xE5ned",
          other: "cirka %{count} m\xE5neder"
        },
        about_x_years: {
          one: "cirka et \xE5r",
          other: "cirka %{count} \xE5r"
        },
        almost_x_years: {
          one: "n\xE6sten et \xE5r",
          other: "n\xE6sten %{count} \xE5r"
        },
        half_a_minute: "et halvt minut",
        less_than_x_minutes: {
          one: "mindre end et minut",
          other: "mindre end %{count} minutter"
        },
        less_than_x_seconds: {
          one: "mindre end et sekund",
          other: "mindre end %{count} sekunder"
        },
        over_x_years: {
          one: "mere end et \xE5r",
          other: "mere end %{count} \xE5r"
        },
        x_days: {
          one: "en dag",
          other: "%{count} dage"
        },
        x_minutes: {
          one: "et minut",
          other: "%{count} minutter"
        },
        x_months: {
          one: "en m\xE5ned",
          other: "%{count} m\xE5neder"
        },
        x_seconds: {
          one: "et sekund",
          other: "%{count} sekunder"
        },
        x_years: {
          one: "et \xE5r",
          other: "%{count} \xE5r"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Time",
        minute: "Minut",
        month: "M\xE5ned",
        second: "Sekund",
        year: "\xC5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "skal accepteres",
        blank: "skal udfyldes",
        confirmation: "stemmer ikke overens med %{attribute}",
        empty: "m\xE5 ikke udelades",
        equal_to: "skal v\xE6re %{count}",
        even: "skal v\xE6re et lige tal",
        exclusion: "er reserveret",
        greater_than: "skal v\xE6re st\xF8rre end %{count}",
        greater_than_or_equal_to: "skal v\xE6re st\xF8rre end eller lig med %{count}",
        inclusion: "er ikke p\xE5 listen",
        invalid: "er ikke gyldig",
        less_than: "skal v\xE6re mindre end %{count}",
        less_than_or_equal_to: "skal v\xE6re mindre end eller lig med %{count}",
        model_invalid: "Godkendelse gik galt: %{errors}",
        not_a_number: "er ikke et tal",
        not_an_integer: "er ikke et heltal",
        odd: "skal v\xE6re et ulige tal",
        other_than: "skal v\xE6re forskellig fra %{count}",
        present: "skal v\xE6re tom",
        required: "skal udfyldes",
        taken: "er allerede brugt",
        too_long: {
          one: "er for lang (h\xF8jst %{count} tegn)",
          other: "er for lang (h\xF8jst %{count} tegn)"
        },
        too_short: {
          one: "er for kort (mindst %{count} tegn)",
          other: "er for kort (mindst %{count} tegn)"
        },
        wrong_length: {
          one: "har forkert l\xE6ngde (skulle v\xE6re %{count} tegn)",
          other: "har forkert l\xE6ngde (skulle v\xE6re %{count} tegn)"
        }
      },
      template: {
        body: "Der var problemer med f\xF8lgende felter:",
        header: {
          one: "En fejl forhindrede %{model} i at blive gemt",
          other: "%{count} fejl forhindrede %{model} i at blive gemt"
        }
      }
    },
    helpers: {
      select: {
        prompt: "V\xE6lg..."
      },
      submit: {
        create: "Opret %{model}",
        submit: "Gem %{model}",
        update: "Opdater %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C5: "Aa",
          \u00C6: "Ae",
          \u00D8: "Oe",
          \u00E5: "aa",
          \u00E6: "ae",
          \u00F8: "oe"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "DKK"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "milliard",
              other: "milliarder"
            },
            million: {
              one: "million",
              other: "millioner"
            },
            quadrillion: {
              one: "Billiard",
              other: "Billiarder"
            },
            thousand: "tusind",
            trillion: {
              one: "billion",
              other: "billioner"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "byte",
              other: "bytes"
            },
            gb: "GB",
            kb: "kB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " og ",
        two_words_connector: " og ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%e. %B %Y, %H.%M",
        long: "%A d. %e. %B %Y, %H.%M",
        short: "%e. %b %Y, %H.%M"
      },
      pm: "pm"
    }
  };
  var de = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Datensatz kann nicht gel\xF6scht werden, da abh\xE4ngige %{record} existieren.",
            has_one: "Datensatz kann nicht gel\xF6scht werden, da ein abh\xE4ngiger %{record}-Datensatz existiert."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "So",
        "Mo",
        "Di",
        "Mi",
        "Do",
        "Fr",
        "Sa"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "M\xE4r",
        "Apr",
        "Mai",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dez"
      ],
      day_names: [
        "Sonntag",
        "Montag",
        "Dienstag",
        "Mittwoch",
        "Donnerstag",
        "Freitag",
        "Samstag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "Januar",
        "Februar",
        "M\xE4rz",
        "April",
        "Mai",
        "Juni",
        "Juli",
        "August",
        "September",
        "Oktober",
        "November",
        "Dezember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "etwa eine Stunde",
          other: "etwa %{count} Stunden"
        },
        about_x_months: {
          one: "etwa ein Monat",
          other: "etwa %{count} Monate"
        },
        about_x_years: {
          one: "etwa ein Jahr",
          other: "etwa %{count} Jahre"
        },
        almost_x_years: {
          one: "fast ein Jahr",
          other: "fast %{count} Jahre"
        },
        half_a_minute: "eine halbe Minute",
        less_than_x_minutes: {
          one: "weniger als eine Minute",
          other: "weniger als %{count} Minuten"
        },
        less_than_x_seconds: {
          one: "weniger als eine Sekunde",
          other: "weniger als %{count} Sekunden"
        },
        over_x_years: {
          one: "mehr als ein Jahr",
          other: "mehr als %{count} Jahre"
        },
        x_days: {
          one: "ein Tag",
          other: "%{count} Tage"
        },
        x_minutes: {
          one: "eine Minute",
          other: "%{count} Minuten"
        },
        x_months: {
          one: "ein Monat",
          other: "%{count} Monate"
        },
        x_seconds: {
          one: "eine Sekunde",
          other: "%{count} Sekunden"
        },
        x_years: {
          one: "ein Jahr",
          other: "%{count} Jahre"
        }
      },
      prompts: {
        day: "Tag",
        hour: "Stunde",
        minute: "Minute",
        month: "Monat",
        second: "Sekunde",
        year: "Jahr"
      }
    },
    devise: {
      failure: {
        expired: "Ihr Account ist aufgrund zu langer Inaktivit\xE4t abgelaufen. Bitte kontaktieren Sie den Administrator.",
        session_limited: "Ihre Anmeldedaten wurden in einem anderen Browser genutzt. Bitte melden Sie sich erneut an, um in diesem Browser fortzufahren."
      },
      invalid_captcha: "Die Captcha-Eingabe ist nicht g\xFCltig.",
      invalid_security_question: "Die Antwort auf die Sicherheitsfrage war ung\xFCltig.",
      paranoid_verification_code: {
        show: {
          submit: "Best\xE4tigen",
          submit_verification_code: "Best\xE4tigungscode eingeben",
          verification_code: "Best\xE4tigungscode"
        },
        updated: "Best\xE4tigungscode akzeptiert"
      },
      paranoid_verify: {
        code_required: "Bitte geben Sie den Code ein, den unser Support-Team zur Verf\xFCgung gestellt hat."
      },
      password_expired: {
        change_required: "Ihr Passwort ist abgelaufen. Bitte vergeben Sie ein neues Passwort.",
        show: {
          change_my_password: "Passwort \xE4ndern",
          current_password: "Aktuelles Passwort",
          new_password: "Neues Passwort",
          new_password_confirmation: "Passwort best\xE4tigen",
          renew_your_password: "Vergeben Sie ein neues Passwort"
        },
        updated: "Das neue Passwort wurde \xFCbernommen."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "muss akzeptiert werden",
        blank: "muss ausgef\xFCllt werden",
        confirmation: "stimmt nicht mit %{attribute} \xFCberein",
        empty: "muss ausgef\xFCllt werden",
        equal_to: "muss genau %{count} sein",
        equal_to_current_password: "darf nicht dem aktuellen Passwort entsprechen.",
        equal_to_email: "darf nicht dem E-mail entsprechen.",
        even: "muss gerade sein",
        exclusion: "ist nicht verf\xFCgbar",
        greater_than: "muss gr\xF6\xDFer als %{count} sein",
        greater_than_or_equal_to: "muss gr\xF6\xDFer oder gleich %{count} sein",
        inclusion: "ist kein g\xFCltiger Wert",
        invalid: "ist nicht g\xFCltig",
        less_than: "muss kleiner als %{count} sein",
        less_than_or_equal_to: "muss kleiner oder gleich %{count} sein",
        model_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
        not_a_number: "ist keine Zahl",
        not_an_integer: "muss ganzzahlig sein",
        odd: "muss ungerade sein",
        other_than: "darf nicht gleich %{count} sein",
        password_complexity: {
          digit: {
            one: "muss mindestens eine Ziffer enthalten",
            other: "muss mindestens %{count} Ziffern enthalten"
          },
          lower: {
            one: "muss mindestens einen Kleinbuchstaben enthalten",
            other: "muss mindestens %{count} Kleinbuchstaben enthalten"
          },
          symbol: {
            one: "muss mindestens ein Sonderzeichen enthalten",
            other: "muss mindestens %{count} Sonderzeichen enthalten"
          },
          upper: {
            one: "muss mindestens einen Gro\xDFbuchstaben enthalten",
            other: "muss mindestens %{count} Gro\xDFbuchstaben enthalten"
          }
        },
        present: "darf nicht ausgef\xFCllt werden",
        required: "muss ausgef\xFCllt werden",
        taken: "ist bereits vergeben",
        taken_in_past: "wurde bereits in der Vergangenheit verwendet.",
        too_long: {
          one: "ist zu lang (mehr als %{count} Zeichen)",
          other: "ist zu lang (mehr als %{count} Zeichen)"
        },
        too_short: {
          one: "ist zu kurz (weniger als %{count} Zeichen)",
          other: "ist zu kurz (weniger als %{count} Zeichen)"
        },
        wrong_length: {
          one: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)",
          other: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)"
        }
      },
      template: {
        body: "Bitte \xFCberpr\xFCfen Sie die folgenden Felder:",
        header: {
          one: "Konnte %{model} nicht speichern: ein Fehler.",
          other: "Konnte %{model} nicht speichern: %{count} Fehler."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Bitte w\xE4hlen"
      },
      submit: {
        create: "%{model} erstellen",
        submit: "%{model} speichern",
        update: "%{model} aktualisieren"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C4: "Ae",
          \u00D6: "Oe",
          \u00DC: "Ue",
          \u00DF: "ss",
          \u00E4: "ae",
          \u00E9: "e",
          \u00F6: "oe",
          \u00FC: "ue",
          "\u1E9E": "SS"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "Milliarde",
              other: "Milliarden"
            },
            million: {
              one: "Million",
              other: "Millionen"
            },
            quadrillion: {
              one: "Billiarde",
              other: "Billiarden"
            },
            thousand: "Tausend",
            trillion: {
              one: "Billion",
              other: "Billionen"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " und ",
        two_words_connector: " und ",
        words_connector: ", "
      }
    },
    time: {
      am: "vormittags",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Uhr",
        long: "%A, %d. %B %Y, %H:%M Uhr",
        short: "%d. %b, %H:%M Uhr"
      },
      pm: "nachmittags"
    }
  };
  var de_AT = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Datensatz kann nicht gel\xF6scht werden, da abh\xE4ngige %{record} existieren.",
            has_one: "Datensatz kann nicht gel\xF6scht werden, da ein abh\xE4ngiger %{record}-Datensatz existiert."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "So",
        "Mo",
        "Di",
        "Mi",
        "Do",
        "Fr",
        "Sa"
      ],
      abbr_month_names: [
        null,
        "J\xE4n",
        "Feb",
        "M\xE4r",
        "Apr",
        "Mai",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dez"
      ],
      day_names: [
        "Sonntag",
        "Montag",
        "Dienstag",
        "Mittwoch",
        "Donnerstag",
        "Freitag",
        "Samstag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "J\xE4nner",
        "Februar",
        "M\xE4rz",
        "April",
        "Mai",
        "Juni",
        "Juli",
        "August",
        "September",
        "Oktober",
        "November",
        "Dezember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "etwa eine Stunde",
          other: "etwa %{count} Stunden"
        },
        about_x_months: {
          one: "etwa ein Monat",
          other: "etwa %{count} Monate"
        },
        about_x_years: {
          one: "etwa ein Jahr",
          other: "etwa %{count} Jahre"
        },
        almost_x_years: {
          one: "fast ein Jahr",
          other: "fast %{count} Jahre"
        },
        half_a_minute: "eine halbe Minute",
        less_than_x_minutes: {
          one: "weniger als eine Minute",
          other: "weniger als %{count} Minuten"
        },
        less_than_x_seconds: {
          one: "weniger als eine Sekunde",
          other: "weniger als %{count} Sekunden"
        },
        over_x_years: {
          one: "mehr als ein Jahr",
          other: "mehr als %{count} Jahre"
        },
        x_days: {
          one: "ein Tag",
          other: "%{count} Tage"
        },
        x_minutes: {
          one: "eine Minute",
          other: "%{count} Minuten"
        },
        x_months: {
          one: "ein Monat",
          other: "%{count} Monate"
        },
        x_seconds: {
          one: "eine Sekunde",
          other: "%{count} Sekunden"
        }
      },
      prompts: {
        day: "Tag",
        hour: "Stunde",
        minute: "Minuten",
        month: "Monat",
        second: "Sekunden",
        year: "Jahr"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "muss akzeptiert werden",
        blank: "muss ausgef\xFCllt werden",
        confirmation: "stimmt nicht mit %{attribute} \xFCberein",
        empty: "muss ausgef\xFCllt werden",
        equal_to: "muss genau %{count} sein",
        even: "muss gerade sein",
        exclusion: "ist nicht verf\xFCgbar",
        greater_than: "muss gr\xF6\xDFer als %{count} sein",
        greater_than_or_equal_to: "muss gr\xF6\xDFer oder gleich %{count} sein",
        inclusion: "ist kein g\xFCltiger Wert",
        invalid: "ist nicht g\xFCltig",
        less_than: "muss kleiner als %{count} sein",
        less_than_or_equal_to: "muss kleiner oder gleich %{count} sein",
        model_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
        not_a_number: "ist keine Zahl",
        not_an_integer: "muss ganzzahlig sein",
        odd: "muss ungerade sein",
        other_than: "darf nicht gleich %{count} sein",
        present: "darf nicht ausgef\xFCllt werden",
        required: "muss ausgef\xFCllt werden",
        taken: "ist bereits vergeben",
        too_long: {
          one: "ist zu lang (mehr als %{count} Zeichen)",
          other: "ist zu lang (mehr als %{count} Zeichen)"
        },
        too_short: {
          one: "ist zu kurz (weniger als %{count} Zeichen)",
          other: "ist zu kurz (weniger als %{count} Zeichen)"
        },
        wrong_length: {
          one: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)",
          other: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)"
        }
      },
      template: {
        body: "Bitte \xFCberpr\xFCfen Sie die folgenden Felder:",
        header: {
          one: "Konnte %{model} nicht speichern: ein Fehler.",
          other: "Konnte %{model} nicht speichern: %{count} Fehler."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Bitte w\xE4hlen"
      },
      submit: {
        create: "%{model} erstellen",
        submit: "%{model} speichern",
        update: "%{model} aktualisieren"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "Milliarde",
              other: "Milliarden"
            },
            million: {
              one: "Million",
              other: "Millionen"
            },
            quadrillion: {
              one: "Billiarde",
              other: "Billiarden"
            },
            thousand: "Tausend",
            trillion: {
              one: "Billion",
              other: "Billionen"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " und ",
        two_words_connector: " und ",
        words_connector: ", "
      }
    },
    time: {
      am: "vormittags",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Uhr",
        long: "%A, %d. %B %Y, %H:%M Uhr",
        short: "%d. %b, %H:%M Uhr"
      },
      pm: "nachmittags"
    }
  };
  var de_CH = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Datensatz kann nicht gel\xF6scht werden, da abh\xE4ngige %{record} existieren.",
            has_one: "Datensatz kann nicht gel\xF6scht werden, da ein abh\xE4ngiger %{record}-Datensatz existiert."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "So",
        "Mo",
        "Di",
        "Mi",
        "Do",
        "Fr",
        "Sa"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "M\xE4r",
        "Apr",
        "Mai",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dez"
      ],
      day_names: [
        "Sonntag",
        "Montag",
        "Dienstag",
        "Mittwoch",
        "Donnerstag",
        "Freitag",
        "Samstag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "Januar",
        "Februar",
        "M\xE4rz",
        "April",
        "Mai",
        "Juni",
        "Juli",
        "August",
        "September",
        "Oktober",
        "November",
        "Dezember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "etwa eine Stunde",
          other: "etwa %{count} Stunden"
        },
        about_x_months: {
          one: "etwa ein Monat",
          other: "etwa %{count} Monate"
        },
        about_x_years: {
          one: "etwa ein Jahr",
          other: "etwa %{count} Jahre"
        },
        almost_x_years: {
          one: "fast ein Jahr",
          other: "fast %{count} Jahre"
        },
        half_a_minute: "eine halbe Minute",
        less_than_x_minutes: {
          one: "weniger als eine Minute",
          other: "weniger als %{count} Minuten"
        },
        less_than_x_seconds: {
          one: "weniger als eine Sekunde",
          other: "weniger als %{count} Sekunden"
        },
        over_x_years: {
          one: "mehr als ein Jahr",
          other: "mehr als %{count} Jahre"
        },
        x_days: {
          one: "ein Tag",
          other: "%{count} Tage"
        },
        x_minutes: {
          one: "eine Minute",
          other: "%{count} Minuten"
        },
        x_months: {
          one: "ein Monat",
          other: "%{count} Monate"
        },
        x_seconds: {
          one: "eine Sekunde",
          other: "%{count} Sekunden"
        }
      },
      prompts: {
        day: "Tag",
        hour: "Stunde",
        minute: "Minute",
        month: "Monat",
        second: "Sekunde",
        year: "Jahr"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "muss akzeptiert werden",
        blank: "muss ausgef\xFCllt werden",
        confirmation: "stimmt nicht mit %{attribute} \xFCberein",
        empty: "muss ausgef\xFCllt werden",
        equal_to: "muss genau %{count} sein",
        even: "muss gerade sein",
        exclusion: "ist nicht verf\xFCgbar",
        greater_than: "muss gr\xF6sser als %{count} sein",
        greater_than_or_equal_to: "muss gr\xF6sser oder gleich %{count} sein",
        inclusion: "ist kein g\xFCltiger Wert",
        invalid: "ist nicht g\xFCltig",
        less_than: "muss kleiner als %{count} sein",
        less_than_or_equal_to: "muss kleiner oder gleich %{count} sein",
        model_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
        not_a_number: "ist keine Zahl",
        not_an_integer: "muss ganzzahlig sein",
        odd: "muss ungerade sein",
        other_than: "darf nicht gleich %{count} sein",
        present: "darf nicht ausgef\xFCllt werden",
        required: "muss ausgef\xFCllt werden",
        taken: "ist bereits vergeben",
        too_long: {
          one: "ist zu lang (mehr als %{count} Zeichen)",
          other: "ist zu lang (mehr als %{count} Zeichen)"
        },
        too_short: {
          one: "ist zu kurz (weniger als %{count} Zeichen)",
          other: "ist zu kurz (weniger als %{count} Zeichen)"
        },
        wrong_length: {
          one: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)",
          other: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)"
        }
      },
      template: {
        body: "Bitte \xFCberpr\xFCfen Sie die folgenden Felder:",
        header: {
          one: "Konnte %{model} nicht speichern: ein Fehler.",
          other: "Konnte %{model} nicht speichern: %{count} Fehler."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Bitte w\xE4hlen"
      },
      submit: {
        create: "%{model} erstellen",
        submit: "%{model} speichern",
        update: "%{model} aktualisieren"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "'",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "CHF"
        }
      },
      format: {
        delimiter: "'",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "Milliarde",
              other: "Milliarden"
            },
            million: {
              one: "Million",
              other: "Millionen"
            },
            quadrillion: {
              one: "Billiarde",
              other: "Billiarden"
            },
            thousand: "Tausend",
            trillion: {
              one: "Billion",
              other: "Billionen"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " und ",
        two_words_connector: " und ",
        words_connector: ", "
      }
    },
    time: {
      am: "vormittags",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Uhr",
        long: "%A, %d. %B %Y, %H:%M Uhr",
        short: "%d. %b, %H:%M Uhr"
      },
      pm: "nachmittags"
    }
  };
  var de_DE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Datensatz kann nicht gel\xF6scht werden, da abh\xE4ngige %{record} existieren.",
            has_one: "Datensatz kann nicht gel\xF6scht werden, da ein abh\xE4ngiger %{record}-Datensatz existiert."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "So",
        "Mo",
        "Di",
        "Mi",
        "Do",
        "Fr",
        "Sa"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "M\xE4r",
        "Apr",
        "Mai",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dez"
      ],
      day_names: [
        "Sonntag",
        "Montag",
        "Dienstag",
        "Mittwoch",
        "Donnerstag",
        "Freitag",
        "Samstag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "Januar",
        "Februar",
        "M\xE4rz",
        "April",
        "Mai",
        "Juni",
        "Juli",
        "August",
        "September",
        "Oktober",
        "November",
        "Dezember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "etwa eine Stunde",
          other: "etwa %{count} Stunden"
        },
        about_x_months: {
          one: "etwa ein Monat",
          other: "etwa %{count} Monate"
        },
        about_x_years: {
          one: "etwa ein Jahr",
          other: "etwa %{count} Jahre"
        },
        almost_x_years: {
          one: "fast ein Jahr",
          other: "fast %{count} Jahre"
        },
        half_a_minute: "eine halbe Minute",
        less_than_x_minutes: {
          one: "weniger als eine Minute",
          other: "weniger als %{count} Minuten"
        },
        less_than_x_seconds: {
          one: "weniger als eine Sekunde",
          other: "weniger als %{count} Sekunden"
        },
        over_x_years: {
          one: "mehr als ein Jahr",
          other: "mehr als %{count} Jahre"
        },
        x_days: {
          one: "ein Tag",
          other: "%{count} Tage"
        },
        x_minutes: {
          one: "eine Minute",
          other: "%{count} Minuten"
        },
        x_months: {
          one: "ein Monat",
          other: "%{count} Monate"
        },
        x_seconds: {
          one: "eine Sekunde",
          other: "%{count} Sekunden"
        }
      },
      prompts: {
        day: "Tag",
        hour: "Stunde",
        minute: "Minute",
        month: "Monat",
        second: "Sekunde",
        year: "Jahr"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "muss akzeptiert werden",
        blank: "muss ausgef\xFCllt werden",
        confirmation: "stimmt nicht mit %{attribute} \xFCberein",
        empty: "muss ausgef\xFCllt werden",
        equal_to: "muss genau %{count} sein",
        even: "muss gerade sein",
        exclusion: "ist nicht verf\xFCgbar",
        greater_than: "muss gr\xF6\xDFer als %{count} sein",
        greater_than_or_equal_to: "muss gr\xF6\xDFer oder gleich %{count} sein",
        inclusion: "ist kein g\xFCltiger Wert",
        invalid: "ist nicht g\xFCltig",
        less_than: "muss kleiner als %{count} sein",
        less_than_or_equal_to: "muss kleiner oder gleich %{count} sein",
        model_invalid: "G\xFCltigkeitspr\xFCfung ist fehlgeschlagen: %{errors}",
        not_a_number: "ist keine Zahl",
        not_an_integer: "muss ganzzahlig sein",
        odd: "muss ungerade sein",
        other_than: "darf nicht gleich %{count} sein",
        present: "darf nicht ausgef\xFCllt werden",
        required: "muss ausgef\xFCllt werden",
        taken: "ist bereits vergeben",
        too_long: {
          one: "ist zu lang (mehr als %{count} Zeichen)",
          other: "ist zu lang (mehr als %{count} Zeichen)"
        },
        too_short: {
          one: "ist zu kurz (weniger als %{count} Zeichen)",
          other: "ist zu kurz (weniger als %{count} Zeichen)"
        },
        wrong_length: {
          one: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)",
          other: "hat die falsche L\xE4nge (muss genau %{count} Zeichen haben)"
        }
      },
      template: {
        body: "Bitte \xFCberpr\xFCfen Sie die folgenden Felder:",
        header: {
          one: "Konnte %{model} nicht speichern: ein Fehler.",
          other: "Konnte %{model} nicht speichern: %{count} Fehler."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Bitte w\xE4hlen"
      },
      submit: {
        create: "%{model} erstellen",
        submit: "%{model} speichern",
        update: "%{model} aktualisieren"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "Milliarde",
              other: "Milliarden"
            },
            million: {
              one: "Million",
              other: "Millionen"
            },
            quadrillion: {
              one: "Billiarde",
              other: "Billiarden"
            },
            thousand: "Tausend",
            trillion: {
              one: "Billion",
              other: "Billionen"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " und ",
        two_words_connector: " und ",
        words_connector: ", "
      }
    },
    time: {
      am: "vormittags",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Uhr",
        long: "%A, %d. %B %Y, %H:%M Uhr",
        short: "%d. %b, %H:%M Uhr"
      },
      pm: "nachmittags"
    }
  };
  var dz = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0F46\u0F0B\u0F60\u0F47\u0F7C\u0F42\u0F0B\u0F60\u0F50\u0F74\u0F66\u0F0B\u0F64\u0F7C\u0F62\u0F0B\u0F61\u0F72\u0F0B: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0F61\u0F72\u0F42\u0F0B\u0F50\u0F7C\u0F0B %{record} \u0F56\u0F62\u0F9F\u0F7A\u0F53\u0F0B\u0F4F\u0F7A\u0F0B\u0F61\u0F7C\u0F51\u0F0B\u0F54\u0F0B\u0F63\u0F66\u0F0B\u0F56\u0F4F\u0F7C\u0F53\u0F0B\u0F42\u0F4F\u0F44\u0F0B\u0F58\u0F72\u0F0B\u0F56\u0F4F\u0F74\u0F56\u0F0B",
            has_one: "\u0F61\u0F72\u0F42\u0F0B\u0F50\u0F7C\u0F0B %{record} \u0F56\u0F62\u0F9F\u0F7A\u0F53\u0F0B\u0F4F\u0F7A\u0F0B\u0F61\u0F7C\u0F51\u0F0B\u0F54\u0F0B\u0F63\u0F66\u0F0B\u0F56\u0F4F\u0F7C\u0F53\u0F0B\u0F42\u0F4F\u0F44\u0F0B\u0F58\u0F72\u0F0B\u0F56\u0F4F\u0F74\u0F56\u0F0B"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0F42\u0F5F\u0F60\u0F0B\u0F5F\u0FB3\u0F5D",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F58\u0F72\u0F42\u0F0B\u0F51\u0F58\u0F62",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F63\u0FB7\u0F42\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F55\u0F74\u0F62\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F54\u0F0B\u0F66\u0F44\u0F66",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F66\u0FA4\u0F7A\u0F53\u0F0B\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F49\u0F72\u0F58"
      ],
      abbr_month_names: [
        null,
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0F44\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F42\u0F49\u0F72\u0F66\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F42\u0F66\u0F74\u0F58\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F5E\u0F72\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F63\u0F94\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0FB2\u0F74\u0F42\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F51\u0F74\u0F53\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F62\u0F92\u0FB1\u0F51\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0F42\u0F74\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F42\u0F45\u0F72\u0F42\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F42\u0F49\u0F72\u0F66\u0F0B\u0F54"
      ],
      day_names: [
        "\u0F42\u0F5F\u0F60\u0F0B\u0F5F\u0FB3\u0F5D",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F58\u0F72\u0F42\u0F0B\u0F51\u0F58\u0F62",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F63\u0FB7\u0F42\u0F0B\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F55\u0F74\u0F62\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F54\u0F0B\u0F66\u0F44\u0F66",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F66\u0FA4\u0F7A\u0F53\u0F0B\u0F54",
        "\u0F42\u0F5F\u0F60\u0F0B\u0F49\u0F72\u0F0B\u0F58"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0F44\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F42\u0F49\u0F72\u0F66\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F42\u0F66\u0F74\u0F58\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F5E\u0F72\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F63\u0F94\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0FB2\u0F74\u0F42\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F51\u0F74\u0F53\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F62\u0F92\u0FB1\u0F51\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F51\u0F42\u0F74\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F42\u0F45\u0F72\u0F42\u0F0B\u0F54",
        "\u0F5F\u0FB3\u0F5D\u0F0B\u0F56\u0F45\u0F74\u0F0B\u0F42\u0F49\u0F72\u0F66\u0F0B\u0F54"
      ],
      order: [
        "\u0F63\u0F7C",
        "\u0F5F\u0FB3\u0F5D",
        "\u0F49\u0F72\u0F53\u0F58"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0F46\u0F74\u0F0B\u0F5A\u0F7C\u0F51\u0F0B \u0F21 \u0F0B\u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42",
          other: "\u0F46\u0F74\u0F0B\u0F5A\u0F7C\u0F51\u0F0B %{count} \u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42"
        },
        about_x_months: {
          one: "\u0F5F\u0FB3\u0F5D\u0F0B \u0F21 \u0F0B\u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42",
          other: "\u0F5F\u0FB3\u0F5D\u0F0B %{count} \u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42"
        },
        about_x_years: {
          one: "\u0F63\u0F7C\u0F0B \u0F21 \u0F0B\u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42",
          other: "\u0F63\u0F7C\u0F0B %{count} \u0F51\u0F7A\u0F0B\u0F45\u0F72\u0F42"
        },
        almost_x_years: "\u0F63\u0F7C %{count} \u0F58\u0F0B\u0F63\u0FB7\u0F42\u0F54\u0F0B\u0F45\u0F72\u0F42",
        half_a_minute: "\u0F66\u0F90\u0F62\u0F0B\u0F58\u0F0B\u0F55\u0FB1\u0F7A\u0F51\u0F0B\u0F40",
        less_than_x_minutes: {
          one: "\u0F66\u0F90\u0F62\u0F0B\u0F58\u0F0B \u0F21 \u0F0B\u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F58",
          other: "\u0F66\u0F90\u0F62\u0F0B\u0F58 %{count} \u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F58"
        },
        less_than_x_seconds: {
          one: "\u0F66\u0F90\u0F62\u0F0B\u0F46\u0F0B \u0F21 \u0F0B\u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F58",
          other: "\u0F66\u0F90\u0F62\u0F0B\u0F46 %{count} \u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F58"
        },
        over_x_years: {
          one: "\u0F63\u0F7C\u0F0B \u0F21 \u0F0B\u0F63\u0FB7\u0F42",
          other: "\u0F63\u0F7C\u0F0B%{count}\u0F63\u0F66\u0F0B\u0F63\u0FB7\u0F42"
        },
        x_days: {
          one: "\u0F49\u0F72\u0F53\u0F58\u0F0B\u0F42\u0F45\u0F72\u0F42",
          other: "\u0F49\u0F72\u0F53\u0F58 %{count}"
        },
        x_minutes: {
          one: "\u0F66\u0F90\u0F62\u0F0B\u0F58\u0F0B\u0F42\u0F45\u0F72\u0F42",
          other: "\u0F66\u0F90\u0F62\u0F0B\u0F58 %{count}"
        },
        x_months: {
          one: "\u0F5F\u0FB3\u0F5D\u0F0B\u0F42\u0F45\u0F72\u0F42",
          other: "\u0F5F\u0FB3\u0F5D %{count}"
        },
        x_seconds: {
          one: "\u0F66\u0F90\u0F62\u0F0B\u0F46\u0F0B\u0F42\u0F45\u0F72\u0F42",
          other: "\u0F66\u0F90\u0F62\u0F0B\u0F46 %{count}"
        },
        x_years: {
          one: "\u0F63\u0F7C\u0F0B\u0F42\u0F45\u0F72\u0F42",
          other: "\u0F63\u0F7C %{count}"
        }
      },
      prompts: {
        day: "\u0F49\u0F72\u0F53\u0F58",
        hour: "\u0F46\u0F74\u0F0B\u0F5A\u0F7C\u0F51",
        minute: "\u0F66\u0F90\u0F62\u0F0B\u0F58",
        month: "\u0F5F\u0FB3\u0F5D",
        second: "\u0F66\u0F90\u0F62\u0F0B\u0F46",
        year: "\u0F63\u0F7C"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0F44\u0F7C\u0F66\u0F0B\u0F63\u0F53\u0F0B\u0F60\u0F56\u0F51\u0F0B\u0F51\u0F42\u0F7C",
        blank: "\u0F66\u0F9F\u0F7C\u0F44\u0F0B\u0F54\u0F0B\u0F58\u0F72\u0F0B\u0F56\u0F4F\u0F74\u0F56",
        confirmation: "%{attribute} \u0F51\u0F44\u0F0B\u0F45\u0F7C\u0F42\u0F0B\u0F60\u0F50\u0F7C\u0F51\u0F0B\u0F58\u0F72\u0F53\u0F0B\u0F60\u0F51\u0F74\u0F42",
        empty: "\u0F66\u0F9F\u0F7C\u0F44\u0F58\u0F0B\u0F58\u0F72\u0F0B\u0F56\u0F4F\u0F74\u0F56",
        equal_to: "%{count} \u0F51\u0F44\u0F0B\u0F60\u0F51\u0FB2\u0F0B\u0F58\u0F49\u0F58\u0F0B\u0F51\u0F42\u0F7C",
        even: "\u0F60\u0F51\u0FB2\u0F53\u0F0B\u0F60\u0F51\u0FB2\u0F0B\u0F51\u0F42\u0F7C",
        exclusion: "\u0F5F\u0F74\u0F62\u0F0B\u0F42\u0F66\u0F7C\u0F42",
        greater_than: "%{count} \u0F63\u0F66\u0F0B\u0F66\u0FA6\u0F7C\u0F58\u0F0B\u0F51\u0F42\u0F7C",
        greater_than_or_equal_to: "%{count} \u0F63\u0F66\u0F0B\u0F58\u0F44\u0F0B\u0F66\u0F74\u0F0B\u0F61\u0F44\u0F0B\u0F53\u0F0B\u0F60\u0F51\u0FB2\u0F53\u0F0B\u0F60\u0F51\u0FB2\u0F0B\u0F51\u0F42\u0F7C",
        inclusion: "\u0F50\u0F7C\u0F0B\u0F61\u0F72\u0F42\u0F0B\u0F42\u0F72\u0F0B\u0F42\u0FB2\u0F44\u0F66\u0F0B\u0F66\u0F74\u0F0B\u0F58\u0F72\u0F53\u0F0B\u0F60\u0F51\u0F74\u0F42",
        invalid: "\u0F46\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F68\u0F72\u0F53",
        less_than: "%{count} \u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F0B\u0F66\u0F74\u0F0B\u0F45\u0F72\u0F42\u0F0B\u0F51\u0F42\u0F7C",
        less_than_or_equal_to: "%{count} \u0F63\u0F66\u0F0B\u0F49\u0F74\u0F44\u0F0B\u0F66\u0F74\u0F0B\u0F61\u0F44\u0F0B\u0F53\u0F0B\u0F60\u0F51\u0FB2\u0F53\u0F0B\u0F60\u0F51\u0FB2\u0F0B\u0F51\u0F42\u0F7C",
        model_invalid: "\u0F46\u0F0B\u0F60\u0F47\u0F7C\u0F42\u0F0B\u0F60\u0F50\u0F74\u0F66\u0F0B\u0F64\u0F7C\u0F62\u0F0B\u0F61\u0F72: %{errors}",
        not_a_number: "\u0F68\u0F44\u0F0B\u0F42\u0FB2\u0F44\u0F66\u0F0B\u0F58\u0F7A\u0F53",
        not_an_integer: "\u0F67\u0FB2\u0F72\u0F63\u0F0B\u0F42\u0FB2\u0F44\u0F66\u0F0B\u0F51\u0F42\u0F7C",
        odd: "\u0F61\u0F0B\u0F68\u0F44\u0F0B\u0F51\u0F42\u0F7C",
        other_than: "%{count} \u0F63\u0F66\u0F0B\u0F66\u0F7C\u0F0B\u0F66\u0F7C\u0F0B\u0F45\u0F72\u0F42\u0F0B\u0F51\u0F42\u0F7C",
        present: "\u0F66\u0F0B\u0F66\u0F9F\u0F7C\u0F44\u0F0B\u0F56\u0F5E\u0F42\u0F0B\u0F51\u0F42\u0F7C",
        required: "\u0F51\u0F42\u0F7C\u0F0B\u0F62\u0F44\u0F0B\u0F51\u0F42\u0F7C",
        taken: "\u0F67\u0F7A\u0F0B\u0F58\u0F0B\u0F63\u0F66\u0F0B\u0F60\u0F56\u0F42\u0F0B\u0F5A\u0F62\u0F0B\u0F61\u0F72",
        too_long: {
          one: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F42\u0F53\u0F58\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F66\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F62\u0F72\u0F44\u0F58\u0F0B\u0F68\u0F72\u0F53\u0F0B\u0F58\u0F7A\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F58\u0F50\u0F7C\u0F0B\u0F5A\u0F51\u0F0B\u0F42\u0F45\u0F72\u0F42\u0F0B\u0F0B\u0F68\u0F72\u0F53)",
          other: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F42\u0F53\u0F58\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F66\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F62\u0F72\u0F44\u0F58\u0F0B\u0F68\u0F72\u0F53\u0F0B\u0F58\u0F7A\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F58\u0F50\u0F7C\u0F0B\u0F5A\u0F51\u0F0B %{count} \u0F68\u0F72\u0F53)"
        },
        too_short: {
          one: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F42\u0F53\u0F58\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F66\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F50\u0F74\u0F44\u0F0B\u0F66\u0F74\u0F0B\u0F53\u0F74\u0F42\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F49\u0F74\u0F44\u0F0B\u0F58\u0F50\u0F60\u0F0B\u0F42\u0F45\u0F72\u0F42\u0F0B\u0F68\u0F72\u0F53)",
          other: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F42\u0F53\u0F58\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F66\u0F0B\u0F58\u0F7A\u0F51\u0F0B\u0F50\u0F74\u0F44\u0F0B\u0F66\u0F74\u0F0B\u0F53\u0F74\u0F42\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F49\u0F74\u0F44\u0F0B\u0F58\u0F50\u0F60\u0F0B %{count} \u0F68\u0F72\u0F53)"
        },
        wrong_length: {
          one: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F60\u0F5B\u0F74\u0F63\u0F0B\u0F53\u0F74\u0F42\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F42\u0F45\u0F72\u0F42\u0F0B\u0F44\u0F7A\u0F66\u0F0B\u0F54\u0F62\u0F0B\u0F51\u0F74\u0F0B\u0F51\u0F42\u0F7C)",
          other: "\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B\u0F60\u0F5B\u0F74\u0F63\u0F0B\u0F53\u0F74\u0F42\u0F0B(\u0F61\u0F72\u0F42\u0F0B\u0F60\u0F56\u0FB2\u0F74\u0F0B %{count} \u0F44\u0F7A\u0F66\u0F0B\u0F54\u0F62\u0F0B\u0F51\u0F74\u0F0B\u0F51\u0F42\u0F7C)"
        }
      },
      template: {
        body: "\u0F60\u0F7C\u0F42\u0F0B\u0F42\u0F72\u0F0B\u0F66\u0F0B\u0F41\u0F7C\u0F44\u0F66\u0F0B\u0F5A\u0F74\u0F0B\u0F53\u0F0B\u0F56\u0F40\u0F60\u0F0B\u0F44\u0F63\u0F0B\u0F60\u0F51\u0F74\u0F42",
        header: {
          one: "\u0F60\u0F5B\u0F7C\u0F63\u0F0B\u0F56\u0F0B\u0F45\u0F72\u0F42\u0F0B\u0F42\u0F72\u0F66\u0F0B %{model} \u0F56\u0F66\u0FA1\u0F74\u0F0B\u0F56\u0F5E\u0F42\u0F0B\u0F60\u0F56\u0F51\u0F0B\u0F53\u0F72\u0F0B\u0F63\u0F74\u0F0B\u0F56\u0F40\u0F42\u0F0B\u0F62\u0F90\u0FB1\u0F56\u0F0B\u0F45\u0F72\u0F42",
          other: "\u0F60\u0F5B\u0F7C\u0F63\u0F0B\u0F56\u0F0B %{count} \u0F0B\u0F42\u0F72\u0F66\u0F0B %{model} \u0F60\u0F51\u0F72\u0F0B\u0F56\u0F66\u0FA1\u0F74\u0F0B\u0F56\u0F5E\u0F42\u0F0B\u0F60\u0F56\u0F51\u0F0B\u0F53\u0F72\u0F0B\u0F63\u0F74\u0F0B\u0F56\u0F40\u0F42\u0F0B\u0F62\u0F90\u0FB1\u0F56\u0F0B\u0F45\u0F72\u0F42"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0F42\u0F51\u0F58\u0F0B\u0F41\u0F0B\u0F62\u0F90\u0FB1\u0F56"
      },
      submit: {
        create: "%{model} \u0F42\u0F66\u0F62\u0F0B\u0F66\u0FA4\u0FB2\u0F72\u0F53\u0F0B\u0F60\u0F56\u0F51",
        submit: "%{model} \u0F56\u0F66\u0FA1\u0F74\u0F0B\u0F56\u0F5E\u0F42\u0F0B\u0F60\u0F56\u0F51",
        update: "%{model} \u0F51\u0F74\u0F66\u0F0B\u0F58\u0F50\u0F74\u0F53\u0F0B\u0F41\u0F0B\u0F42\u0F66\u0F7C\u0F0B\u0F60\u0F56\u0F51"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: "\u0F22",
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: "\u0F23",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0F50\u0F7A\u0F62\u0F0B\u0F60\u0F56\u0F74\u0F58",
            million: "\u0F66\u0F0B\u0F61",
            quadrillion: "Quadrillion",
            thousand: "\u0F66\u0F9F\u0F7C\u0F44\u0F0B\u0F55\u0FB2\u0F42",
            trillion: "\u0F41\u0FB2\u0F42\u0F0B\u0F41\u0FB2\u0F72\u0F42\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: "\u0F23",
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0F51\u0F44 ",
        two_words_connector: " \u0F51\u0F44 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0F51\u0FB2\u0F7C\u0F0B\u0F54\u0F0B\u0F42\u0F72\u0F0B\u0F46\u0F74\u0F0B\u0F5A\u0F7C\u0F51\u0F0B\u0F0B",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0F55\u0FB1\u0F72\u0F0B\u0F62\u0F74\u0F0B\u0F42\u0F72\u0F0B\u0F46\u0F74\u0F0B\u0F5A\u0F7C\u0F51\u0F0B"
    }
  };
  var el = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0397 \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7 \u03B1\u03C0\u03AD\u03C4\u03C5\u03C7\u03B5: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0397 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B3\u03B9\u03B1\u03C4\u03AF \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03C5\u03BD \u03B5\u03BE\u03B1\u03C1\u03C4\u03B7\u03BC\u03AD\u03BD\u03B1 %{record}",
            has_one: "\u0397 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B3\u03B9\u03B1\u03C4\u03AF \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 \u03B5\u03BE\u03B1\u03C1\u03C4\u03B7\u03BC\u03AD\u03BD\u03BF %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u039A\u03C5\u03C1",
        "\u0394\u03B5\u03C5",
        "\u03A4\u03C1\u03AF",
        "\u03A4\u03B5\u03C4",
        "\u03A0\u03AD\u03BC",
        "\u03A0\u03B1\u03C1",
        "\u03A3\u03AC\u03B2"
      ],
      abbr_month_names: [
        null,
        "\u0399\u03B1\u03BD",
        "\u03A6\u03B5\u03B2",
        "\u039C\u03B1\u03C1",
        "\u0391\u03C0\u03C1",
        "\u039C\u03B1\u03CA",
        "\u0399\u03BF\u03C5\u03BD",
        "\u0399\u03BF\u03C5\u03BB",
        "\u0391\u03C5\u03B3",
        "\u03A3\u03B5\u03C0",
        "\u039F\u03BA\u03C4",
        "\u039D\u03BF\u03B5",
        "\u0394\u03B5\u03BA"
      ],
      day_names: [
        "\u039A\u03C5\u03C1\u03B9\u03B1\u03BA\u03AE",
        "\u0394\u03B5\u03C5\u03C4\u03AD\u03C1\u03B1",
        "\u03A4\u03C1\u03AF\u03C4\u03B7",
        "\u03A4\u03B5\u03C4\u03AC\u03C1\u03C4\u03B7",
        "\u03A0\u03AD\u03BC\u03C0\u03C4\u03B7",
        "\u03A0\u03B1\u03C1\u03B1\u03C3\u03BA\u03B5\u03C5\u03AE",
        "\u03A3\u03AC\u03B2\u03B2\u03B1\u03C4\u03BF"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%e %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0399\u03B1\u03BD\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
        "\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
        "\u039C\u03AC\u03C1\u03C4\u03B9\u03BF\u03C2",
        "\u0391\u03C0\u03C1\u03AF\u03BB\u03B9\u03BF\u03C2",
        "\u039C\u03AC\u03B9\u03BF\u03C2",
        "\u0399\u03BF\u03CD\u03BD\u03B9\u03BF\u03C2",
        "\u0399\u03BF\u03CD\u03BB\u03B9\u03BF\u03C2",
        "\u0391\u03CD\u03B3\u03BF\u03C5\u03C3\u03C4\u03BF\u03C2",
        "\u03A3\u03B5\u03C0\u03C4\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u039F\u03BA\u03C4\u03CE\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u039D\u03BF\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u0394\u03B5\u03BA\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03BC\u03AF\u03B1 \u03CE\u03C1\u03B1",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03CE\u03C1\u03B5\u03C2"
        },
        about_x_months: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03AD\u03BD\u03B1 \u03BC\u03AE\u03BD\u03B1",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03BC\u03AE\u03BD\u03B5\u03C2"
        },
        about_x_years: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        almost_x_years: {
          one: "\u03C3\u03C7\u03B5\u03B4\u03CC\u03BD \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C3\u03C7\u03B5\u03B4\u03CC\u03BD %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        half_a_minute: "\u03BC\u03B9\u03C3\u03CC \u03BB\u03B5\u03C0\u03C4\u03CC",
        less_than_x_minutes: {
          one: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03BB\u03B5\u03C0\u03C4\u03CC",
          other: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count} \u03BB\u03B5\u03C0\u03C4\u03AC"
        },
        less_than_x_seconds: {
          one: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
          other: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1"
        },
        over_x_years: {
          one: "\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        x_days: {
          one: "%{count} \u03BC\u03AD\u03C1\u03B1",
          other: "%{count} \u03B7\u03BC\u03AD\u03C1\u03B5\u03C2"
        },
        x_minutes: {
          one: "%{count} \u03BB\u03B5\u03C0\u03C4\u03CC",
          other: "%{count} \u03BB\u03B5\u03C0\u03C4\u03AC"
        },
        x_months: {
          one: "%{count} \u03BC\u03AE\u03BD\u03B1",
          other: "%{count} \u03BC\u03AE\u03BD\u03B5\u03C2"
        },
        x_seconds: {
          one: "%{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
          other: "%{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1"
        },
        x_years: {
          one: "%{count} \u03C7\u03C1\u03CC\u03BD\u03BF\u03C2",
          other: "%{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        }
      },
      prompts: {
        day: "\u0397\u03BC\u03AD\u03C1\u03B1",
        hour: "\u038F\u03C1\u03B1",
        minute: "\u039B\u03B5\u03C0\u03C4\u03CC",
        month: "\u039C\u03AE\u03BD\u03B1\u03C2",
        second: "\u0394\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
        year: "\u0388\u03C4\u03BF\u03C2"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C0\u03BF\u03B4\u03B5\u03BA\u03C4\u03CC",
        blank: "\u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03CC",
        confirmation: "\u03B4\u03B5\u03BD \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03B5\u03B9 \u03BC\u03B5 \u03C4\u03B7\u03BD \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7",
        empty: "\u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03B4\u03B5\u03B9\u03BF",
        equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        even: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03C1\u03C4\u03B9\u03BF\u03C2",
        exclusion: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03BC\u03AD\u03BD\u03BF",
        greater_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count}",
        greater_than_or_equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF \u03AE \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        inclusion: "\u03B4\u03B5\u03BD \u03C3\u03C5\u03BC\u03C0\u03B5\u03C1\u03B9\u03BB\u03B1\u03BC\u03B2\u03AC\u03BD\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03B7 \u03BB\u03AF\u03C3\u03C4\u03B1",
        invalid: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03BA\u03C5\u03C1\u03BF",
        less_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count}",
        less_than_or_equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03AE \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        model_invalid: "\u0397 \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7 \u03B1\u03C0\u03AD\u03C4\u03C5\u03C7\u03B5: %{errors}",
        not_a_number: "\u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2",
        not_an_integer: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BA\u03AD\u03C1\u03B1\u03B9\u03BF\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2",
        odd: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C4\u03C4\u03CC\u03C2",
        other_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B9\u03AC\u03C6\u03BF\u03C1\u03BF \u03C4\u03BF\u03C5 %{count}",
        present: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03CC",
        required: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9",
        taken: "\u03C4\u03BF \u03AD\u03C7\u03BF\u03C5\u03BD \u03AE\u03B4\u03B7 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03B9",
        too_long: {
          one: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF (\u03C4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF (\u03C4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        },
        too_short: {
          one: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC (\u03C4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC (\u03C4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        },
        wrong_length: {
          one: "\u03AD\u03C7\u03B5\u03B9 \u03BB\u03B1\u03BD\u03B8\u03B1\u03C3\u03BC\u03AD\u03BD\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 (\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03AD\u03C7\u03B5\u03B9 \u03BB\u03B1\u03BD\u03B8\u03B1\u03C3\u03BC\u03AD\u03BD\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 (\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        }
      },
      template: {
        body: "\u03A5\u03C0\u03AE\u03C1\u03BE\u03B1\u03BD \u03C0\u03C1\u03BF\u03B2\u03BB\u03AE\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5 \u03C4\u03B1 \u03B1\u03BA\u03CC\u03BB\u03BF\u03C5\u03B8\u03B1 \u03C0\u03B5\u03B4\u03AF\u03B1:",
        header: {
          one: "%{count} \u03BB\u03AC\u03B8\u03BF\u03C2 \u03B5\u03BC\u03C0\u03CC\u03B4\u03B9\u03C3\u03B5 \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF %{model} \u03BD\u03B1 \u03B1\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03C5\u03C4\u03B5\u03AF.",
          other: "%{count} \u03BB\u03AC\u03B8\u03B7 \u03B5\u03BC\u03C0\u03CC\u03B4\u03B9\u03C3\u03B1\u03BD \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF %{model} \u03BD\u03B1 \u03B1\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03C5\u03C4\u03B5\u03AF."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03CE \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5"
      },
      submit: {
        create: "\u0394\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03AE\u03C3\u03C4\u03B5 %{model}",
        submit: "\u0391\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03CD\u03C3\u03C4\u03B5 %{model}",
        update: "\u0395\u03BD\u03B7\u03BC\u03B5\u03C1\u03CE\u03C3\u03C4\u03B5 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u0386: "a",
          \u0386\u0399: "ai",
          \u0386\u03A5: "av",
          \u0388: "e",
          \u0388\u0399: "ei",
          \u0388\u03A5: "ev",
          \u0389: "h",
          \u038A: "I",
          \u038C: "o",
          \u038C\u0399: "oi",
          \u038C\u03A5: "u",
          \u038E: "y",
          \u038F: "w",
          \u0391: "a",
          \u0391\u038A: "ai",
          \u0391\u038E: "av",
          \u0391\u0399: "ai",
          \u0391\u03A5: "av",
          \u0392: "v",
          \u0393: "g",
          \u0394: "d",
          \u0395: "e",
          \u0395\u038A: "ei",
          \u0395\u038E: "ev",
          \u0395\u0399: "ei",
          \u0395\u03A5: "ev",
          \u0396: "z",
          \u0397: "h",
          \u0398: "th",
          \u0399: "I",
          \u039A: "k",
          \u039B: "l",
          \u039C: "m",
          \u039D: "n",
          \u039E: "x",
          \u039F: "o",
          \u039F\u038A: "oi",
          \u039F\u038E: "u",
          \u039F\u0399: "oi",
          \u039F\u03A5: "u",
          \u03A0: "p",
          \u03A1: "r",
          \u03A3: "s",
          \u03A4: "t",
          \u03A5: "y",
          \u03A6: "f",
          \u03A7: "ch",
          \u03A8: "ps",
          \u03A9: "w",
          \u03AC: "a",
          \u03AC\u03B9: "ai",
          \u03AC\u03C5: "av",
          \u03AD: "e",
          \u03AD\u03B9: "ei",
          \u03AD\u03C5: "ev",
          \u03AE: "h",
          \u03AF: "I",
          \u03B1: "a",
          \u03B1\u03AF: "ai",
          \u03B1\u03B9: "ai",
          \u03B1\u03C5: "av",
          \u03B1\u03CD: "av",
          \u03B2: "v",
          \u03B3: "g",
          \u03B4: "d",
          \u03B5: "e",
          \u03B5\u03B9: "ei",
          \u03B5\u03C5: "ev",
          \u03B5\u03CD: "ev",
          \u03B6: "z",
          \u03B7: "h",
          \u03B8: "th",
          \u03B9: "I",
          \u03BA: "k",
          \u03BB: "l",
          \u03BC: "m",
          \u03BD: "n",
          \u03BE: "x",
          \u03BF: "o",
          \u03BF\u03AF: "oi",
          \u03BF\u03B9: "oi",
          \u03BF\u03C5: "u",
          \u03BF\u03CD: "u",
          \u03C0: "p",
          \u03C1: "r",
          \u03C2: "s",
          \u03C3: "s",
          \u03C4: "t",
          \u03C5: "y",
          \u03C6: "f",
          \u03C7: "ch",
          \u03C8: "ps",
          \u03C9: "w",
          \u03CA: "i",
          \u03CB: "i",
          \u03CC: "o",
          \u03CC\u03B9: "oi",
          \u03CC\u03C5: "u",
          \u03CD: "y",
          \u03CE: "w"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u03B4\u03B9\u03C3\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            million: "\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            quadrillion: "\u03C4\u03B5\u03C4\u03C1\u03AC\u03BA\u03B9\u03C2 \u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            thousand: "\u03C7\u03AF\u03BB\u03B9\u03B1",
            trillion: "\u03C4\u03C1\u03B9\u03C3\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u03BA\u03B1\u03B9 ",
        two_words_connector: " \u03BA\u03B1\u03B9 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u03C0.\u03BC.",
      formats: {
        default: "%d %B %Y %H:%M",
        long: "%A %d %B %Y %H:%M:%S %Z",
        short: "%d %b %H:%M"
      },
      pm: "\u03BC.\u03BC."
    }
  };
  var el_CY = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0397 \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7 \u03B1\u03C0\u03AD\u03C4\u03C5\u03C7\u03B5: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0397 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B3\u03B9\u03B1\u03C4\u03AF \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03C5\u03BD \u03B5\u03BE\u03B1\u03C1\u03C4\u03B7\u03BC\u03AD\u03BD\u03B1 %{record}",
            has_one: "\u0397 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE \u03B4\u03B5\u03BD \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B4\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03B5\u03AF \u03B3\u03B9\u03B1\u03C4\u03AF \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 \u03B5\u03BE\u03B1\u03C1\u03C4\u03B7\u03BC\u03AD\u03BD\u03BF %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u039A\u03C5\u03C1",
        "\u0394\u03B5\u03C5",
        "\u03A4\u03C1\u03AF",
        "\u03A4\u03B5\u03C4",
        "\u03A0\u03AD\u03BC",
        "\u03A0\u03B1\u03C1",
        "\u03A3\u03AC\u03B2"
      ],
      abbr_month_names: [
        null,
        "\u0399\u03B1\u03BD",
        "\u03A6\u03B5\u03B2",
        "\u039C\u03B1\u03C1",
        "\u0391\u03C0\u03C1",
        "\u039C\u03B1\u03CA",
        "\u0399\u03BF\u03C5\u03BD",
        "\u0399\u03BF\u03C5\u03BB",
        "\u0391\u03C5\u03B3",
        "\u03A3\u03B5\u03C0",
        "\u039F\u03BA\u03C4",
        "\u039D\u03BF\u03B5",
        "\u0394\u03B5\u03BA"
      ],
      day_names: [
        "\u039A\u03C5\u03C1\u03B9\u03B1\u03BA\u03AE",
        "\u0394\u03B5\u03C5\u03C4\u03AD\u03C1\u03B1",
        "\u03A4\u03C1\u03AF\u03C4\u03B7",
        "\u03A4\u03B5\u03C4\u03AC\u03C1\u03C4\u03B7",
        "\u03A0\u03AD\u03BC\u03C0\u03C4\u03B7",
        "\u03A0\u03B1\u03C1\u03B1\u03C3\u03BA\u03B5\u03C5\u03AE",
        "\u03A3\u03AC\u03B2\u03B2\u03B1\u03C4\u03BF"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%e %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0399\u03B1\u03BD\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
        "\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
        "\u039C\u03AC\u03C1\u03C4\u03B9\u03BF\u03C2",
        "\u0391\u03C0\u03C1\u03AF\u03BB\u03B9\u03BF\u03C2",
        "\u039C\u03AC\u03B9\u03BF\u03C2",
        "\u0399\u03BF\u03CD\u03BD\u03B9\u03BF\u03C2",
        "\u0399\u03BF\u03CD\u03BB\u03B9\u03BF\u03C2",
        "\u0391\u03CD\u03B3\u03BF\u03C5\u03C3\u03C4\u03BF\u03C2",
        "\u03A3\u03B5\u03C0\u03C4\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u039F\u03BA\u03C4\u03CE\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u039D\u03BF\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
        "\u0394\u03B5\u03BA\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03BC\u03AF\u03B1 \u03CE\u03C1\u03B1",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03CE\u03C1\u03B5\u03C2"
        },
        about_x_months: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03AD\u03BD\u03B1 \u03BC\u03AE\u03BD\u03B1",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03BC\u03AE\u03BD\u03B5\u03C2"
        },
        about_x_years: {
          one: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        almost_x_years: {
          one: "\u03C3\u03C7\u03B5\u03B4\u03CC\u03BD \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C3\u03C7\u03B5\u03B4\u03CC\u03BD %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        half_a_minute: "\u03BC\u03B9\u03C3\u03CC \u03BB\u03B5\u03C0\u03C4\u03CC",
        less_than_x_minutes: {
          one: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03BB\u03B5\u03C0\u03C4\u03CC",
          other: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count} \u03BB\u03B5\u03C0\u03C4\u03AC"
        },
        less_than_x_seconds: {
          one: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
          other: "\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1"
        },
        over_x_years: {
          one: "\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03C7\u03C1\u03CC\u03BD\u03BF",
          other: "\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC %{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        },
        x_days: {
          one: "%{count} \u03BC\u03AD\u03C1\u03B1",
          other: "%{count} \u03B7\u03BC\u03AD\u03C1\u03B5\u03C2"
        },
        x_minutes: {
          one: "%{count} \u03BB\u03B5\u03C0\u03C4\u03CC",
          other: "%{count} \u03BB\u03B5\u03C0\u03C4\u03AC"
        },
        x_months: {
          one: "%{count} \u03BC\u03AE\u03BD\u03B1",
          other: "%{count} \u03BC\u03AE\u03BD\u03B5\u03C2"
        },
        x_seconds: {
          one: "%{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
          other: "%{count} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1"
        },
        x_years: {
          one: "%{count} \u03C7\u03C1\u03CC\u03BD\u03BF\u03C2",
          other: "%{count} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1"
        }
      },
      prompts: {
        day: "\u0397\u03BC\u03AD\u03C1\u03B1",
        hour: "\u038F\u03C1\u03B1",
        minute: "\u039B\u03B5\u03C0\u03C4\u03CC",
        month: "\u039C\u03AE\u03BD\u03B1\u03C2",
        second: "\u0394\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF",
        year: "\u0388\u03C4\u03BF\u03C2"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C0\u03BF\u03B4\u03B5\u03BA\u03C4\u03CC",
        blank: "\u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03CC",
        confirmation: "\u03B4\u03B5\u03BD \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03B5\u03B9 \u03BC\u03B5 \u03C4\u03B7\u03BD \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7",
        empty: "\u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03B4\u03B5\u03B9\u03BF",
        equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        even: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03C1\u03C4\u03B9\u03BF\u03C2",
        exclusion: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B5\u03C3\u03BC\u03B5\u03C5\u03BC\u03AD\u03BD\u03BF",
        greater_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count}",
        greater_than_or_equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03BF \u03AE \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        inclusion: "\u03B4\u03B5\u03BD \u03C3\u03C5\u03BC\u03C0\u03B5\u03C1\u03B9\u03BB\u03B1\u03BC\u03B2\u03AC\u03BD\u03B5\u03C4\u03B1\u03B9 \u03C3\u03C4\u03B7 \u03BB\u03AF\u03C3\u03C4\u03B1",
        invalid: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03AC\u03BA\u03C5\u03C1\u03BF",
        less_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC %{count}",
        less_than_or_equal_to: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03AE \u03AF\u03C3\u03BF \u03BC\u03B5 %{count}",
        model_invalid: "\u0397 \u03B5\u03C0\u03B9\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7 \u03B1\u03C0\u03AD\u03C4\u03C5\u03C7\u03B5: %{errors}",
        not_a_number: "\u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2",
        not_an_integer: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BA\u03AD\u03C1\u03B1\u03B9\u03BF\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2",
        odd: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03B5\u03C1\u03B9\u03C4\u03C4\u03CC\u03C2",
        other_than: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B4\u03B9\u03AC\u03C6\u03BF\u03C1\u03BF \u03C4\u03BF\u03C5 %{count}",
        present: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03CC",
        required: "\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9",
        taken: "\u03C4\u03BF \u03AD\u03C7\u03BF\u03C5\u03BD \u03AE\u03B4\u03B7 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03B9",
        too_long: {
          one: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF (\u03C4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF (\u03C4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        },
        too_short: {
          one: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC (\u03C4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC (\u03C4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        },
        wrong_length: {
          one: "\u03AD\u03C7\u03B5\u03B9 \u03BB\u03B1\u03BD\u03B8\u03B1\u03C3\u03BC\u03AD\u03BD\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 (\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1\u03C2)",
          other: "\u03AD\u03C7\u03B5\u03B9 \u03BB\u03B1\u03BD\u03B8\u03B1\u03C3\u03BC\u03AD\u03BD\u03BF \u03BC\u03AE\u03BA\u03BF\u03C2 (\u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 %{count} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2)"
        }
      },
      template: {
        body: "\u03A5\u03C0\u03AE\u03C1\u03BE\u03B1\u03BD \u03C0\u03C1\u03BF\u03B2\u03BB\u03AE\u03BC\u03B1\u03C4\u03B1 \u03BC\u03B5 \u03C4\u03B1 \u03B1\u03BA\u03CC\u03BB\u03BF\u03C5\u03B8\u03B1 \u03C0\u03B5\u03B4\u03AF\u03B1:",
        header: {
          one: "%{count} \u03BB\u03AC\u03B8\u03BF\u03C2 \u03B5\u03BC\u03C0\u03CC\u03B4\u03B9\u03C3\u03B5 \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF %{model} \u03BD\u03B1 \u03B1\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03C5\u03C4\u03B5\u03AF.",
          other: "%{count} \u03BB\u03AC\u03B8\u03B7 \u03B5\u03BC\u03C0\u03CC\u03B4\u03B9\u03C3\u03B1\u03BD \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF %{model} \u03BD\u03B1 \u03B1\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03C5\u03C4\u03B5\u03AF."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03CE \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5"
      },
      submit: {
        create: "\u0394\u03B7\u03BC\u03B9\u03BF\u03C5\u03C1\u03B3\u03AE\u03C3\u03C4\u03B5 %{model}",
        submit: "\u0391\u03C0\u03BF\u03B8\u03B7\u03BA\u03B5\u03CD\u03C3\u03C4\u03B5 %{model}",
        update: "\u0395\u03BD\u03B7\u03BC\u03B5\u03C1\u03CE\u03C3\u03C4\u03B5 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u03B4\u03B9\u03C3\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            million: "\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            quadrillion: "\u03C4\u03B5\u03C4\u03C1\u03AC\u03BA\u03B9\u03C2 \u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            thousand: "\u03C7\u03AF\u03BB\u03B9\u03B1",
            trillion: "\u03C4\u03C1\u03B9\u03C3\u03B5\u03BA\u03B1\u03C4\u03BF\u03BC\u03BC\u03CD\u03C1\u03B9\u03BF",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u03BA\u03B1\u03B9 ",
        two_words_connector: " \u03BA\u03B1\u03B9 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u03C0.\u03BC.",
      formats: {
        default: "%d %B %Y %H:%M",
        long: "%A %d %B %Y %H:%M:%S %Z",
        short: "%d %b %H:%M"
      },
      pm: "\u03BC.\u03BC."
    }
  };
  var en = {
    accountants: {
      search_all_clinics: "[All Clinics]",
      search_cases: "Search cases",
      search_placeholder: "Name (Susan Smith) or Phone (555-555-5555) or Patient ID (M5-5555)",
      table_content: {
        check_number: "Check #",
        clinic: "Clinic",
        date_of_check: "Date of check",
        fund_payout: "%{fund} payout",
        line: "Line",
        pledge_amount: "Pledge amount",
        pledge_sent: "Pledge sent",
        weeks_at_procedure: "Weeks at procedure",
        weeks_at_procedure_display: "%{gestation} weeks"
      },
      title: "Accountant dashboard"
    },
    activerecord: {
      attributes: {
        clinic: {
          accepts_medicaid: "Accepts Medicaid",
          accepts_naf: "Accepts NAF",
          active: "Active",
          city: "City",
          distance: "Distance",
          email_for_pledges: "Email for Pledges",
          fax: "Fax",
          gestational_limit: "Gestational limit (in days)",
          location: "Location",
          name: "Name",
          phone: "Phone",
          state: "State",
          street_address: "Street address",
          zip: "ZIP"
        },
        external_pledge: {
          active: "Active",
          amount: "Amount",
          source: "Source"
        },
        fulfillment: {
          audited: "Audited",
          check_number: "Check number",
          date_of_check: "Date of check",
          fulfilled: "Fulfilled",
          fund_payout: "Fund payout",
          gestation_at_procedure: "Gestation at procedure",
          procedure_date: "Procedure date"
        },
        patient: {
          active: "Active",
          age: "Age",
          amount: "Amount",
          appointment_date: "Appointment date",
          appointment_time: "Appointment time",
          audited: "Audited",
          check_number: "Check number",
          city: "City",
          clinic_id: "Clinic ID",
          completed_ultrasound: "Completed ultrasound?",
          confirmed: "Confirmed",
          county: "County",
          date_of_check: "Date of check",
          employment_status: "Employment status",
          fulfilled: "Fulfilled",
          fund_id: "Fund ID",
          fund_payout: "Fund payout",
          fund_pledge: "Fund pledge",
          fund_pledged_at: "Fund pledged at",
          gestation_at_procedure: "Gestation at procedure",
          household_size_adults: "Adults in household",
          household_size_children: "Minors in household",
          income: "Income",
          initial_call_date: "Initial call date",
          insurance: "Insurance",
          language: "Language",
          last_menstrual_period_days: "Last menstrual period days",
          last_menstrual_period_weeks: "Last menstrual period weeks",
          line_id: "Line ID",
          multiday_appointment: "Multi-day appointment",
          naf_pledge: "NAF pledge",
          name: "Name",
          other_contact: "Other contact",
          other_contact_relationship: "Other contact relationship",
          other_phone: "Other phone",
          patient_contribution: "Patient contribution",
          pledge_generated_at: "Pledge generated at",
          pledge_generated_by_id: "Pledge generated by",
          pledge_sent: "Pledge sent",
          pledge_sent_at: "Pledge sent at",
          practical_support_waiver: "Practical support waiver",
          primary_phone: "Primary phone",
          procedure_cost: "Procedure cost",
          procedure_date: "Procedure date",
          procedure_type: "Procedure type",
          pronouns: "Pronouns",
          race_ethnicity: "Race / Ethnicity",
          referred_by: "Referred by",
          referred_to_clinic: "Referred to clinic",
          resolved_without_fund: "Resolved without fund",
          shared_flag: "Shared Flag",
          solidarity: "Solidarity Pledge",
          source: "Source",
          special_circumstances: "Special circumstances",
          state: "State",
          support_date: "Support date",
          support_type: "Support type",
          textable: "Textable",
          ultrasound_cost: "Ultrasound cost",
          voicemail_preference: "Voicemail preference",
          zipcode: "Zipcode"
        },
        practical_support: {
          attachment_url: "Attachment URL",
          confirmed: "Confirmed",
          fulfilled: "Fulfilled",
          purchase_date: "Purchase date",
          source: "Source",
          support_date: "Support date",
          support_type: "Support type"
        },
        user: {
          current_password: "Current password",
          email: "Email",
          name: "First and last name",
          password: "Password",
          password_confirmation: "Password confirmation",
          role: "Role"
        }
      },
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    call: {
      new: {
        call_now: "Call %{name} now:",
        result: {
          did_not_reach_patient: "I couldn't reach the patient",
          left_voicemail: "I left a voicemail for the patient",
          reached_patient: "I reached the patient"
        },
        voicemail_instructions: {
          no_voicemail: "Do not leave this patient a voicemail",
          voicemail_identify: "Voicemail OK; Okay to identify as %{fund}",
          voicemail_no_identify: "Voicemail OK; Do not identify as %{fund}"
        }
      },
      other_contact: {
        number: "%{name}'s number:",
        other_contact: "%{name} %{rel} is the primary contact for this patient%{punc}",
        primary: "Primary contact:"
      },
      status: {
        couldnt_reach_patient: "Couldn't reach patient",
        left_voicemail: "Left voicemail",
        reached_patient: "Reached patient"
      }
    },
    clinic_locator: {
      description: "Filter out clinics according to accepting NAF/NNAF and their gestation limits; sort by proximity to a ZIP code.",
      experimental_note: "This is an experimental feature.",
      gestation_above: "Gestation above",
      medicaid_only_toggle: "Show only Medicaid clinics",
      naf_only_toggle: "Show only NAF clinics",
      patient_zip_code: "Patient ZIP code",
      result: {
        affordable_title: "Most affordable clinics",
        distance: "%{miles} miles",
        goes_to: "%{weeks}w%{days}d",
        location: "%{city}, %{state}",
        nearest_title: "Nearest clinics",
        not_specified: "Not specified"
      },
      search_button: "Search clinics",
      title: "Clinic Locator Assistant"
    },
    clinics: {
      edit: {
        title: "Edit clinic details"
      },
      form: {
        active_help: "Are we actively working with this clinic?",
        add_clinic: "Add clinic",
        costs_weeks: "Costs at %{week} weeks",
        email_help: "Email(s) this clinic uses to receive pledges. If fax preferred, leave this field blank.",
        save_changes: "Save changes",
        zip_help: "To exclude this clinic from Clinic Finder searches, give it the ZIP code 99999."
      },
      index: {
        title: "Clinics"
      },
      new: {
        title: "Add a new clinic"
      }
    },
    common: {
      add: "Add",
      appointment_date_short: "Appt date",
      back: "Back",
      clinic: "Clinic",
      close: "Close",
      days_along: "Days along at intake",
      detail: "Detail",
      email: "Email",
      for: "for",
      from: "from",
      medicaid: "Medicaid",
      naf: "NAF",
      name: "Name",
      no: "No",
      notes: "Notes",
      on_: "on",
      patient: "Patient",
      phone: "Phone",
      prefer_not_to_answer: "Prefer not to answer",
      purchased_on: "Purchased on",
      save: "Save",
      search: "Search",
      status: "Status",
      update: "Update",
      weeks_along_short: "Weeks along",
      weeks_days: "%{weeks} weeks, %{days} days",
      weeks_days_short: "%{weeks}w %{days}d",
      yes: "Yes"
    },
    configs: {
      config: {
        current_options: "Current options are:",
        update_options_for: "Update options for %{option}"
      },
      index: {
        sub_text: "Use this to set custom insurance, language, external pledge options, and help text for pledge limits.",
        title: "Configs"
      }
    },
    dashboard: {
      activity_log: {
        label: "%{current_line} Line Activity Log"
      },
      budget_bar: {
        pledged: "pledged",
        pledged_item: "%{amount} pledged",
        pledged_report: "%{amount} pledged (%{count} patients)",
        pop_content_appt_date: "appt on %{date}",
        pop_content_no_appt_date: "no appt date",
        remaining: "remaining",
        sent: "sent",
        sent_item: "%{amount} sent",
        spent: "spent"
      },
      helpers: {
        voicemail_options: {
          no: "Do not leave a voicemail",
          not_specified: "No instructions; no ID VM",
          yes: "Voicemail OK, ID OK"
        }
      },
      overview: {
        budget_for: "Budget for %{date_range}"
      },
      partial_titles: {
        call_list: "Your call list",
        completed_calls: "Your completed calls",
        search_results: "Search results",
        shared_cases: "Shared cases",
        unconfirmed_support: "Unconfirmed Practical Support"
      },
      search: {
        header: "Build your call list",
        input_placeholder: "Name (Susan Smith) or Phone (555-555-5555)",
        no_results: "Your search produced no results"
      },
      table_content: {
        clear_call_list: "Clear your call list",
        clear_call_list_confirm: "Are you sure you want to clear your current call list? This will also clear completed calls.",
        remove_from_call_list_confirm: "Are you sure you want to remove %{name} from your call list?"
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%m-%d-%Y",
        long: "%B %d, %Y",
        medium: "%b %d, %Y",
        short: "%b %d"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "month",
        "day",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about 1 hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about 1 month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years",
          true: "about 1 year"
        },
        almost_x_years: {
          one: "almost 1 year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than 1 second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over 1 year",
          other: "over %{count} years"
        },
        x_days: {
          one: "1 day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "1 minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "1 month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "1 second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "1 year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Seconds",
        year: "Year"
      }
    },
    devise: {
      confirmations: {
        confirmed: "Your email address has been successfully confirmed.",
        send_instructions: "You will receive an email with instructions for how to confirm your email address in a few minutes.",
        send_paranoid_instructions: "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
      },
      failure: {
        already_authenticated: "You are already signed in.",
        expired: "Your account has expired due to inactivity. Please contact the site administrator.",
        inactive: "Your account is not activated yet.",
        invalid: "Invalid %{authentication_keys} or password.",
        last_attempt: "You have one more attempt before your account is locked.",
        locked: "Your account is locked.",
        not_found_in_database: "Invalid %{authentication_keys} or password.",
        session_limited: "Your login credentials were used in another browser. Please sign in again to continue in this browser.",
        timeout: "Your session expired. Please sign in again to continue.",
        unauthenticated: "",
        unconfirmed: "You have to confirm your email address before continuing."
      },
      invalid_captcha: "The captcha input was invalid.",
      invalid_security_question: "The security question answer was invalid.",
      mailer: {
        confirmation_instructions: {
          subject: "Confirmation instructions"
        },
        email_changed: {
          subject: "Email Changed"
        },
        password_change: {
          subject: "Password Changed"
        },
        reset_password_instructions: {
          subject: "Reset password instructions"
        },
        unlock_instructions: {
          subject: "Unlock instructions"
        }
      },
      omniauth_callbacks: {
        failure: 'Could not authenticate you from %{kind} because "%{reason}".',
        success: "Successfully logged in with %{kind}"
      },
      paranoid_verification_code: {
        show: {
          submit: "Submit",
          submit_verification_code: "Submit verification code",
          verification_code: "Verification code"
        },
        updated: "Verification code accepted"
      },
      paranoid_verify: {
        code_required: "Please enter the code our support team provided"
      },
      password: {
        new: {
          send_reset: "Send me password reset instructions",
          title: "Password Reset"
        }
      },
      password_expired: {
        change_required: "Your password is expired. Please renew your password.",
        show: {
          change_my_password: "Change my password",
          current_password: "Current password",
          new_password: "New password",
          new_password_confirmation: "Confirm new password",
          renew_your_password: "Renew your password"
        },
        updated: "Your new password is saved."
      },
      passwords: {
        no_token: "You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided.",
        send_instructions: "You will receive an email with instructions on how to reset your password in a few minutes.",
        send_paranoid_instructions: "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.",
        updated: "Your password has been changed successfully. You are now signed in.",
        updated_not_active: "Your password has been changed successfully."
      },
      registrations: {
        destroyed: "Bye! Your account has been successfully cancelled. We hope to see you again soon.",
        signed_up: "Welcome! You have signed up successfully.",
        signed_up_but_inactive: "You have signed up successfully. However, we could not sign you in because your account is not yet activated.",
        signed_up_but_locked: "You have signed up successfully. However, we could not sign you in because your account is locked.",
        signed_up_but_unconfirmed: "A message with a confirmation link has been sent to your email address. Please follow the link to activate your account.",
        update_needs_confirmation: "You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirmation link to confirm your new email address.",
        updated: "Your account has been updated successfully.",
        updated_but_not_signed_in: "Your account has been updated successfully, but since your password was changed, you need to sign in again."
      },
      sessions: {
        already_signed_out: "Signed out successfully.",
        failure: {
          user: {
            unauthenticated: ""
          }
        },
        new: {
          google_signin: "Sign in with Google (recommended)",
          lock_email_not_received: "Didn't receive unlock instructions?",
          password: "Password",
          password_forgot: "Forgot your password?",
          password_signin: "Or, sign in with a password:",
          password_submit: "Sign in with password",
          reset_email_not_received: "Didn't receive confirmation instructions?",
          sign_in: "Sign in"
        },
        signed_in: "Signed in successfully.",
        signed_out: "Signed out successfully.",
        user: {
          signed_in: ""
        }
      },
      unlocks: {
        send_instructions: "You will receive an email with instructions for how to unlock your account in a few minutes.",
        send_paranoid_instructions: "If your account exists, you will receive an email with instructions for how to unlock it in a few minutes.",
        unlocked: "Your account has been unlocked successfully. Please sign in to continue."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        already_confirmed: "was already confirmed, please try signing in",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        confirmation_period_expired: "needs to be confirmed within %{period}, please request a new one",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        equal_to_current_password: "must be different than the current password.",
        equal_to_email: "must be different than the email.",
        even: "must be even",
        exclusion: "is reserved",
        expired: "has expired, please request a new one",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        in: "must be in %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        not_found: "not found",
        not_locked: "was not locked",
        not_saved: {
          one: "1 error prohibited this %{resource} from being saved:",
          other: "%{count} errors prohibited this %{resource} from being saved:"
        },
        odd: "must be odd",
        other_than: "must be other than %{count}",
        password: {
          password_strength: "Passwords need to be stronger than that. Try a longer or more complicated password please."
        },
        password_complexity: {
          digit: {
            one: "must contain at least one digit",
            other: "must contain at least %{count} digits"
          },
          lower: {
            one: "must contain at least one lower-case letter",
            other: "must contain at least %{count} lower-case letters"
          },
          symbol: {
            one: "must contain at least one punctuation mark or symbol",
            other: "must contain at least %{count} punctuation marks or symbols"
          },
          upper: {
            one: "must contain at least one upper-case letter",
            other: "must contain at least %{count} upper-case letters"
          }
        },
        password_too_long: "is too long",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        taken_in_past: "was used previously.",
        too_long: {
          one: "is too long (maximum is 1 character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is 1 character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be 1 character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "1 error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    events: {
      add_to_call_list: "Add to call list",
      couldnt_reach_patient: "called, but couldn't reach",
      left_voicemail: "left a voicemail for",
      pledged: "sent a $%{pledge_amount} pledge for",
      reached_patient: "reached",
      unknown_action: "interacted with"
    },
    external_pledge: {
      edit: {
        fund_pledge: "%{source} pledge"
      },
      new: {
        amount: "Amount",
        create_button: "Create External pledge",
        source: "Source",
        title: "Or, record a new external pledge:"
      },
      sources: {
        clinic_discount: "Clinic discount",
        other_funds: "Other funds (see notes)"
      }
    },
    flash: {
      account_locked: "Account currently locked, check with your fund.",
      action_on_account: "%{verb} %{name}'s account.",
      actions: {
        create: {
          notice: "%{resource_name} was successfully created."
        },
        destroy: {
          alert: "%{resource_name} could not be destroyed.",
          notice: "%{resource_name} was successfully destroyed."
        },
        update: {
          notice: "%{resource_name} was successfully updated."
        }
      },
      cant_lock_own_account: "You can't lock your own account. Ask another admin.",
      clinic_created: "%{clinic} created!",
      clinic_details_updated: "Successfully updated clinic details",
      config_failed_update: "Config failed to update - %{error}",
      config_update_success: "Config updated successfully",
      demote_own_account_warn: "For safety reasons, you are not allowed to change your role from an admin to a not-admin. Ask another admin to demote you.",
      error_saving_clinic: "Errors prevented this clinic from being saved - %{error}",
      error_saving_clinic_details: "Error saving clinic details - %{error}",
      fetch_pledge_error: "Errors prevented this pledge from generating. Please check that you've filled out any form inputs, and reach out to the DARIA team if the problem persists.",
      locked: "Locked",
      new_patient_error: "Errors prevented this patient from being saved - %{error}",
      new_patient_save: "A new patient has been successfully saved",
      patient_info_saved: "Patient info successfully saved at %{timestamp}",
      patient_removed_database: "Patient successfully removed from database.",
      patient_removed_database_error: "Can't delete patients with pledges; please correct the patient record and try again.",
      patient_save_error: "Errors prevented this patient from being saved - %{error}",
      patient_save_success: "%{patient} has been successfully saved! Add notes and external pledges, confirm the hard pledge and the %{fund} pledge amounts are the same, and you're set.",
      pledge_download_alert: "You need to enter your name in the box to sign and download the pledge",
      unlocked: "Unlocked",
      user_created: "User created!",
      user_update_error: "Error saving user details - %{error}",
      user_update_success: "Successfully updated user details"
    },
    helpers: {
      page_entries_info: {
        entry: {
          one: "entry",
          other: "entries",
          zero: "entries"
        },
        more_pages: {
          display_entries: "Displaying %{entry_name} <b>%{first}&nbsp;-&nbsp;%{last}</b> of <b>%{total}</b> in total"
        },
        one_page: {
          display_entries: {
            one: "Displaying <b>1</b> %{entry_name}",
            other: "Displaying <b>all %{count}</b> %{entry_name}",
            zero: "No %{entry_name} found"
          }
        }
      },
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    i18n_tasks: {
      add_missing: {
        added: {
          one: "Added %{count} key",
          other: "Added %{count} keys"
        }
      },
      cmd: {
        args: {
          default_text: "Default: %{value}",
          desc: {
            all_locales: "Do not expect key patterns to start with a locale, instead apply them to all locales implicitly.",
            config: "Override config location",
            confirm: "Confirm automatically",
            data_format: "Data format: %{valid_text}.",
            keep_order: "Keep the order of the keys",
            key_pattern: "Filter by key pattern (e.g. 'common.*')",
            locale: "i18n_tasks.common.locale",
            locale_to_translate_from: "Locale to translate from",
            locales_filter: "Locale(s) to process. Special: base",
            missing_types: "Filter by types: %{valid}",
            nostdin: "Do not read from stdin",
            out_format: "Output format: %{valid_text}",
            pattern_router: "Use pattern router: keys moved per config data.write",
            strict: 'Avoid inferring dynamic key usages such as t("cats.#{cat}.name"). Takes precedence over the config setting if set.',
            translation_backend: "Translation backend [google, deepl, yandex, openai])",
            value: "Value. Interpolates: %%{value}, %%{human_key}, %%{key}, %%{default}, %%{value_or_human_key}, %%{value_or_default_or_human_key}"
          }
        },
        desc: {
          add_missing: "add missing keys to locale data, optionally match a pattern",
          check_consistent_interpolations: "verify that all translations use correct interpolation variables",
          check_normalized: "verify that all translation data is normalized",
          config: "display i18n-tasks configuration",
          cp: "copy the keys in locale data that match the given pattern",
          data: "show locale data",
          data_merge: "merge locale data with trees",
          data_remove: "remove keys present in tree from data",
          data_write: "replace locale data with tree",
          eq_base: "show translations equal to base value",
          find: "show where keys are used in the code",
          gem_path: "show path to the gem",
          health: "is everything OK?",
          irb: "start REPL session within i18n-tasks context",
          missing: "show missing translations, optionally match a pattern",
          mv: "rename/merge the keys in locale data that match the given pattern",
          normalize: "normalize translation data: sort and move to the right files",
          remove_unused: "remove unused keys",
          rm: "remove the keys in locale data that match the given pattern",
          translate_missing: "translate missing keys with Google Translate or DeepL Pro, optionally match a pattern",
          tree_convert: "convert tree between formats",
          tree_filter: "filter tree by key pattern",
          tree_merge: "merge trees",
          tree_mv_key: "rename/merge/remove the keys matching the given pattern",
          tree_set_value: "set values of keys, optionally match a pattern",
          tree_subtract: "tree A minus the keys in tree B",
          tree_translate: "Google Translate a tree to root locales",
          unused: "show unused translations"
        },
        encourage: [
          "Good job!",
          "Well done!",
          "Perfect!"
        ],
        enum_list_opt: {
          invalid: "%{invalid} is not in: %{valid}."
        },
        enum_opt: {
          invalid: "%{invalid} is not one of: %{valid}."
        },
        errors: {
          invalid_backend: "Invalid backend: %{invalid}. Must be one of %{valid}.",
          invalid_format: "invalid format: %{invalid}. valid: %{valid}.",
          invalid_locale: "invalid locale: %{invalid}",
          invalid_missing_type: {
            one: "invalid type: %{invalid}. valid: %{valid}.",
            other: "unknown types: %{invalid}. valid: %{valid}."
          },
          pass_forest: "pass locale forest"
        }
      },
      common: {
        continue_q: "Continue?",
        key: "Key",
        locale: "Locale",
        n_more: "%{count} more",
        value: "Value"
      },
      data_stats: {
        text: "has %{key_count} keys across %{locale_count} locales. On average, values are %{value_chars_avg} characters long, keys have %{key_segments_avg} segments, a locale has %{per_locale_avg} keys.",
        text_single_locale: "has %{key_count} keys in total. On average, values are %{value_chars_avg} characters long, keys have %{key_segments_avg} segments.",
        title: "Forest (%{locales})"
      },
      deepl_translate: {
        errors: {
          no_api_key: "Setup DeepL Pro API key via DEEPL_AUTH_KEY environment variable or translation.deepl_api_key in config/i18n-tasks.yml. Get the key at https://www.deepl.com/pro.",
          no_results: "DeepL returned no results.",
          specific_target_missing: "You must supply a specific variant for the given target language e.g. en-us instead of en."
        }
      },
      google_translate: {
        errors: {
          no_api_key: "Set Google API key via GOOGLE_TRANSLATE_API_KEY environment variable or translation.google_translate_api_key in config/i18n-tasks.yml. Get the key at https://code.google.com/apis/console.",
          no_results: "Google Translate returned no results. Make sure billing information is set at https://code.google.com/apis/console."
        }
      },
      health: {
        no_keys_detected: "No keys detected. Check data.read in config/i18n-tasks.yml."
      },
      inconsistent_interpolations: {
        none: "No inconsistent interpolations found."
      },
      missing: {
        details_title: "Value in other locales or source",
        none: "No translations are missing."
      },
      openai_translate: {
        errors: {
          no_api_key: "Set OpenAI API key via OPENAI_API_KEY environment variable or translation.openai_api_key in config/i18n-tasks.yml. Get the key at https://openai.com/.",
          no_results: "OpenAI returned no results."
        }
      },
      remove_unused: {
        confirm: {
          one: "%{count} translation will be removed from %{locales}.",
          other: "%{count} translation will be removed from %{locales}."
        },
        noop: "No unused keys to remove",
        removed: "Removed %{count} keys"
      },
      translate_missing: {
        translated: "Translated %{count} keys"
      },
      unused: {
        none: "Every translation is in use."
      },
      usages: {
        none: "No key usages found."
      },
      watsonx_translate: {
        errors: {
          no_api_key: "Set watsonx API key via WATSONX_API_KEY environment variable or translation.watsonx_api_key in config/i18n-tasks.yml. Get the key at https://www.ibm.com/products/watsonx-ai.",
          no_project_id: "Set watsonx Project ID via WATSONX_PROJECT_ID environment variable or translation.watsonx_api_key in config/i18n-tasks.yml. Get the key at https://www.ibm.com/products/watsonx-ai.",
          no_results: "watsonx returned no results."
        }
      },
      yandex_translate: {
        errors: {
          no_api_key: "Set Yandex API key via YANDEX_API_KEY environment variable or translation.yandex_api_key in config/i18n-tasks.yml. Get the key at https://tech.yandex.com/translate.",
          no_results: "Yandex returned no results."
        }
      }
    },
    lines: {
      new: {
        start: "Get started",
        welcome_to_daria: "Welcome to DARIA (%{fund} edition)!",
        what_line: "What line are you working on?"
      }
    },
    multi_factor: {
      authenticate: "Authenticate",
      authentication_error: "Authentication error",
      checking_sms_code_failed: "There was a problem checking the verification code - %{error}",
      code_invalid: "invalid code",
      confirmation: {
        heading: "New SMS Authentication Factor Registered: %{name}",
        message: "New authentication factor successfully registered!"
      },
      factor_list: {
        add_button: "Add New Authentication Factor",
        channel: "Channel",
        delete_button: "Delete",
        disabled: "Disabled",
        enable_button: "Enable Multi Factor Authentication",
        enabled: "Enabled",
        heading: "Multi Factor Authentication",
        name: "Name",
        status: "Status"
      },
      factor_select: {
        heading: "Select Authentication Factor"
      },
      login_successful: "Login with MFA successful!",
      next: "Next",
      registration: {
        heading: "Register SMS Authentication Factor",
        message: "Enter a name for this authentication factor and your phone number to register.",
        name_label: "Nickname",
        phone_label: "Phone",
        phone_placeholder: "e.g. 'my cell phone'"
      },
      sending_sms_code_failed: "There was a problem sending the verification code - %{error}",
      verification: {
        code_label: "Verification Code",
        heading: "Verify SMS Authentication Factor: %{name}",
        message: "You should receive a verification code at the phone number entered in the previous step. Enter the code here to complete registration."
      }
    },
    navigation: {
      admin_tools: {
        accounting: "Accounting",
        clinic_management: "Clinic Management",
        config_management: "Config Management",
        export: "Export anonymized CSV",
        label: "Admin",
        user_management: "User Management"
      },
      cm_resources: {
        label: "CM Resources"
      },
      current_line: {
        helper: "Your current line"
      },
      footer: {
        national_abortion_federation: "National Abortion Federation",
        please_send_feedback: "Please send feedback or ideas to the programming team at"
      },
      user_tools: {
        profile: "My Profile",
        sign_out: "Sign Out"
      }
    },
    note: {
      most_recent: "Most recent note from %{by} at %{at}:"
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          negative_format: "-%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB",
            zb: "ZB"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    patient: {
      abortion_information: {
        clinic_section: {
          clinic: "Clinic",
          clinic_display: "%{clinic_name} (%{city}, %{state})",
          inactive_clinics: "Inactive clinics",
          medicaid_only_toggle: "Enable only Medicaid clinics",
          multi_day: "multi-day",
          naf_only_toggle: "Enable only NAF clinics",
          not_currently_working_with_fund: "(Not currently working with %{fund}) - %{clinic_name}",
          procedure_type: "Procedure type",
          referred_to_clinic: "Referred to clinic",
          resolved_without_fund: "Resolved without assistance from %{fund}",
          solidarity: "Solidarity Pledge",
          solidarity_lead: "Solidarity Lead",
          title: "Clinic details",
          ultrasound_completed: "Ultrasound completed?"
        },
        cost_section: {
          abortion_cost: "Abortion cost",
          fund_pledge: "%{fund} pledge",
          naf_pledge: "National Abortion Federation pledge",
          outstanding_balance: "Outstanding Balance",
          patient_contribution: "Patient contribution",
          title: "Cost details",
          ultrasound_cost: "Ultrasound cost"
        },
        title: "Abortion information"
      },
      call_log: {
        delete_confirm: "Are you sure you want to remove this call from the call log?",
        record_new_call: "Record new call",
        table: {
          actions: "ACTIONS",
          case_manager: "CM",
          date: "DATE",
          remove_button: "Remove",
          result: "RESULT",
          time: "TIME"
        },
        title: "Call Log"
      },
      change_log: {
        objects: {
          external_pledge: "External pledge",
          fulfillment: "Fulfillment",
          patient: "Patient",
          practical_support: "Practical support"
        },
        table: {
          case_manager: "CM",
          change: "Change (from -> to)",
          modified_date: "Modified Date"
        },
        title: "Patient history"
      },
      dashboard: {
        approx_gestation: "Approx gestation at appt: %{weeks} weeks %{days} days",
        called_on: "Called on: %{date}",
        confirm_del: "Are you sure you want to delete %{name}? Only do this if you're sure this is a duplicate patient for the same pregnancy. (Seriously, no takebacks!)",
        currently: "Currently: %{weeks}w %{days}d",
        delete: "Delete duplicate patient record",
        delete_label: "Admin: Delete",
        phone: "Phone number",
        weeks_along: "Weeks along at intake"
      },
      data_entry: {
        patient_entry: "Patient Entry"
      },
      helper: {
        day: {
          one: "%{count} day",
          other: "%{count} days"
        },
        employment: {
          full_time: "Full-time",
          odd_jobs: "Odd jobs",
          part_time: "Part-time",
          student: "Student",
          unemployed: "Unemployed"
        },
        income: {
          "10_to_15": "$10,000-14,999 ($192-287/wk - $834-1250/mo)",
          "15_to_20": "$15,000-19,999 ($288-384/wk - $1251-1666/mo)",
          "20_to_25": "$20,000-24,999 ($385-480/wk - $1667-2083/mo)",
          "25_to_30": "$25,000-29,999 ($481-576/wk - $2084-2499/mo)",
          "30_to_35": "$30,000-34,999 ($577-672/wk - $2500-2916/mo)",
          "35_to_40": "$35,000-39,999 ($673-768/wk - $2917-3333/mo)",
          "40_to_45": "$40,000-44,999 ($769-864/wk - $3334-3749/mo)",
          "45_to_50": "$45,000-49,999 ($865-961/wk - $3750-4165/mo)",
          "50_to_60": "$50,000-59,999 ($962-1153/wk - $4166-4999/mo)",
          "60_to_75": "$60,000-74,999 ($1154-1441/wk - $5000-6249/mo)",
          "75_plus": "$75,000 or more ($1442+ /wk - $6250+ /mo)",
          under_10: "Under $9,999 ($192/wk - $833/mo)"
        },
        insurance: {
          none: "No insurance",
          other: "Other (add to notes)",
          unknown: "Don't know"
        },
        language: {
          English: "English"
        },
        practical_support: {
          companion: "Companion",
          lodging: "Lodging",
          not_sure_yet: "Not sure yet (see notes)",
          other: "Other (see notes)",
          travel_inside_region: "Travel inside the region",
          travel_to_region: "Travel to the region"
        },
        race: {
          asian_south_asian: "Asian or South Asian",
          black_african_american: "Black/African-American",
          hispanic_latino: "Hispanic/Latino",
          mixed_race_ethnicity: "Mixed Race/Ethnicity",
          native_american: "Native American",
          native_hawaiian_pacific_islander: "Native Hawaiian or Pacific Islander",
          other: "Other",
          white_caucasian: "White/Caucasian"
        },
        referred_by: {
          clinic: "Clinic",
          crime_victim_advocacy_center: "Crime victim advocacy center",
          domestic_violence_org: "Domestic violence crisis/intervention org",
          family: "Family member",
          friend: "Friend",
          fund: "%{fund} website or social media",
          homeless: "Homeless shelter",
          legal_clinic: "Legal clinic",
          naf: "NAF",
          nnaf: "NNAF",
          other_fund: "Other abortion fund",
          prev_patient: "Previous patient",
          school: "School",
          sexual_assault_crisis_org: "Sexual assault crisis org",
          title: "Referred by",
          web_search: "Google/Web search",
          youth: "Youth outreach"
        },
        week: {
          one: "%{count} week",
          other: "%{count} weeks"
        }
      },
      information: {
        household_help: "(including patient)",
        identifier: "Identifier",
        income_help: "Employment, Food Stamps, SS, TANF, etc.",
        insurance: "Patient insurance",
        language: "Preferred Language",
        other_contact: {
          name: "Other contact name",
          phone: "Other phone",
          relationship: "Relationship to other contact",
          title: "Other Contact"
        },
        referred_by: "How patient heard about %{fund}",
        special_circumstances: {
          domestic_violence: "Domestic violence",
          fetal_diagnosis: "Fetal diagnosis",
          homelessness: "Homelessness",
          incest: "Incest",
          medicaid_eligible: "Medicaid eligible",
          other_medical_issue: "Other medical issue",
          prison: "Prison",
          rape: "Rape",
          title: "Special Circumstances"
        },
        textable: "Textable?",
        title: "Patient information",
        voicemail_preference: "Voicemail preference"
      },
      menu: {
        abortion_information: "Abortion Information",
        call_log: "Call Log",
        cancel_pledge: "Cancel pledge",
        change_log: "Change Log",
        notes: "Notes",
        patient_information: "Patient Information",
        pledge_fulfillment: "Pledge Fulfillment",
        practical_support: "Practical Support",
        submit_pledge: "Submit pledge"
      },
      new: {
        add_button: "Add new patient",
        initial_call_date: "Initial Call Date",
        title: "Add a new patient:"
      },
      notes: {
        placeholder: "Enter notes here",
        shared_flag: "Share this patient for other case managers",
        submit: "Create Note",
        title: "Notes"
      },
      pledge: {
        cancel: {
          confirm: "Are you sure you want to cancel this pledge?",
          title: "Cancel Pledge"
        },
        errors: {
          blank_appt: "Appointment date cannot be blank",
          blank_clinic: "Clinic name cannot be blank",
          blank_fund: "%{fund} pledge field cannot be blank",
          blank_patient: "Patient name cannot be blank",
          data_required: "Data required:"
        },
        step_one: {
          clinic_name: "Clinic name:",
          patient_id: "Patient ID:",
          patient_name: "Patient name:",
          pledge_amount: "Pledge amount:",
          title: "Confirm the following information is correct:"
        },
        step_three: {
          clinic_fax: "Clinic fax",
          completed: "Once you've completed the pledging process, please use the check box below to indicate your pledge has been sent.",
          downloads: "Your pledge should appear in your computer's downloads.",
          fax_service: "Fax service",
          generated: "Awesome, you generated a %{fund} Pledge! Thanks!",
          sent_checkbox: "I sent the pledge",
          submit: "Submit the pledge for your client here:",
          title: "Submit and send your pledge:"
        },
        step_two: {
          blank_name_error: "You need to enter your name in the box to sign and download the pledge",
          form_disabled: "Please generate your pledge form and click next.",
          generate_note: "Note that this does NOT send your pledge to the clinic! Please click to the next page after generating your form to record that you have sent the pledge to the clinic.",
          generate_pledge_button: "Generate your pledge",
          sign_pledge: "Enter your name in this box to sign your pledge:",
          title: "Generate your pledge form:"
        }
      },
      pledge_fulfillment: {
        audit: {
          archive_note: "Patient will be archived on %{date}",
          audited_box: "Fulfillment audited?",
          title: "Auditing"
        },
        confirmation: {
          clinic: "Clinic:",
          confirm_info: "Please confirm that the clinic and pledge amounts are correct:",
          fund_pledge_amount: "%{fund} Pledge Amount:",
          pledge_generated_at: "Pledge generated at:",
          pledge_generated_by: "Pledge generated by:",
          pledge_sent_at: "Pledge sent at:",
          pledge_sent_by: "Pledge sent by:"
        },
        form: {
          check_num: "Check #",
          date_of_check: "Date of check",
          fund_payout: "%{fund} payout",
          pledge_fulfilled_box: "Pledge fulfilled",
          procedure_cost: "Procedure Cost",
          procedure_date: "Procedure date",
          weeks_along_at_procedure: "Weeks along at procedure"
        },
        title: "Pledge Fulfillment"
      },
      practical_support: {
        create: "Create new practical support entry",
        delete: "Delete",
        delete_confirm: "Are you sure you want to delete this practical support entry?",
        guidance_link: "%{fund} practical support guidance",
        new: "Record new practical support info:",
        practical_support_waiver: "Has signed a practical support waiver",
        title: "Practical support"
      },
      shared: {
        appt_date: "Appointment date",
        name: "First and last name",
        status: "Status"
      },
      status: {
        help: {
          dropoff: "Patient has not been heard from in 120+ days.",
          fulfilled: "Patient has been marked fulfilled.",
          fundraising: "The patient has an appointment date, and is working on raising funds.",
          needs_appt: "The patient has spoken to the fund, but has not yet set an appointment date with a clinic.",
          no_contact: "A patient has initiated contact, but nobody from the fund has spoken to them yet.",
          pledge_paid: "Accountant has paid back the clinic for the pledge.",
          pledge_sent: "A case manager has sent a pledge to the clinic on behalf of the patient.",
          pledge_unfulfilled: "Patient had a pledge sent 150+ days ago but has not cashed it.",
          resolved: "Patient has decided to not involve the fund in their plans."
        },
        key: {
          dropoff: "Probable Dropoff",
          fulfilled: "Pledge Fulfilled",
          fundraising: "Fundraising",
          needs_appt: "Needs Appointment",
          no_contact: "No Contact Made",
          pledge_paid: "Pledge Paid",
          pledge_sent: "Pledge Sent",
          pledge_unfulfilled: "Pledge Not Fulfilled",
          resolved: "Resolved Without %{fund}"
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %I:%M:%S %p %Z",
        long: "%B %d, %Y %I:%M %p",
        short: "%d %b %I:%M %p"
      },
      pm: "pm"
    },
    tooltips: {
      budget_bar: "The budget bar lists money tentatively set aside for a patient (by entering a value in the %{fund} pledge field) and money sent to a clinic for a patient (by checking the I sent the pledge checkbox) over a given period.",
      call_list: "This sortable list is used to keep track of patients to call back during your shift. Use the search to populate it.",
      completed_calls: "This is a list of patients you have called within the last 8 hours.",
      mandatory_ultrasound: "If you are in a state that requires ultrasounds and the patient has completed one, you can log it here.",
      patient_identifier: "Semi-unique internal identifier for this patient, based on their phone number.",
      practical_support_confirmed: "Check this box if this practical support is confirmed by the point of contact.",
      practical_support_fulfilled: "Check this box if this practical support is completed or paid out, and requires no further attention.",
      record_new_external_pledge: "External pledges is our term for pledges by other abortion funds also working with a patient.",
      referred_to_clinic: "Check this box if you as a case manager referred the patient to a particular clinic.",
      resolved_without_fund: "This is used to indicate that a patient does not require or want our services any longer.",
      shared_cases: "These are patients who require a little more attention. This list is shared across all case managers working on a single line. Patients are removed from this list automatically after they are marked as resolved without assistance, or after %{shared_reset_days} days of inactivity.",
      solidarity: "Indicates a case to which this fund is providing support, but not handling.",
      solidarity_lead: "This is the fund serving as point-of-contact or coordinating funding for this patient.",
      status_definition: "Status definition",
      unconfirmed_support: "These are patients who have unconfirmed practical supports."
    },
    user: {
      common: {
        last_login: "Last Login",
        role: "Role"
      },
      edit: {
        admin_actions: "Admin actions",
        lock_an_account: "Lock an account",
        update_details: "Update details",
        update_users_role_permissions: "Update this user's role and permissions"
      },
      index: {
        add_new_user: "Add New User",
        user_account_management: "User Account Management"
      },
      new: {
        create_user: "Create User",
        edit_role_after_creating: "New users by default have CM permissions, which let them use the case management workflow. To give someone data access or admin permissions, edit them after you create their accounts here."
      },
      profile_edit: {
        awaiting_confirmation: "Currently waiting for confirmation for: %{email}",
        change_password: "Change your password",
        current_password: "Enter your current password to confirm any changes",
        new_password: "New password",
        update_info_button: "Update info",
        user_panel: "User panel for %{email} (%{name})"
      },
      roles: {
        admin: "The admin role is for people who are managing their fund's DARIA instance or case manager corps. This gives access to what CMs and Data Volunteers have, plus the following: user management tools, clinic management tools, DARIA instance configuration tools, and the ability to delete patients from the individual patient record page (such as in the case of a duplicate entry).",
        cm: "The Case Manager role is for people doing patient intake and making calls. This gives access to the main call list dashboard, the individual patient record page (minus the ability to edit fulfillment info), and the data entry page.",
        data_volunteer: "The Data Volunteer role is for people who require access to data or accounting tools. This gives access to what CMs have, plus the following: accounting tools for pledge reconcilling, reporting tools with summary data on patient intake, the fulfillment tab on the individual patient record page (for marking pledges as paid out), and the ability to download an anonymized spreadsheet of data for analysis."
      },
      search: {
        button: "Search",
        text_field: "Name or Email"
      },
      user_table: {
        date_created: "Date Created",
        full_name: "Full Name"
      }
    },
    views: {
      pagination: {
        first: "&laquo; First",
        last: "Last &raquo;",
        next: "Next &rsaquo;",
        previous: "&lsaquo; Prev",
        truncate: "&hellip;"
      }
    }
  };
  var en_AU = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_CA = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%B %d, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %I:%M:%S %p %Z",
        long: "%B %d, %Y %I:%M %p",
        short: "%d %b %I:%M %p"
      },
      pm: "pm"
    }
  };
  var en_CY = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_GB = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\xA3"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_IE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_IN = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_NZ = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_TT = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Seconds",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "TT$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var en_US = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%m-%d-%Y",
        long: "%B %d, %Y",
        short: "%b %d"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "month",
        "day",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        in: "must be in %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %I:%M:%S %p %Z",
        long: "%B %d, %Y %I:%M %p",
        short: "%d %b %I:%M %p"
      },
      pm: "pm"
    }
  };
  var en_ZA = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        other_than: "must be other than %{count}",
        present: "must be blank",
        required: "must exist",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "R"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var eo = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validado malsukcesis: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "dim",
        "lun",
        "mar",
        "mer",
        "\u0135a\u016D",
        "ven",
        "sab"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "feb.",
        "mar.",
        "apr.",
        "majo",
        "jun.",
        "jul.",
        "a\u016Dg.",
        "sep.",
        "okt.",
        "nov.",
        "dec."
      ],
      day_names: [
        "diman\u0109o",
        "lundo",
        "mardo",
        "merkredo",
        "\u0135a\u016Ddo",
        "vendredo",
        "sabato"
      ],
      formats: {
        default: "%Y/%m/%d",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "januaro",
        "februaro",
        "marto",
        "aprilo",
        "majo",
        "junio",
        "julio",
        "a\u016Dgusto",
        "septembro",
        "oktobro",
        "novembro",
        "decembro"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0109irka\u016D unu horo",
          other: "\u0109irka\u016D %{count} horoj"
        },
        about_x_months: {
          one: "\u0109irka\u016D unu monato",
          other: "\u0109irka\u016D %{count} monatoj"
        },
        about_x_years: {
          one: "\u0109irka\u016D uno jaro",
          other: "\u0109irka\u016D %{count} jaroj"
        },
        almost_x_years: {
          one: "preska\u016D unu jaro",
          other: "preska\u016D %{count} jaroj"
        },
        half_a_minute: "duona minuto",
        less_than_x_minutes: {
          one: "malpli ol unu minuto",
          other: "malpli ol %{count} minutoj",
          zero: "malpli ol unu minuto"
        },
        less_than_x_seconds: {
          one: "malpli ol unu sekundo",
          other: "malpli ol %{count} sekundoj",
          zero: "malpli ol unu sekundo"
        },
        over_x_years: {
          one: "pli ol unu jaro",
          other: "pli ol %{count} jaroj"
        },
        x_days: {
          one: "%{count} tago",
          other: "%{count} tagoj"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutoj"
        },
        x_months: {
          one: "%{count} monato",
          other: "%{count} monatoj"
        },
        x_seconds: {
          one: "%{count} sekundo",
          other: "%{count} sekundoj"
        }
      },
      prompts: {
        day: "Tago",
        hour: "Horo",
        minute: "Minuto",
        month: "Monato",
        second: "Sekundo",
        year: "Jaro"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "devas esti akceptita",
        blank: "devas esti kompletigita",
        confirmation: "ne kongruas kun la konfirmo",
        empty: "devas esti kompletigita",
        equal_to: "devas egali %{count}",
        even: "devas esti para",
        exclusion: "ne estas disponebla",
        greater_than: "devas superi %{count}",
        greater_than_or_equal_to: "devas superi a\u016D egali %{count}",
        inclusion: "ne estas inkluzivita de la listo",
        invalid: "estas nevalida",
        less_than: "devas malsuperi %{count}",
        less_than_or_equal_to: "devas malsuperi a\u016D egali %{count}",
        not_a_number: "ne estas nombro",
        not_an_integer: "devas esti entjero",
        odd: "devas esti nepara",
        taken: "ne estas disponebla",
        too_long: "estas tro longa (maksimume %{count} karekteroj)",
        too_short: "estas tro mallonga (minimume %{count} karakteroj)",
        wrong_length: "ne estas je \u011Dusta longo (devas enhavi %{count} karakterojn)"
      },
      template: {
        body: "Kontrolu la jenajn kampojn: ",
        header: {
          one: "Ne eblas registri tiun %{model}: %{count} eraro",
          other: "Ne eblas registri tiun %{model}: %{count} eraroj"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Bonvolu elekti"
      },
      submit: {
        create: "Krei %{model}",
        submit: "Registri tiun %{model}",
        update: "Modifi tiun %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miliardo",
            million: "miliono",
            quadrillion: "miliono da miliardoj",
            thousand: "mil",
            trillion: "mil miliardoj",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "bitoko",
              other: "bitokoj"
            },
            gb: "Gb",
            kb: "kb",
            mb: "Mb",
            tb: "Tb"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " kaj ",
        two_words_connector: " kaj ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d %B %Y %H:%M:%S",
        long: "%A %d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var es = {
    accountants: {
      search_all_clinics: "[Todas Cl\xEDnicas]",
      search_cases: "Buscar casos",
      search_placeholder: "Nombre (Susan Smith) o tel\xE9fono (555-555-5555) o identificaci\xF3n del paciente (M5-5555)",
      table_content: {
        check_number: "# de cheque",
        clinic: "Cl\xEDnica",
        date_of_check: "Fecha del cheque",
        fund_payout: "Pago de %{fund}",
        line: "L\xEDnea",
        pledge_amount: "Cantidad de promesa",
        pledge_sent: "Promesa enviada",
        weeks_at_procedure: "Semanas en el procedimiento",
        weeks_at_procedure_display: "%{gestation} semanas"
      },
      title: "Tablero de contador"
    },
    activerecord: {
      attributes: {
        clinic: {
          accepts_medicaid: "Acepta Medicaid",
          accepts_naf: "Acepta NAF",
          active: "Activo",
          city: "Ciudad",
          distance: "Distancia",
          email_for_pledges: "Email para promesas",
          fax: "Fax",
          gestational_limit: "L\xEDmite gestacional (en d\xEDas)",
          location: "Ubicaci\xF3n",
          name: "Nombre",
          phone: "Tel\xE9fono",
          state: "Estado",
          street_address: "Direcci\xF3n",
          zip: "C\xF3digo postal"
        },
        external_pledge: {
          active: "Activa",
          amount: "Monto",
          source: "Fuente"
        },
        fulfillment: {
          audited: "Auditada",
          check_number: "Cheque #",
          date_of_check: "Fecha del cheque",
          fulfilled: "Promesa cumplida",
          fund_payout: "Pago de fund",
          gestation_at_procedure: "Semanas a lo largo del pocedimiento",
          procedure_date: "Fecha de procedimiento"
        },
        patient: {
          active: "Activa",
          age: "Edad",
          amount: "Monto",
          appointment_date: "D\xEDa de la cita",
          appointment_time: "Hora de la cita",
          audited: "Auditada",
          check_number: "Cheque #",
          city: "Ciudad",
          clinic_id: "ID de la cl\xEDnica",
          completed_ultrasound: "Ultrasonido completado",
          confirmed: "Confirmada",
          county: "Condado",
          date_of_check: "Fecha del cheque",
          employment_status: "Estatus de empleo",
          fulfilled: "Cumplida",
          fund_id: "ID del fondo",
          fund_payout: "Pago de fondos",
          fund_pledge: "Promesa de fondos",
          fund_pledged_at: "Fondo prometido en",
          gestation_at_procedure: "Semanas a lo largo del pocedimiento",
          household_size_adults: "Adultos en el Hogar",
          household_size_children: "Menores en el Hogar",
          income: "Ingresos",
          initial_call_date: "Fecha de llamada inicial",
          insurance: "Seguro m\xE9dico",
          language: "Idioma",
          last_menstrual_period_days: "\xDAltimos d\xEDas del per\xEDodo menstrual",
          last_menstrual_period_weeks: "\xDAltimas semanas del per\xEDodo menstrual",
          line_id: "ID de la l\xEDnea",
          multiday_appointment: "Cita de varios d\xEDas",
          naf_pledge: "Promesa de la NAF",
          name: "Nombre",
          other_contact: "Otro contacto",
          other_contact_relationship: "Otra relacion de contacto",
          other_phone: "Otro tel\xE9fono",
          patient_contribution: "Contribuci\xF3n del paciente",
          pledge_generated_at: "Promesa generada en",
          pledge_generated_by_id: "Promesa generada por",
          pledge_sent: "Promeso enviada",
          pledge_sent_at: "Promesa enviada en",
          practical_support_waiver: "Exenci\xF3n de soporte pr\xE1ctico",
          primary_phone: "N\xFAmero de tel\xE9fono principal",
          procedure_cost: "Costo del procedimiento",
          procedure_date: "Fecha de procedimiento",
          procedure_type: "Tipo de procedimiento",
          pronouns: "Pronombres",
          race_ethnicity: "Raza / Etnicidad",
          referred_by: "Referido por",
          referred_to_clinic: "Referido a la cl\xEDnica",
          resolved_without_fund: "Resuelto sin ayuda de fondo",
          shared_flag: "Bandera compartida",
          solidarity: "Promesa solidaria",
          source: "Fuente",
          special_circumstances: "Circunstancias Especiales",
          state: "Estado",
          support_date: "Fecha del soporte",
          support_type: "Tipo de soporte",
          textable: "Textable",
          ultrasound_cost: "Costo del ultrasonido",
          voicemail_preference: "Preferencia de correo de voz",
          zipcode: "C\xF3digo postal"
        },
        practical_support: {
          attachment_url: "URL adjunta",
          confirmed: "Confirmado",
          fulfilled: "Cumplida",
          purchase_date: "D\xEDa de compra",
          source: "Fuente",
          support_date: "D\xEDa de el apoyo",
          support_type: "Tipo de apoyo"
        },
        user: {
          confirmation_sent_at: "Confirmaci\xF3n enviada a",
          confirmation_token: "C\xF3digo de confirmaci\xF3n",
          confirmed_at: "Confirmado en",
          created_at: "Creado en",
          current_password: "Contrase\xF1a actual",
          current_sign_in_at: "Fecha del ingreso actual",
          current_sign_in_ip: "IP del ingreso actual",
          email: "Correo Electr\xF3nico/Email",
          encrypted_password: "Contrase\xF1a cifrada",
          failed_attempts: "Intentos fallidos",
          last_sign_in_at: "Fecha del \xFAltimo ingreso",
          last_sign_in_ip: "IP del \xFAltimo inicio",
          locked_at: "Fecha de bloqueo",
          name: "Nombre y apellido",
          password: "Contrase\xF1a",
          password_confirmation: "Confirmaci\xF3n de contrase\xF1a",
          remember_created_at: "Fecha de 'Recordarme'",
          remember_me: "Recordarme",
          reset_password_sent_at: "Fecha de env\xEDo de c\xF3digo para contrase\xF1a",
          reset_password_token: "C\xF3digo para restablecer contrase\xF1a",
          role: "Papel",
          sign_in_count: "Cantidad de ingresos",
          unconfirmed_email: "Email no confirmado",
          unlock_token: "C\xF3digo de desbloqueo",
          updated_at: "Actualizado en"
        }
      },
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      },
      models: {
        user: {
          one: "Usuario",
          other: "Usuarios"
        }
      }
    },
    call: {
      new: {
        call_now: "Llame a %{name} ahora:",
        result: {
          did_not_reach_patient: "No habl\xE9 con el paciente",
          left_voicemail: "Dej\xE9 un correo de voz para el paciente.",
          reached_patient: "Habl\xE9 con el paciente"
        },
        voicemail_instructions: {
          no_voicemail: "No deje un mensaje de voz a este paciente",
          voicemail_identify: "Si se puede dejar mensaje de voz; Y tambien, identificarse como %{fund}",
          voicemail_no_identify: "Si se puede dejar mensaje de voz; Pero no identificarse como %{fund}"
        }
      },
      other_contact: {
        number: "%{name}'s numero:",
        other_contact: "%{name} %{rel} es el contacto principal para este paciente%{punc}",
        primary: "Contacto primario:"
      },
      status: {
        couldnt_reach_patient: "No habl\xE9 con el paciente",
        left_voicemail: "Dej\xE9 un mensaje de voz",
        reached_patient: "Paciente alcanzado"
      }
    },
    clinic_locator: {
      description: "Filtre las cl\xEDnicas de acuerdo con la aceptaci\xF3n de NAF / NNAF y sus l\xEDmites de gestaci\xF3n; ordenar por proximidad a un c\xF3digo postal.",
      experimental_note: "Esta es una caracter\xEDstica experimental.",
      gestation_above: "Gestaci\xF3n arriba",
      medicaid_only_toggle: "Mostrar solo cl\xEDnicas de Medicaid",
      naf_only_toggle: "Mostrar solo cl\xEDnicas de NAF",
      patient_zip_code: "C\xF3digo postal del paciente",
      result: {
        affordable_title: "Las cl\xEDnicas m\xE1s econ\xF3micas",
        distance: "%{miles} millas",
        goes_to: "%{weeks} semanas %{days} d\xEDas",
        location: "%{city}, %{state}",
        nearest_title: "Cl\xEDnicas mas cercanas",
        not_specified: "No especificado"
      },
      search_button: "Buscar clinicas",
      title: "Asistente de localizador de cl\xEDnicas"
    },
    clinics: {
      edit: {
        title: "Editar detalles de la cl\xEDnica"
      },
      form: {
        active_help: "\xBFEstamos trabajando activamente con esta cl\xEDnica?",
        add_clinic: "A\xF1adir clinica",
        costs_weeks: "Costos en %{week} semanas",
        email_help: "Email(s) que esta cl\xEDnica usa para recibir promesas. Si prefiere fax, deje este campo en blanco.",
        save_changes: "Guardar cambios",
        zip_help: "Para excluir esta cl\xEDnica de las b\xFAsquedas de Clinic Finder, dale el c\xF3digo postal 99999."
      },
      index: {
        title: "Cl\xEDnicas"
      },
      new: {
        title: "A\xF1adir una nueva cl\xEDnica"
      }
    },
    common: {
      add: "A\xF1adir",
      appointment_date_short: "D\xEDa de la cita",
      back: "Atr\xE1s",
      clinic: "Cl\xEDnica",
      close: "Cierre",
      days_along: "D\xEDas de embarazo al inicio",
      detail: "Detalle",
      email: "Email",
      for: "por",
      from: "de",
      medicaid: "Medicaid",
      naf: "NAF",
      name: "Nombre",
      no: "No",
      notes: "Notas",
      on_: "en",
      patient: "Patiente",
      phone: "Tel\xE9fono",
      prefer_not_to_answer: "Prefiere no contestar",
      purchased_on: "Comprado en",
      save: "Guardar",
      search: "Buscar",
      status: "Estatus",
      update: "Actualizar",
      weeks_along_short: "Semanas a lo largo",
      weeks_days: "%{weeks} semanas, %{days} d\xEDas",
      weeks_days_short: "%{weeks}s %{days}d",
      yes: "S\xED"
    },
    configs: {
      config: {
        current_options: "Las opciones actuales son:",
        update_options_for: "Opciones para la promesa externa %{option}, (por favor separe con comas)"
      },
      index: {
        sub_text: "Use esto para configurar el seguro medico, el idioma, las opciones de promesa externa y los l\xEDmites de promesa",
        title: "Configuraciones"
      }
    },
    dashboard: {
      activity_log: {
        label: "Actividad de l\xEDnea de llamadas %{current_line}"
      },
      budget_bar: {
        pledged: "prometido",
        pledged_item: "%{amount} prometido",
        pledged_report: "%{amount} prometido (%{count} pacientes)",
        pop_content_appt_date: "cita en %{date}",
        pop_content_no_appt_date: "sin cita",
        remaining: "sobrante",
        sent: "enviado",
        sent_item: "%{amount} enviado",
        spent: "gastado"
      },
      helpers: {
        voicemail_options: {
          no: "No dejen mensajes de voz",
          not_specified: "Sin instrucciones; no ID VM",
          yes: "Si se permiten mensajes de voz, ID OK"
        }
      },
      overview: {
        budget_for: "Presupuesto para %{date_range}"
      },
      partial_titles: {
        call_list: "Tu lista de llamadas",
        completed_calls: "Tus llamadas completadas",
        search_results: "Resultados de la b\xFAsqueda",
        shared_cases: "Casos compartidos",
        unconfirmed_support: "Apoyo no confirmado"
      },
      search: {
        header: "Construye tu lista de llamadas",
        input_placeholder: "Nombre (Susan Smith) o tel\xE9fono (555-555-5555)",
        no_results: "Your search produced no results"
      },
      table_content: {
        clear_call_list: "Borrar su lista de llamadas",
        clear_call_list_confirm: "\xBFEst\xE1 seguro/a de que desea borrar su lista de llamadas actual? Esto tambi\xE9n borrar\xE1 las llamadas completadas.",
        remove_from_call_list_confirm: "\xBFEst\xE1 seguro/a de que deseas eliminar a %{name} de tu lista de llamadas?"
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        medium: "%d de %b de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de 1 hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de 1 mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de 1 a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi 1 a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de 1 minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de 1 segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de 1 a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "1 d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "1 minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "1 mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "1 segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "1 a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundos",
        year: "A\xF1o"
      }
    },
    devise: {
      confirmations: {
        confirmed: "Tu cuenta ha sido confirmada satisfactoriamente.",
        new: {
          resend_confirmation_instructions: "Reenviar instrucciones de confirmaci\xF3n"
        },
        send_instructions: "Vas a recibir un correo con instrucciones sobre c\xF3mo confirmar tu cuenta en unos minutos.",
        send_paranoid_instructions: "Si tu correo existe en nuestra base de datos, en unos minutos recibir\xE1s un correo con instrucciones sobre c\xF3mo confirmar tu cuenta."
      },
      failure: {
        already_authenticated: "Ya has iniciado sesi\xF3n.",
        expired: "Su cuenta ha expirado debido a inactividad. Por favor contacte al administrador de la aplicaci\xF3n.",
        inactive: "Tu cuenta a\xFAn no ha sido activada.",
        invalid: "%{authentication_keys} o contrase\xF1a inv\xE1lidos.",
        last_attempt: "Tienes un intento m\xE1s antes de que tu cuenta sea bloqueada.",
        locked: "Tu cuenta est\xE1 bloqueada.",
        not_found_in_database: "%{authentication_keys} o contrase\xF1a inv\xE1lidos.",
        session_limited: "Sus credenciales de inicio de sesi\xF3n fueron usadas en otro navegador. Por favor inicie sesi\xF3n nuevamente para continuar en este navegador.",
        timeout: "Tu sesi\xF3n expir\xF3. Por favor, inicia sesi\xF3n nuevamente para continuar.",
        unauthenticated: "",
        unconfirmed: "Tienes que confirmar tu cuenta para poder continuar."
      },
      invalid_captcha: "El captcha ingresado es inv\xE1lido.",
      invalid_security_question: "La respuesta a la pregunta de seguridad fue incorrecta.",
      mailer: {
        confirmation_instructions: {
          action: "Confirmar mi cuenta",
          greeting: "\xA1Bienvenido %{recipient}!",
          instruction: "Usted puede confirmar el correo electr\xF3nico de su cuenta a trav\xE9s de este enlace:",
          subject: "Instrucciones de confirmaci\xF3n"
        },
        email_changed: {
          greeting: "\xA1Hola %{recipient}! ",
          message: "Estamos contactando contigo para notificarte que tu email ha sido cambiado a %{email}.",
          subject: "Email cambiado"
        },
        password_change: {
          greeting: "Hola %{recipient}!",
          message: "Le estamos contactando para notificarle que su contrase\xF1a ha sido cambiada.",
          subject: "Contrase\xF1a cambiada"
        },
        reset_password_instructions: {
          action: "Cambiar mi contrase\xF1a",
          greeting: "\xA1Hola %{recipient}!",
          instruction: "Alguien ha solicitado un enlace para cambiar su contrase\xF1a, lo que se puede realizar a trav\xE9s del siguiente enlace.",
          instruction_2: "Si usted no lo ha solicitado, por favor ignore este correo electr\xF3nico.",
          instruction_3: "Su contrase\xF1a no ser\xE1 cambiada hasta que usted acceda al enlace y cree una nueva.",
          subject: "Instrucciones de recuperaci\xF3n de contrase\xF1a"
        },
        unlock_instructions: {
          action: "Desbloquear mi cuenta",
          greeting: "\xA1Hola %{recipient}!",
          instruction: "Haga click en el siguiente enlace para desbloquear su cuenta:",
          message: "Su cuenta ha sido bloqueada debido a una cantidad excesiva de intentos infructuosos para ingresar.",
          subject: "Instrucciones para desbloquear"
        }
      },
      omniauth_callbacks: {
        failure: 'No has sido autorizado en la cuenta %{kind} porque "%{reason}".',
        success: "Iniciar sesi\xF3n con \xE9xito con %{kind}"
      },
      paranoid_verification_code: {
        show: {
          submit: "Entregar",
          submit_verification_code: "Env\xEDe el c\xF3digo de verificaci\xF3n",
          verification_code: "C\xF3digo de verificaci\xF3n"
        },
        updated: "Se acepta el c\xF3digo de verificaci\xF3n"
      },
      paranoid_verify: {
        code_required: "Por favor ingrese el c\xF3digo provisto por nuestro equipo de soporte"
      },
      password: {
        new: {
          send_reset: "Enviame las instrucciones para restablecer mi contrase\xF1a",
          title: "Restablecimiento de contrase\xF1a"
        }
      },
      password_expired: {
        change_required: "Su contrase\xF1a ha expirado. Por favor renueve su contrase\xF1a.",
        show: {
          change_my_password: "Cambiar mi contrase\xF1a",
          current_password: "Actual contrase\xF1a",
          new_password: "Nueva contrase\xF1a",
          new_password_confirmation: "Confirmar nueva contrase\xF1a",
          renew_your_password: "Renueve su contrase\xF1a"
        },
        updated: "Su nueva contrase\xF1a ha sido guardada."
      },
      passwords: {
        edit: {
          change_my_password: "Cambiar mi contrase\xF1a",
          change_your_password: "Cambie su contrase\xF1a",
          confirm_new_password: "Confirme la nueva contrase\xF1a",
          new_password: "Nueva contrase\xF1a"
        },
        new: {
          forgot_your_password: "\xBFHa olvidado su contrase\xF1a?",
          send_me_reset_password_instructions: "Env\xEDeme las instrucciones para resetear mi contrase\xF1a"
        },
        no_token: "No puedes acceder a esta p\xE1gina si no es a trav\xE9s de un enlace para resetear tu contrase\xF1a. Si has llegado hasta aqu\xED desde el email para resetear tu contrase\xF1a, por favor aseg\xFArate de que la URL introducida est\xE1 completa.",
        send_instructions: "Recibir\xE1s un correo con instrucciones sobre c\xF3mo resetear tu contrase\xF1a en unos pocos minutos.",
        send_paranoid_instructions: "Si su direcci\xF3n de correo electr\xF3nico existe en nuestra base de datos, recibir\xE1 un correo electr\xF3nico con instrucciones sobre c\xF3mo confirmar su direcci\xF3n de correo electr\xF3nico en unos minutos.",
        updated: "Se ha cambiado tu contrase\xF1a. Ya iniciaste sesi\xF3n.",
        updated_not_active: "Tu contrase\xF1a fue cambiada."
      },
      registrations: {
        destroyed: "\xA1Adi\xF3s! Tu cuenta ha sido cancelada correctamente. Esperamos verte pronto.",
        edit: {
          are_you_sure: "\xBFEst\xE1 usted seguro?",
          cancel_my_account: "Anular mi cuenta",
          currently_waiting_confirmation_for_email: "Actualmente esperando la confirmacion de: %{email} ",
          leave_blank_if_you_don_t_want_to_change_it: "dejar en blanco si no desea cambiarla",
          title: "Editar %{resource}",
          unhappy: "\xBFDisconforme?",
          update: "Actualizar",
          we_need_your_current_password_to_confirm_your_changes: "necesitamos su contrase\xF1a actual para confirmar los cambios"
        },
        new: {
          sign_up: "Registrarse"
        },
        signed_up: "Bienvenido. Tu cuenta fue creada.",
        signed_up_but_inactive: "Tu cuenta ha sido creada correctamente. Sin embargo, no hemos podido iniciar la sesi\xF3n porque tu cuenta a\xFAn no est\xE1 activada.",
        signed_up_but_locked: "Tu cuenta ha sido creada correctamente. Sin embargo, no hemos podido iniciar la sesi\xF3n porque que tu cuenta est\xE1 bloqueada.",
        signed_up_but_unconfirmed: "Se ha enviado un mensaje con un enlace de confirmaci\xF3n a tu correo electr\xF3nico. Abre el enlace para activar tu cuenta.",
        update_needs_confirmation: "Has actualizado tu cuenta correctamente, pero es necesario confirmar tu nuevo correo electr\xF3nico. Por favor, comprueba tu correo y sigue el enlace de confirmaci\xF3n para finalizar la comprobaci\xF3n del nuevo correo electr\xF3nico.",
        updated: "Tu cuenta se ha actualizado.",
        updated_but_not_signed_in: null
      },
      sessions: {
        already_signed_out: "Sesi\xF3n finalizada.",
        failure: {
          user: {
            unauthenticated: ""
          }
        },
        new: {
          google_signin: "Inicia sesi\xF3n con Google (recomendado)",
          lock_email_not_received: "\xBFNo recibi\xF3 instrucciones de desbloqueo?",
          password: "Contrase\xF1a",
          password_forgot: "\xBFOlvidaste tu contrase\xF1a?",
          password_signin: "O, inicie sesi\xF3n con una contrase\xF1a:",
          password_submit: "Inicia sesi\xF3n con contrase\xF1a",
          reset_email_not_received: "\xBFNo recibi\xF3 instrucciones de confirmaci\xF3n?",
          sign_in: "Regresar a registre"
        },
        signed_in: "Sesi\xF3n iniciada.",
        signed_out: "Sesi\xF3n finalizada.",
        user: {
          signed_in: ""
        }
      },
      shared: {
        links: {
          back: "Atr\xE1s",
          didn_t_receive_confirmation_instructions: "\xBFNo ha recibido las instrucciones de confirmaci\xF3n?",
          didn_t_receive_unlock_instructions: "\xBFNo ha recibido instrucciones para desbloquear?",
          forgot_your_password: "\xBFHa olvidado su contrase\xF1a?",
          sign_in: "Iniciar sesi\xF3n",
          sign_in_with_provider: "Iniciar sesi\xF3n con %{provider}",
          sign_up: "Registrarse"
        },
        minimum_password_length: {
          one: "(%{count} caractere como m\xEDnimo)",
          other: "(%{count} caracteres como m\xEDnimo)"
        }
      },
      unlocks: {
        new: {
          resend_unlock_instructions: "Reenviar instrucciones para desbloquear"
        },
        send_instructions: "Vas a recibir instrucciones para desbloquear tu cuenta en unos pocos minutos.",
        send_paranoid_instructions: "Si tu cuenta existe, vas a recibir instrucciones para desbloquear tu cuenta en unos pocos minutos.",
        unlocked: "Tu cuenta ha sido desbloqueada. Ya puedes iniciar sesi\xF3n."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        already_confirmed: "ya ha sido confirmada, por favor intenta iniciar sesi\xF3n",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        confirmation_period_expired: "necesita confirmarse dentro de %{period}, por favor solicita una nueva",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        equal_to_current_password: "tiene que ser diferente a la contrase\xF1a actual.",
        equal_to_email: "tiene que ser diferente al email",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        expired: "ha expirado, por favor solicita una nueva",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        not_found: "no se ha encontrado",
        not_locked: "no estaba bloqueada",
        not_saved: {
          one: "Ocurri\xF3 un error al tratar de guardar %{resource}:",
          other: "Ocurrieron %{count} errores al tratar de guardar %{resource}:"
        },
        odd: "debe ser un n\xFAmero non",
        other_than: "debe ser distinto de %{count}",
        password: {
          password_strength: "Las contrase\xF1as deben ser m\xE1s seguras. Por favor ingresa una contrase\xF1a m\xE1s larga o m\xE1s compleja."
        },
        password_complexity: {
          digit: {
            one: "tiene que contener al menos un d\xEDgito",
            other: "tiene que contener al menos %{count} d\xEDgitos"
          },
          lower: {
            one: "tiene que contener al menos una min\xFAscula",
            other: "tiene que contener al menos %{count} min\xFAsculas"
          },
          symbol: {
            one: "tiene que contener al menos un signo de puntuaci\xF3n",
            other: "tiene que contener al menos %{count} signos de puntuaci\xF3n"
          },
          upper: {
            one: "tiene que contener al menos una may\xFAscula",
            other: "tiene que contener al menos %{count} may\xFAsculas"
          }
        },
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        taken_in_past: "la contrase\xF1a fue usada previamente, por favor elige otra.",
        too_long: {
          one: "es demasiado largo (m\xE1ximo 1 caracter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo 1 caracter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de 1 caracter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a 1 error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    events: {
      add_to_call_list: "A\xF1adir a la lista de llamadas",
      couldnt_reach_patient: "llam\xF3, paciente no contest\xF3",
      left_voicemail: "dej\xF3 un mensaje de voz",
      pledged: "envi\xF3 una promesa de $%{pledge_amount}",
      reached_patient: "habl\xF3 con el paciente",
      unknown_action: "habl\xF3 o interactu\xF3 con"
    },
    external_pledge: {
      edit: {
        fund_pledge: "%{source} promesa"
      },
      new: {
        amount: "Cantidad",
        create_button: "Crear promesa externo",
        source: "Origen",
        title: "O, grabe un nueva promesa externa:"
      },
      sources: {
        clinic_discount: "Descuento de clinica",
        other_funds: "Otros fondos (ver notas)"
      }
    },
    flash: {
      account_locked: "Cuenta bloqueada, consulte con su fondo.",
      action_on_account: "Cuenta de %{name} %{verb}",
      cant_lock_own_account: "No puedes bloquear tu propia cuenta. Pregunte a otro administrador.",
      clinic_created: "%{clinic} creado!",
      clinic_details_updated: "Detalles de la cl\xEDnica fueron exitosamente actualizados",
      config_failed_update: "Config no pudo actualizar - %{error}",
      config_update_success: "Configuraci\xF3n actualizada correctamente",
      demote_own_account_warn: "Por razones de seguridad, no se le permite cambiar su funci\xF3n de administrador a no administrador. P\xEDdale a otro administrador que lo degraden.",
      error_saving_clinic: "Alg\xFAnos errores evitaron que esta cl\xEDnica se guardara - %{error}",
      error_saving_clinic_details: "Error al guardar los detalles de la cl\xEDnica - %{error}",
      fetch_pledge_error: "Los errores impidieron que se generara este compromiso. Verifique que haya completado todas las entradas del formulario y comun\xEDquese con el equipo de DARIA si el problema persiste.",
      locked: "Bloqueada",
      new_patient_error: "Alg\xFAnos errores impidieron guardar a este paciente - %{error}",
      new_patient_save: "Un nuevo paciente ha sido guardado con \xE9xito",
      patient_info_saved: "Informaci\xF3n del paciente guardada con \xE9xito en %{timestamp}",
      patient_removed_database: "Paciente eliminado exitosamente de la base de datos.",
      patient_removed_database_error: "No se puede eliminar a los pacientes con promesas; Por favor, corrija el registro del paciente y vuelva a intentarlo.",
      patient_save_error: "Los errores impidieron salvar a este paciente - %{error}",
      patient_save_success: "%{patient} ha sido salvado con \xE9xito! Agregue notas y promesas externos, confirme al promesa dura y los montos de la promesa del %{fund} son las mismas, y est\xE1 listo.",
      pledge_download_alert: "Debe ingresar su nombre en el cuadro para firmar y descargar la promesa",
      unlocked: "Desbloqueado",
      user_created: "\xA1Usuario creado!",
      user_update_error: "Error al guardar los detalles del usuario - %{error}",
      user_update_success: "Detalles de usuario actualizados exitosamente"
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C1: "A",
          \u00C9: "E",
          \u00CD: "I",
          \u00D1: "N",
          \u00D3: "O",
          \u00DA: "U",
          \u00DC: "U",
          \u00E1: "a",
          \u00E9: "e",
          \u00ED: "i",
          \u00F1: "n",
          \u00F3: "o",
          \u00FA: "u",
          \u00FC: "u"
        }
      }
    },
    lines: {
      new: {
        start: "Empezar",
        welcome_to_daria: "\xA1Bienvenido a DARIA (edici\xF3n de %{fund})!",
        what_line: "\xBFEn cu\xE1l l\xEDnea est\xE1s trabajando?"
      }
    },
    multi_factor: {
      authenticate: "Autenticar",
      authentication_error: "Error de autenticaci\xF3n",
      checking_sms_code_failed: "Hubo un problema al verificar su c\xF3digo de verificaci\xF3n - %{error}",
      code_invalid: "c\xF3digo inv\xE1lido",
      confirmation: {
        heading: "Nuevo factor de autenticaci\xF3n de SMS registrado: %{name}",
        message: "\xA1Nuevo factor de autenticaci\xF3n registrado con \xE9xito!"
      },
      factor_list: {
        add_button: "Agregue nuevo factor de autenticaci\xF3n",
        channel: "Canal",
        delete_button: "Borrar",
        disabled: "Desactivado",
        enable_button: "Habilitar la Autenticaci\xF3n Multifactor",
        enabled: "Activado",
        heading: "Autenticaci\xF3n Multifactor",
        name: "Nombre",
        status: "Estatus"
      },
      factor_select: {
        heading: "Elija el factor de autenticaci\xF3n"
      },
      login_successful: "\xA1Inicio de sesi\xF3n con MFA correcto!",
      next: "siguente",
      registration: {
        heading: "Registrar factor de autenticaci\xF3n de SMS",
        message: "Ingrese el nombre de este factor de autenticaci\xF3n y el numero de tel\xE9fono para registarse.",
        name_label: "Apodo",
        phone_label: "Tel\xE9fono",
        phone_placeholder: "e.g. 'mi celular'"
      },
      sending_sms_code_failed: "Hubo un problema al enviar el codigo de verificaci\xF3n - %{error}",
      verification: {
        code_label: "Codigo de Verificaci\xF3n",
        heading: "Verifique su factor de autenticaci\xF3n de SMS: %{name}",
        message: "Deber\xEDa recibir un c\xF3digo de verificaci\xF3n al n\xFAmero de tel\xE9fono ingresado en el paso anterior. Introduzca el c\xF3digo aqu\xED para completar la inscripci\xF3n."
      }
    },
    navigation: {
      admin_tools: {
        accounting: "Contabilidad",
        clinic_management: "Manejo de Cl\xEDnica",
        config_management: "Manejo de Configuraci\xF3n",
        export: "Exportaci\xF3n an\xF3nima de CSV",
        label: "Administraci\xF3n",
        user_management: "Manejo de Usuarios"
      },
      cm_resources: {
        label: "Recursos del Administrador de Casos"
      },
      current_line: {
        helper: "Tu linea actual"
      },
      footer: {
        national_abortion_federation: "Federaci\xF3n Nacional de Abortos",
        please_send_feedback: "Por favor env\xEDe sus comentarios o ideas al equipo de programaci\xF3n en"
      },
      user_tools: {
        profile: "Mi Perfil",
        sign_out: "Desconectar"
      }
    },
    note: {
      most_recent: "La nota m\xE1s reciente de %{by} en %{at}:"
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    patient: {
      abortion_information: {
        clinic_section: {
          clinic: "Cl\xEDnica",
          clinic_display: "%{clinic_name} (%{city}, %{state})",
          inactive_clinics: "Clin\xEDcas inactivas",
          medicaid_only_toggle: "Ense\xF1ar solo las cl\xEDnicas de Medicaid",
          multi_day: "m\xFAltiples d\xEDas",
          naf_only_toggle: "Ense\xF1ar solo cl\xEDnicas de la NAF",
          not_currently_working_with_fund: "(Actualmente no trabaja con %{fund}) - %{clinic_name}",
          procedure_type: "Tipo de procedimiento",
          referred_to_clinic: "Referido a la cl\xEDnica",
          resolved_without_fund: "Resuelto sin ayuda de %{fund}",
          solidarity: "Promesa solidaria",
          solidarity_lead: "Plomo de solidaridad",
          title: "Detalles de la cl\xEDnica",
          ultrasound_completed: "\xBFUltrasonido completado?"
        },
        cost_section: {
          abortion_cost: "Costo del aborto",
          fund_pledge: "Promesa de %{fund}",
          naf_pledge: "Promesa de la Federaci\xF3n Nacional de Aborto",
          outstanding_balance: "Cantidad pendiente",
          patient_contribution: "Contribuci\xF3n del paciente",
          title: "Detalles del costo",
          ultrasound_cost: "Costo del ultrasonido"
        },
        title: "Informaci\xF3n de aborto"
      },
      call_log: {
        delete_confirm: "\xBFEst\xE1 seguro de que desea eliminar esta llamada del registro de llamadas?",
        record_new_call: "Grabar nueva llamada",
        table: {
          actions: "ACCIONES",
          case_manager: "CM",
          date: "FECHA",
          remove_button: "Retirar",
          result: "RESULTADO",
          time: "HORA"
        },
        title: "Registro de Llamadas"
      },
      change_log: {
        objects: {
          external_pledge: "Promesa Externo",
          fulfillment: "Cumplimiento",
          patient: "Paciente",
          practical_support: "Apoyo Practico"
        },
        table: {
          case_manager: "CM",
          change: "Cambiar (de -> a)",
          modified_date: "Fecha modificada"
        },
        title: "Historia del paciente"
      },
      dashboard: {
        approx_gestation: "Aprox la gestaci\xF3n en la cita: %{weeks} semanas %{days} d\xEDas",
        called_on: "Llamado en: %{date}",
        confirm_del: "\xBFEst\xE1s seguro de que quieres eliminar %{name}? Solo haga esto si est\xE1 seguro de que este es un paciente duplicado para el mismo embarazo. (En serio, no hay devoluciones!)",
        currently: "Actualmente: %{weeks}s %{days}d",
        delete: "Eliminar registro de paciente duplicado",
        delete_label: "Admin: Eliminar",
        phone: "N\xFAmero de tel\xE9fono",
        weeks_along: "Semanas de embarazo al inicio"
      },
      data_entry: {
        patient_entry: "Entrada de paciente"
      },
      helper: {
        day: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        employment: {
          full_time: "Tiempo completo",
          odd_jobs: "Trabajos ocasionales",
          part_time: "Medio tiempo",
          student: "Estudiante",
          unemployed: "Desempleada"
        },
        income: {
          "10_to_15": "$10,000-14,999 ($192-287/sm - $834-1250/mes)",
          "15_to_20": "$15,000-19,999 ($288-384/sm - $1251-1666/mes)",
          "20_to_25": "$20,000-24,999 ($385-480/sm - $1667-2083/mes)",
          "25_to_30": "$25,000-29,999 ($481-576/sm - $2084-2499/mes)",
          "30_to_35": "$30,000-34,999 ($577-672/sm - $2500-2916/mes)",
          "35_to_40": "$35,000-39,999 ($673-768/sm - $2917-3333/mes)",
          "40_to_45": "$40,000-44,999 ($769-864/sm - $3334-3749/mes)",
          "45_to_50": "$45,000-49,999 ($865-961/sm - $3750-4165/mes)",
          "50_to_60": "$50,000-59,999 ($962-1153/sm - $4166-4999/mes)",
          "60_to_75": "$60,000-74,999 ($1154-1441/sm - $5000-6249/mes)",
          "75_plus": "$75,000 o m\xE1s ($1442+ /sm - $6250+ /mes)",
          under_10: "Debajo $9,999 ($192/sm - $833/mes)"
        },
        insurance: {
          none: "Sin Seguro",
          other: "Otro (A\xF1adir a las notas)",
          unknown: "No Se"
        },
        language: {
          English: "Ingl\xE9s"
        },
        practical_support: {
          companion: "Acompa\xF1ante",
          lodging: "Hospedaje",
          not_sure_yet: "No estamos seguro (ver notas)",
          other: "Otro (ver notas)",
          travel_inside_region: "Viajar dentro de la regi\xF3n",
          travel_to_region: "Viajar a la regi\xF3n"
        },
        race: {
          asian_south_asian: "Asi\xE1tica o Sur de Asia",
          black_african_american: "Negra/Afroamericana",
          hispanic_latino: "Hispana/Latina",
          mixed_race_ethnicity: "Raza Mixta/Etnicidad",
          native_american: "Nativa Americana",
          native_hawaiian_pacific_islander: "Hawaiana Nativa o Isle\xF1a Pac\xEDfica",
          other: "Otra",
          white_caucasian: "Blanca/Cauc\xE1sica"
        },
        referred_by: {
          clinic: "Cl\xEDnica",
          crime_victim_advocacy_center: "Centro de defensa de v\xEDctimas del crimen",
          domestic_violence_org: "Violencia dom\xE9stica crisis / intervenci\xF3n org",
          family: "Miembro de la familia",
          friend: "Amigo",
          fund: "%{fund} sitio de internet o redes sociales",
          homeless: "Refugio para indigentes",
          legal_clinic: "Cl\xEDnica legal",
          naf: "NAF",
          nnaf: "NNAF",
          other_fund: "Otro fondo de aborto",
          prev_patient: "Paciente anterior",
          school: "Escuela",
          sexual_assault_crisis_org: "Agresi\xF3n de asalto sexual org",
          title: "Referido por",
          web_search: "B\xFAsqueda de Google/internet",
          youth: "Alcance juvenil"
        },
        week: {
          one: "%{count} semana",
          other: "%{count} semanas"
        }
      },
      information: {
        household_help: "(incluyendo paciente)",
        identifier: "Identificador",
        income_help: "Empleo, Cupones de Alimentos, SS, TANF, etc.",
        insurance: "Seguro m\xE9dico del patiente",
        language: "Idioma preferido",
        other_contact: {
          name: "Nombre de Otro Contacto",
          phone: "Otro tel\xE9fono",
          relationship: "Relaci\xF3n con Otro Contacto",
          title: "Otro Contacto"
        },
        referred_by: "C\xF3mo escuch\xF3 el paciente sobre %{fund}",
        special_circumstances: {
          domestic_violence: "Violencia dom\xE9stica",
          fetal_diagnosis: "Diagnostico fetal",
          homelessness: "La falta de vivienda",
          incest: "Incesto",
          medicaid_eligible: "Elegible para medicaid",
          other_medical_issue: "Otro problema m\xE9dico",
          prison: "Prisi\xF3n",
          rape: "Violaci\xF3n",
          title: "Circunstancias Especiales"
        },
        textable: "Se permite enviar mensajes de texto?",
        title: "Informaci\xF3n del Paciente",
        voicemail_preference: "Preferencias de Mensaje de Voz"
      },
      menu: {
        abortion_information: "Informaci\xF3n de Aborto",
        call_log: "Registro de Llamadas",
        cancel_pledge: "Cancelar Promesa",
        change_log: "Registro de Cambios",
        notes: "Notas",
        patient_information: "Informaci\xF3n del Paciente",
        pledge_fulfillment: "Cumplimiento de la Promesa",
        practical_support: "Apoyo Practico",
        submit_pledge: "Crear Promesa"
      },
      new: {
        add_button: "A\xF1adir nuevo paciente",
        initial_call_date: "Fecha de llamada inicial",
        title: "Su b\xFAsqueda no produjo resultados, as\xED que agregue un nuevo paciente:"
      },
      notes: {
        placeholder: "Ingresa notas aqu\xED",
        shared_flag: "Compartir a este paciente",
        submit: "Crear Nota",
        title: "Notas"
      },
      pledge: {
        cancel: {
          confirm: "\xBFSeguro/a que quieres cancelar esta promesa?",
          title: "Cancelar promesa"
        },
        errors: {
          blank_appt: "La fecha de la cita no puede estar en blanco",
          blank_clinic: "El nombre de la cl\xEDnica no puede estar en blanco",
          blank_fund: "El campo de promesa %{fund} no puede estar en blanco",
          blank_patient: "El nombre del paciente no puede estar en blanco",
          data_required: "Informaci\xF3n requerida:"
        },
        step_one: {
          clinic_name: "Nombre de la cl\xEDnica:",
          patient_id: "ID del paciente:",
          patient_name: "Nombre del paciente:",
          pledge_amount: "Cantidad de la promesa:",
          title: "Confirme que la siguiente informaci\xF3n es correcta:"
        },
        step_three: {
          clinic_fax: "Fax de la cl\xEDnica",
          completed: "Una vez que haya completado el proceso de envio, indique aqu\xED que se ha enviado la promesa.",
          downloads: "Su documento de promesa aparecer\xE1 en las descargas de su computadora.",
          fax_service: "Servicio de fax",
          generated: "Impresionante, \xA1generaste una promesa de %{fund}! \xA1Gracias!",
          sent_checkbox: "Yo envi\xE9 la promesa",
          submit: "Env\xEDe la promesa para su cliente aqu\xED:",
          title: "Descarga y env\xEDe su promesa:"
        },
        step_two: {
          blank_name_error: "Debe ingresar su nombre en el cuadro para firmar y descargar la promesa",
          form_disabled: "Por favor genere el documento de promesa y haga clic en siguiente.",
          generate_note: "Tenga en cuenta que esto NO env\xEDa su promesa a la cl\xEDnica! Haga clic en la p\xE1gina siguiente despu\xE9s de generar el documento para indicar que ha enviado la promesa a la cl\xEDnica.",
          generate_pledge_button: "Genera la promesa",
          sign_pledge: "Ingrese su nombre en este cuadro para firmar su promesa:",
          title: "Genere el documento de promesa:"
        }
      },
      pledge_fulfillment: {
        audit: {
          archive_note: "El paciente ser\xE1 archivado el %{date}",
          audited_box: "\xBFAuditor\xEDa de cumplimiento?",
          title: "Auditor\xEDa"
        },
        confirmation: {
          clinic: "Cl\xEDnica:",
          confirm_info: "Por favor, confirme que la cl\xEDnica y la cantidad de la promesa son correctos:",
          fund_pledge_amount: "Cantidad de promesa de %{fund}:",
          pledge_generated_at: "Promesa generada en:",
          pledge_generated_by: "Promesa generada por:",
          pledge_sent_at: "Promesa enviada en:",
          pledge_sent_by: "Promesa enviada por:"
        },
        form: {
          check_num: "Cheque #",
          date_of_check: "Fecha del cheque",
          fund_payout: "Pago de %{fund}",
          pledge_fulfilled_box: "Promesa cumplida",
          procedure_cost: "Costo del procedimiento",
          procedure_date: "Fecha de procedimiento",
          weeks_along_at_procedure: "Semanas a lo largo del procedimiento"
        },
        title: "Cumplimiento de la promesa"
      },
      practical_support: {
        create: "Crear una nueva entrada de soporte pr\xE1ctico",
        delete: "Elimina",
        delete_confirm: "\xBFEst\xE1 seguro de que desea eliminar esta entrada de soporte pr\xE1ctico?",
        guidance_link: "Orientac\xEDon de soporte pr\xE1ctico de %{fund}",
        new: "Grabar nueva informaci\xF3n de soporte pr\xE1ctico:",
        practical_support_waiver: "Aa firmado una renuncia de soporte pr\xE1ctico",
        title: "Apoyo practico"
      },
      shared: {
        appt_date: "D\xEDa de la cita",
        name: "Nombre y apellido",
        status: "Estatus"
      },
      status: {
        help: {
          dropoff: "Paciente no ha sido escuchado en 120+ d\xEDas.",
          fulfilled: "El paciente ha sido marcado cumplido.",
          fundraising: "El paciente tiene una cita y est\xE1 trabajando para recaudar fondos.",
          needs_appt: "El paciente ha hablado con el fondo, pero a\xFAn no ha establecido una cita con una cl\xEDnica.",
          no_contact: "Un paciente ha iniciado el contacto, pero nadie del fondo ha hablado con ellos todav\xEDa.",
          pledge_paid: "El contador ha pagado la cl\xEDnica para la promesa.",
          pledge_sent: "Un administrador de casos ha enviado una promesa a la cl\xEDnica en nombre del paciente.",
          pledge_unfulfilled: "El paciente ten\xEDa una promesa enviada hace 150+ d\xEDas, pero no la ha cobrado.",
          resolved: "El paciente ha decidido no involucrar al fondo en sus planes."
        },
        key: {
          dropoff: "Probable Abandono",
          fulfilled: "Promesa Cumplida",
          fundraising: "Recaudaci\xF3n de fondos",
          needs_appt: "Necesita Cita",
          no_contact: "Sin Contacto Hecho",
          pledge_paid: "Pledge Pagada",
          pledge_sent: "Promesa Enviada",
          pledge_unfulfilled: "Promesa No Cumplida",
          resolved: "Resuelto Sin %{fund}"
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    },
    tooltips: {
      budget_bar: 'La barra de presupuesto indica el dinero provisionalmente reservado para un paciente (cuando ingresa la cantidad de promesa %{fund}) y el dinero enviado a una cl\xEDnica para un paciente (cuando marca la casilla de verificaci\xF3n "envi\xE9 la promesa") durante un per\xEDodo determinado.',
      call_list: "Esta lista organiza los pacientes para cuando quiera devolver llamadas durante su turno. Utiliza la b\xFAsqueda para rellenar la lista.",
      completed_calls: "Esta es una lista de pacientes a los que ha llamado en las \xFAltimas 8 horas.",
      mandatory_ultrasound: "Si se encuentra en un estado que requiere ultrasonidos y el paciente ha completado uno, puede indicarlo aqu\xED.",
      patient_identifier: "Identificador interno semi\xFAnico para este paciente, basado en su n\xFAmero de tel\xE9fono.",
      practical_support_confirmed: "Marque esta casilla si este apoyo pr\xE1ctico es confirmado por el punto de contacto.",
      practical_support_fulfilled: "Marque esta casilla si este soporte pr\xE1ctico est\xE1 completo o pagado y no requiere mayor atenci\xF3n.",
      record_new_external_pledge: '"Promesas externas" significa las promesas hechas por otros fondos de aborto tambi\xE9n trabajando con un paciente.',
      referred_to_clinic: "Marque esta casilla si usted, como administrador de casos, refiri\xF3 al paciente a un cl\xEDnica particular.",
      resolved_without_fund: "Esto se utiliza para indicar que un paciente ya no necesita o quiere nuestros servicios.",
      shared_cases: 'Estos son pacientes que requieren un poco m\xE1s de atenci\xF3n. Esta lista es compartido entre todos los administradores de casos que trabajan en una sola l\xEDnea. Los pacientes son eliminados de esta lista autom\xE1ticamente despu\xE9s de que est\xE9n marcado como "resuelto sin ayuda", o despu\xE9s de %{shared_reset_days} d\xEDas de inactividad.',
      solidarity: "Indica un caso al que este fondo est\xE1 brindando apoyo, pero no manejando.",
      solidarity_lead: "Este es el fondo que sirve como punto de contacto o coordinaci\xF3n de fondos para este paciente.",
      status_definition: "Definici\xF3n de estado",
      unconfirmed_support: "Estos son pacientes que tienen apoyos pr\xE1cticos no confirmados."
    },
    user: {
      common: {
        last_login: "\xDAltimo Acceso",
        role: "Papel"
      },
      edit: {
        admin_actions: "Acciones de Administrador",
        lock_an_account: "Bloquear una Cuenta",
        update_details: "Actualizar detalles",
        update_users_role_permissions: "Actualizar la funci\xF3n y los permisos de este usuario"
      },
      index: {
        add_new_user: "A\xF1adir Nuevo Usuario",
        user_account_management: "Administraci\xF3n de Cuentas de Usuario"
      },
      new: {
        create_user: "Crear Usuario",
        edit_role_after_creating: "Los nuevos usuarios por defecto tienen permisos CM, lo que les permite usar el flujo de trabajo de administraci\xF3n de casos. Para dar a alguien acceso a datos o permisos de administrador, ed\xEDtelos despu\xE9s de crear sus cuentas aqu\xED."
      },
      profile_edit: {
        awaiting_confirmation: "Actualmente en espera de confirmaci\xF3n para: %{email}",
        change_password: "Cambia tu contrase\xF1a",
        current_password: "Ingrese su contrase\xF1a actual para confirmar cualquier cambio",
        new_password: "Contrase\xF1a nueva",
        update_info_button: "Actualizar informaci\xF3n",
        user_panel: "Panel de usuario para %{email} (%{name})"
      },
      roles: {
        admin: "El rol de administrador es para las personas que administran la instancia DARIA de su fondo o el cuerpo de administrador de casos. Esto da acceso a lo que tienen los CM y los voluntarios de datos, adem\xE1s de lo siguiente: herramientas de administraci\xF3n de usuarios, herramientas de administraci\xF3n de cl\xEDnicas, herramientas de configuraci\xF3n de instancias DARIA y la capacidad de eliminar pacientes de la p\xE1gina de registro de pacientes individuales (como en el caso de una entrada duplicada).",
        cm: "El rol de administrador de casos es para las personas que ingresan pacientes y hacen llamadas. Esto le da acceso al panel principal de la lista de llamadas, la p\xE1gina de registro individual del paciente (menos la capacidad de editar la informaci\xF3n de cumplimiento) y la p\xE1gina de entrada de datos.",
        data_volunteer: "El rol del voluntario de datos es para las personas que requieren acceso a datos o herramientas de contabilidad. Esto da acceso a lo que tienen los CM, adem\xE1s de lo siguiente: herramientas de contabilidad para la conciliaci\xF3n de compromisos, herramientas de informes con datos resumidos sobre la admisi\xF3n del paciente, la pesta\xF1a de cumplimiento en la p\xE1gina de registro individual del paciente (para marcar compromisos como pagados) y la capacidad de descargar Una hoja de c\xE1lculo an\xF3nima de datos para el an\xE1lisis."
      },
      search: {
        button: "Buscar",
        text_field: "Nombre o Correo Electr\xF3nico"
      },
      user_table: {
        date_created: "Fecha de Creacion",
        full_name: "Nombre Completo"
      }
    }
  };
  var es_419 = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un(a) %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero non",
        other_than: "debe ser diferente de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\xA4"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_AR = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_CL = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "alrededor de %{count} hora",
          other: "alrededor de %{count} horas"
        },
        about_x_months: {
          one: "alrededor de %{count} mes",
          other: "alrededor de %{count} meses"
        },
        about_x_years: {
          one: "alrededor de %{count} a\xF1o",
          other: "alrededor de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor que o igual a %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "no es v\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor que o igual a %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya est\xE1 en uso",
        too_long: {
          one: "es demasiado largo (%{count} car\xE1cter m\xE1ximo)",
          other: "es demasiado largo (%{count} caracteres m\xE1ximo)"
        },
        too_short: {
          one: "es demasiado corto (%{count} car\xE1cter m\xEDnimo)",
          other: "es demasiado corto (%{count} caracteres m\xEDnimo)"
        },
        wrong_length: {
          one: "no tiene la longitud correcta (%{count} car\xE1cter exacto)",
          other: "no tiene la longitud correcta (%{count} caracteres exactos)"
        }
      },
      template: {
        body: "Se encontraron problemas con los siguientes campos:",
        header: {
          one: "No se pudo guardar este/a %{model} porque se encontr\xF3 %{count} error",
          other: "No se pudo guardar este/a %{model} porque se encontraron %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 0,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %d de %B de %Y %H:%M:%S %z",
        long: "%A %d de %B de %Y %H:%M",
        short: "%d de %b %H:%M"
      },
      pm: "pm"
    }
  };
  var es_CO = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 0,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_CR = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido utilizado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 0,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\xA2"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_EC = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un(a) %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%-d/%m/%Y",
        long: "%A, %-d de %B de %Y",
        short: "%-d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor que o igual a %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "no es v\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor que o igual a %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser diferente de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya est\xE1 en uso",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "no tiene la longitud correcta (debe ser de %{count} car\xE1cter)",
          other: "no tiene la longitud correcta (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "No se pudo guardar este/a %{model} porque se encontr\xF3 %{count} error",
          other: "No se pudo guardar este/a %{model} porque se encontraron %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %-d de %B de %Y a las %-I:%M:%S %p %Z",
        long: "%-d de %B de %Y a las %-I:%M %p",
        short: "%-d %b %-I:%M %p"
      },
      pm: "pm"
    }
  };
  var es_ES = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "alrededor de %{count} hora",
          other: "alrededor de %{count} horas"
        },
        about_x_months: {
          one: "alrededor de %{count} mes",
          other: "alrededor de %{count} meses"
        },
        about_x_years: {
          one: "alrededor de %{count} a\xF1o",
          other: "alrededor de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor que o igual a %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "no es v\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor que o igual a %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya est\xE1 en uso",
        too_long: {
          one: "es demasiado largo (%{count} car\xE1cter m\xE1ximo)",
          other: "es demasiado largo (%{count} caracteres m\xE1ximo)"
        },
        too_short: {
          one: "es demasiado corto (%{count} car\xE1cter m\xEDnimo)",
          other: "es demasiado corto (%{count} caracteres m\xEDnimo)"
        },
        wrong_length: {
          one: "no tiene la longitud correcta (%{count} car\xE1cter exactos)",
          other: "no tiene la longitud correcta (%{count} caracteres exactos)"
        }
      },
      template: {
        body: "Se encontraron problemas con los siguientes campos:",
        header: {
          one: "No se pudo guardar este/a %{model} porque se encontr\xF3 %{count} error",
          other: "No se pudo guardar este/a %{model} porque se encontraron %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %d de %B de %Y %H:%M:%S %z",
        long: "%d de %B de %Y %H:%M",
        short: "%d de %b %H:%M"
      },
      pm: "pm"
    }
  };
  var es_MX = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "El registro no puede ser eliminado pues existen %{record} dependientes",
            has_one: "El registro no puede ser eliminado pues existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero non",
        other_than: "debe ser diferente a %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_NI = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido utilizado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 0,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "C$"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_PA = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un(a) %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%-d/%-m/%Y",
        long: "%A, %-d de %B de %Y",
        short: "%-d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "alrededor de %{count} hora",
          other: "alrededor de %{count} horas"
        },
        about_x_months: {
          one: "alrededor de %{count} mes",
          other: "alrededor de %{count} meses"
        },
        about_x_years: {
          one: "alrededor de %{count} a\xF1o",
          other: "alrededor de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado(a)",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo(a)",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado(a)",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor que o igual a %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido(a) en la lista",
        invalid: "no es v\xE1lido(a)",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor que o igual a %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un n\xFAmero entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser diferente de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya est\xE1 en uso",
        too_long: {
          one: "es demasiado largo(a) (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo(a) (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto(a) (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto(a) (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "no tiene la longitud correcta (debe ser de %{count} car\xE1cter)",
          other: "no tiene la longitud correcta (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "No se pudo guardar este(a) %{model} porque se encontr\xF3 %{count} error",
          other: "No se pudo guardar este(a) %{model} porque se encontraron %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "B/."
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %-d de %B de %Y a las %-I:%M:%S %p %Z",
        long: "%-d de %B de %Y a las %-I:%M %p",
        short: "%-d %b %-I:%M %p"
      },
      pm: "pm"
    }
  };
  var es_PE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Falla de validaci\xF3n: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B del %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "Falla de validaci\xF3n: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero non",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "S/"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b del %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B del %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_US = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "es inv\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero non",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya ha sido tomado",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S %Z",
        long: "%A, %d de %B de %Y a las %I:%M %p",
        short: "%d de %b a las %H:%M hrs"
      },
      pm: "pm"
    }
  };
  var es_VE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validaci\xF3n fall\xF3: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No se puede eliminar el registro porque existen %{record} dependientes",
            has_one: "No se puede eliminar el registro porque existe un %{record} dependiente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mi\xE9",
        "jue",
        "vie",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "ene",
        "feb",
        "mar",
        "abr",
        "may",
        "jun",
        "jul",
        "ago",
        "sep",
        "oct",
        "nov",
        "dic"
      ],
      day_names: [
        "domingo",
        "lunes",
        "martes",
        "mi\xE9rcoles",
        "jueves",
        "viernes",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%A, %d de %B de %Y",
        short: "%d de %b"
      },
      month_names: [
        null,
        "enero",
        "febrero",
        "marzo",
        "abril",
        "mayo",
        "junio",
        "julio",
        "agosto",
        "septiembre",
        "octubre",
        "noviembre",
        "diciembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "cerca de %{count} hora",
          other: "cerca de %{count} horas"
        },
        about_x_months: {
          one: "cerca de %{count} mes",
          other: "cerca de %{count} meses"
        },
        about_x_years: {
          one: "cerca de %{count} a\xF1o",
          other: "cerca de %{count} a\xF1os"
        },
        almost_x_years: {
          one: "casi %{count} a\xF1o",
          other: "casi %{count} a\xF1os"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "menos de %{count} minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "m\xE1s de %{count} a\xF1o",
          other: "m\xE1s de %{count} a\xF1os"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} a\xF1o",
          other: "%{count} a\xF1os"
        }
      },
      prompts: {
        day: "D\xEDa",
        hour: "Hora",
        minute: "Minuto",
        month: "Mes",
        second: "Segundo",
        year: "A\xF1o"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "no puede estar en blanco",
        confirmation: "no coincide",
        empty: "no puede estar vac\xEDo",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser un n\xFAmero par",
        exclusion: "est\xE1 reservado",
        greater_than: "debe ser mayor que %{count}",
        greater_than_or_equal_to: "debe ser mayor o igual que %{count}",
        in: "debe estar en %{count}",
        inclusion: "no est\xE1 incluido en la lista",
        invalid: "no es v\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor o igual que %{count}",
        model_invalid: "La validaci\xF3n fall\xF3: %{errors}",
        not_a_number: "no es un n\xFAmero",
        not_an_integer: "debe ser un entero",
        odd: "debe ser un n\xFAmero impar",
        other_than: "debe ser distinto de %{count}",
        present: "debe estar en blanco",
        required: "debe existir",
        taken: "ya est\xE1 en uso",
        too_long: {
          one: "es demasiado largo (m\xE1ximo %{count} car\xE1cter)",
          other: "es demasiado largo (m\xE1ximo %{count} caracteres)"
        },
        too_short: {
          one: "es demasiado corto (m\xEDnimo %{count} car\xE1cter)",
          other: "es demasiado corto (m\xEDnimo %{count} caracteres)"
        },
        wrong_length: {
          one: "longitud err\xF3nea (debe ser de %{count} car\xE1cter)",
          other: "longitud err\xF3nea (debe ser de %{count} caracteres)"
        }
      },
      template: {
        body: "Revise que los siguientes campos sean v\xE1lidos:",
        header: {
          one: "%{model} no pudo guardarse debido a %{count} error",
          other: "%{model} no pudo guardarse debido a %{count} errores"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecciona"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Guardar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "Bs."
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "mil millones",
            million: {
              one: "mill\xF3n",
              other: "millones"
            },
            quadrillion: "mil billones",
            thousand: "mil",
            trillion: {
              one: "bill\xF3n",
              other: "billones"
            },
            unit: ""
          }
        },
        format: {
          delimiter: ".",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ",",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ","
        }
      }
    },
    support: {
      array: {
        last_word_connector: " y ",
        two_words_connector: " y ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de %Y a las %H:%M:%S%p %Z",
        long: "%A, %d de %B de %Y a las %I:%M%p",
        short: "%d de %b a las %H:%M%p"
      },
      pm: "pm"
    }
  };
  var et = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Valideerimine eba\xF5nnestus: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Ei saa kirjet kustutada kuna s\xF5ltuvad %{record} on olemas",
            has_one: "Ei saa kirjet kustutada kuna s\xF5ltuv %{record} on olemas"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "P",
        "E",
        "T",
        "K",
        "N",
        "R",
        "L"
      ],
      abbr_month_names: [
        null,
        "jaan.",
        "veebr.",
        "m\xE4rts",
        "apr.",
        "mai",
        "juuni",
        "juuli",
        "aug.",
        "sept.",
        "okt.",
        "nov.",
        "dets."
      ],
      day_names: [
        "p\xFChap\xE4ev",
        "esmasp\xE4ev",
        "teisip\xE4ev",
        "kolmap\xE4ev",
        "neljap\xE4ev",
        "reede",
        "laup\xE4ev"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d. %B %Y",
        short: "%d.%m.%y"
      },
      month_names: [
        null,
        "jaanuar",
        "veebruar",
        "m\xE4rts",
        "aprill",
        "mai",
        "juuni",
        "juuli",
        "august",
        "september",
        "oktoober",
        "november",
        "detsember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "umbes %{count} tund",
          other: "umbes %{count} tundi"
        },
        about_x_months: {
          one: "umbes %{count} kuu",
          other: "umbes %{count} kuud"
        },
        about_x_years: {
          one: "umbes %{count} aasta",
          other: "umbes %{count} aastat"
        },
        almost_x_years: {
          one: "peaaegu \xFCks aasta",
          other: "peaaegu %{count} aastat"
        },
        half_a_minute: "pool minutit",
        less_than_x_minutes: {
          one: "v\xE4hem kui %{count} minut",
          other: "v\xE4hem kui %{count} minutit"
        },
        less_than_x_seconds: {
          one: "v\xE4hem kui %{count} sekund",
          other: "v\xE4hem kui %{count} sekundit"
        },
        over_x_years: {
          one: "\xFCle %{count} aasta",
          other: "\xFCle %{count} aasta"
        },
        x_days: {
          one: "%{count} p\xE4ev",
          other: "%{count} p\xE4eva"
        },
        x_minutes: {
          one: "%{count} minut",
          other: "%{count} minutit"
        },
        x_months: {
          one: "%{count} kuu",
          other: "%{count} kuud"
        },
        x_seconds: {
          one: "%{count} sekund",
          other: "%{count} sekundit"
        },
        x_years: {
          one: "%{count} aasta",
          other: "%{count} aastat"
        }
      },
      prompts: {
        day: "P\xE4ev",
        hour: "Tunde",
        minute: "Minutit",
        month: "Kuu",
        second: "Sekundit",
        year: "Aasta"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "peab olema heaks kiidetud",
        blank: "on t\xE4itmata",
        confirmation: "ei vasta kinnitusele",
        empty: "on t\xFChi",
        equal_to: "peab olema v\xF5rdne arvuga %{count}",
        even: "peab olema paarisarv",
        exclusion: "on reserveeritud",
        greater_than: "peab olema suurem kui %{count}",
        greater_than_or_equal_to: "peab olema suurem v\xF5i v\xF5rdne arvuga %{count}",
        inclusion: "ei leidu nimekirjas",
        invalid: "ei ole korrektne",
        less_than: "peab olema v\xE4hem kui %{count}",
        less_than_or_equal_to: "peab olema v\xE4hem v\xF5i v\xF5rdne arvuga %{count}",
        model_invalid: "Valideerimine eba\xF5nnestus: %{errors}",
        not_a_number: "ei ole number",
        not_an_integer: "peab olema t\xE4isarv",
        odd: "peab olema paaritu arv",
        other_than: "peab olema midagi muud kui %{count}",
        present: "peab olema t\xE4itmata",
        required: "peab olemas olema",
        taken: "on juba v\xF5etud",
        too_long: "on liiga pikk (maksimum on %{count} t\xE4hem\xE4rki)",
        too_short: "on liiga l\xFChike (miinimum on %{count} t\xE4hem\xE4rki)",
        wrong_length: "on vale pikkusega (peab olema %{count} t\xE4hem\xE4rki)"
      },
      template: {
        body: "Probleeme ilmnes j\xE4rgmiste v\xE4ljadega:",
        header: {
          one: "\xDCks viga takistas objekti %{model} salvestamist",
          other: "%{count} viga takistasid objekti %{model} salvestamist"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Palun vali"
      },
      submit: {
        create: "Loo uus %{model}",
        submit: "Salvesta %{model}",
        update: "Uuenda objekti %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miljard",
            million: "miljon",
            quadrillion: "kvadriljon",
            thousand: "tuhat",
            trillion: "triljon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "bait",
              other: "baiti"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " ja ",
        two_words_connector: " ja ",
        words_connector: ", "
      }
    },
    time: {
      am: "enne l\xF5unat",
      formats: {
        default: "%d. %B %Y, %H:%M",
        long: "%a, %d. %b %Y, %H:%M:%S %z",
        short: "%d.%m.%y, %H:%M"
      },
      pm: "p\xE4rast l\xF5unat"
    }
  };
  var eu = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Balioztatze arazoa: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Ezin da erregistroa ezabat menpeko %{record}ak daudelako",
            has_one: "Ezin da erregistroa ezabatu menpeko %{record} bat dagoelako"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Igan",
        "Astel",
        "Astear",
        "Asteaz",
        "Oste",
        "Osti",
        "Lar"
      ],
      abbr_month_names: [
        null,
        "Urt",
        "Ots",
        "Mar",
        "Api",
        "Mai",
        "Eka",
        "Uzt",
        "Abu",
        "Ira",
        "Urr",
        "Aza",
        "Aben"
      ],
      day_names: [
        "Igandea",
        "Astelehena",
        "Asteartea",
        "Asteazkena",
        "Osteguna",
        "Ostirala",
        "Larunbata"
      ],
      formats: {
        default: "%Y/%m/%e",
        long: "%Y(e)ko %Bk %e",
        short: "%b %e"
      },
      month_names: [
        null,
        "Urtarrila",
        "Otsaila",
        "Martxoa",
        "Apirila",
        "Maiatza",
        "Ekaina",
        "Uztaila",
        "Abuztua",
        "Iraila",
        "Urria",
        "Azaroa",
        "Abendua"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ordu bat inguru",
          other: "%{count} ordu inguru"
        },
        about_x_months: {
          one: "hilabete bat inguru",
          other: "%{count} hilabete inguru"
        },
        about_x_years: {
          one: "urte bat inguru",
          other: "%{count} urte inguru"
        },
        almost_x_years: {
          one: "ia urte bat",
          other: "ia %{count} urte"
        },
        half_a_minute: "minutu erdi",
        less_than_x_minutes: {
          one: "%{count} minutu bat baino gutxiago",
          other: "%{count} minutu baino gutxiago"
        },
        less_than_x_seconds: {
          one: "segundu bat baino gutxiago",
          other: "%{count} segundu baino gutxiago"
        },
        over_x_years: {
          one: "urte bat baino gehiago",
          other: "%{count} urte baino gehiago"
        },
        x_days: {
          one: "egun bat",
          other: "%{count} egun"
        },
        x_minutes: {
          one: "minutu bat",
          other: "%{count} minutu"
        },
        x_months: {
          one: "hilabete bat",
          other: "%{count} hilabete"
        },
        x_seconds: {
          one: "segundu bat",
          other: "%{count} segundu"
        }
      },
      prompts: {
        day: "Egun",
        hour: "Ordu",
        minute: "Minutu",
        month: "Hilabete",
        second: "Segundu",
        year: "Urte"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "onartuta izan behar da",
        blank: "ezin da zuriz utzi",
        confirmation: "ez dator bat konfirmazioarekin",
        empty: "ezin da hutsik egon",
        equal_to: "%{count} izan behar da",
        even: "bikoitia izan behar du",
        exclusion: "erreserbatuta dago",
        greater_than: "%{count} baino handiagoa izan behar da",
        greater_than_or_equal_to: "%{count} baino handiago edo berdin izan behar da",
        inclusion: "ez da zerrendako aukera bat",
        invalid: "ez da zuzena",
        less_than: "%{count} baino txikiago izan behar da",
        less_than_or_equal_to: "%{count} baino txikiago edo berdin izan behar da",
        model_invalid: "Baieztatzeak huts egin du: %{errors}",
        not_a_number: "ez da zenbaki bat",
        not_an_integer: "zenbaki osoa izan behar da",
        odd: "bakoitia izan behar du",
        other_than: "%{count}ren ezberdina izan behar du",
        present: "zuriz egon behar da",
        required: "egon behar du",
        taken: "hartuta dago",
        too_long: {
          one: "luzeegia da (karaktere %{count} gehienez)",
          other: "luzeegia da (%{count} karaktere gehienez)"
        },
        too_short: {
          one: "laburregia da (karaktere %{count} gutxienez)",
          other: "laburregia da (%{count} karaktere gutxienez)"
        },
        wrong_length: {
          one: "ez du luzeera zuzena (karaktere %{count} izan behar ditu)",
          other: "ez du luzeera zuzena (%{count} karaktere izan behar ditu)"
        }
      },
      template: {
        body: "Arazoak egon dira ondoko eremuekin:",
        header: {
          one: "Errore batek ezinezkoa egin du %{model} hau gordetzea",
          other: "%{count} errorek ezinezkoa egiten dute %{model} hau gordetzea"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Mesedez, aukeratu"
      },
      submit: {
        create: "%{model}a eratu",
        submit: "%{model}a gorde",
        update: "%{model}a eguneratu"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Mila milioi",
            million: "Milioi",
            quadrillion: "Kuatrilioi",
            thousand: "Mila",
            trillion: "Trilioi",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " eta ",
        two_words_connector: " eta ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %Y(e)ko %Bren %e %H:%M:%S %z",
        long: "%Y(e)ko %Bren %e,  %H:%M",
        short: "%b %e, %H:%M"
      },
      pm: "pm"
    }
  };
  var fa = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0631\u06A9\u0648\u0631\u062F \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0646\u0645\u06CC \u062A\u0648\u0627\u0646 \u0631\u06A9\u0648\u0631\u062F \u0631\u0627 \u062D\u0630\u0641 \u06A9\u0631\u062F \u0628\u062E\u0627\u0637\u0631 \u0627\u06CC\u0646\u06A9\u0647 %{record} \u0648\u0627\u0628\u0633\u062A\u0647 \u0648\u062C\u0648\u062F \u062F\u0627\u0631\u062F",
            has_one: "\u0646\u0645\u06CC \u062A\u0648\u0627\u0646 \u0631\u06A9\u0648\u0631\u062F \u0631\u0627 \u062D\u0630\u0641 \u06A9\u0631\u062F \u0628\u062E\u0627\u0637\u0631 \u0627\u06CC\u0646\u06A9\u0647 \u06CC\u06A9 %{record} \u0648\u0627\u0628\u0633\u062A\u0647 \u0648\u062C\u0648\u062F \u062F\u0627\u0631\u062F"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u06CC",
        "\u062F",
        "\u0633",
        "\u0686",
        "\u067E",
        "\u062C",
        "\u0634"
      ],
      abbr_month_names: [
        null,
        "\u0698\u0627\u0646\u0648\u06CC\u0647",
        "\u0641\u0648\u0631\u06CC\u0647",
        "\u0645\u0627\u0631\u0633",
        "\u0622\u0648\u0631\u06CC\u0644",
        "\u0645\u0647",
        "\u0698\u0648\u0626\u0646",
        "\u0698\u0648\u0626\u06CC\u0647",
        "\u0627\u0648\u062A",
        "\u0633\u067E\u062A\u0627\u0645\u0628\u0631",
        "\u0627\u06A9\u062A\u0628\u0631",
        "\u0646\u0648\u0627\u0645\u0628\u0631",
        "\u062F\u0633\u0627\u0645\u0628\u0631"
      ],
      day_names: [
        "\u06CC\u06A9\u0634\u0646\u0628\u0647",
        "\u062F\u0648\u0634\u0646\u0628\u0647",
        "\u0633\u0647\u200C\u0634\u0646\u0628\u0647",
        "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647",
        "\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647",
        "\u062C\u0645\u0639\u0647",
        "\u0634\u0646\u0628\u0647"
      ],
      formats: {
        default: "%Y/%m/%d",
        long: "%e %B %Y",
        short: "%m/%d"
      },
      month_names: [
        null,
        "\u0698\u0627\u0646\u0648\u06CC\u0647",
        "\u0641\u0648\u0631\u06CC\u0647",
        "\u0645\u0627\u0631\u0633",
        "\u0622\u0648\u0631\u06CC\u0644",
        "\u0645\u0647",
        "\u0698\u0648\u0626\u0646",
        "\u0698\u0648\u0626\u06CC\u0647",
        "\u0627\u0648\u062A",
        "\u0633\u067E\u062A\u0627\u0645\u0628\u0631",
        "\u0627\u06A9\u062A\u0628\u0631",
        "\u0646\u0648\u0627\u0645\u0628\u0631",
        "\u062F\u0633\u0627\u0645\u0628\u0631"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u062D\u062F\u0648\u062F \u06CC\u06A9 \u0633\u0627\u0639\u062A",
          other: "\u062D\u062F\u0648\u062F %{count} \u0633\u0627\u0639\u062A"
        },
        about_x_months: {
          one: "\u062D\u062F\u0648\u062F \u06CC\u06A9 \u0645\u0627\u0647",
          other: "\u062D\u062F\u0648\u062F %{count} \u0645\u0627\u0647"
        },
        about_x_years: {
          one: "\u062D\u062F\u0648\u062F \u06CC\u06A9 \u0633\u0627\u0644",
          other: "\u062D\u062F\u0648\u062F %{count} \u0633\u0627\u0644"
        },
        almost_x_years: {
          one: "\u062D\u062F\u0648\u062F \u06CC\u06A9 \u0633\u0627\u0644",
          other: "\u062D\u062F\u0648\u062F %{count} \u0633\u0627\u0644"
        },
        half_a_minute: "\u0646\u06CC\u0645 \u062F\u0642\u06CC\u0642\u0647",
        less_than_x_minutes: {
          one: "\u06A9\u0645\u062A\u0631 \u0627\u0632 \u06CC\u06A9 \u062F\u0642\u06CC\u0642\u0647",
          other: "\u06A9\u0645\u062A\u0631 \u0627\u0632 %{count} \u062F\u0642\u06CC\u0642\u0647"
        },
        less_than_x_seconds: {
          one: "\u06CC\u06A9 \u062B\u0627\u0646\u06CC\u0647",
          other: "\u06A9\u0645\u062A\u0631  \u0627\u0632 %{count} \u062B\u0627\u0646\u06CC\u0647"
        },
        over_x_years: {
          one: "\u0628\u06CC\u0634 \u0627\u0632 \u06CC\u06A9 \u0633\u0627\u0644",
          other: "\u0628\u06CC\u0634 \u0627\u0632 %{count} \u0633\u0627\u0644"
        },
        x_days: {
          one: "\u06CC\u06A9 \u0631\u0648\u0632",
          other: "%{count} \u0631\u0648\u0632"
        },
        x_minutes: {
          one: "\u06CC\u06A9 \u062F\u0642\u06CC\u0642\u0647",
          other: "%{count} \u062F\u0642\u06CC\u0642\u0647"
        },
        x_months: {
          one: "\u06CC\u06A9 \u0645\u0627\u0647",
          other: "%{count} \u0645\u0627\u0647"
        },
        x_seconds: {
          one: "\u06CC\u06A9 \u062B\u0627\u0646\u06CC\u0647",
          other: "%{count} \u062B\u0627\u0646\u06CC\u0647"
        },
        x_years: {
          one: "%{count} \u0633\u0627\u0644",
          other: "%{count} \u0633\u0627\u0644"
        }
      },
      prompts: {
        day: "\u0631\u0648\u0632",
        hour: "\u0633\u0627\u0639\u062A",
        minute: "\u062F\u0642\u06CC\u0642\u0647",
        month: "\u0645\u0627\u0647",
        second: "\u062B\u0627\u0646\u06CC\u0647",
        year: "\u0633\u0627\u0644"
      }
    },
    devise: {
      failure: {
        expired: "\u062D\u0633\u0627\u0628 \u0634\u0645\u0627 \u0628\u0647 \u062F\u0644\u06CC\u0644 \u0639\u062F\u0645 \u0641\u0639\u0627\u0644\u06CC\u062A \u0645\u0646\u0642\u0636\u06CC \u0634\u062F\u0647 \u0627\u0633\u062A\u060C \u0644\u0637\u0641\u0627\u064B \u0628\u0627 \u0645\u062F\u06CC\u0631 \u0633\u0627\u06CC\u062A \u062A\u0645\u0627\u0633 \u0628\u06AF\u06CC\u0631\u06CC\u062F.",
        session_limited: "\u0627\u0632 \u0627\u0637\u0644\u0627\u0639\u0627\u062A \u0648\u0631\u0648\u062F \u0634\u0645\u0627 \u062F\u0631 \u0645\u0631\u0648\u0631\u06AF\u0631 \u062F\u06CC\u06AF\u0631\u06CC \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0634\u062F\u0647 \u0627\u0633\u062A\u060C \u0628\u0631\u0627\u06CC \u0627\u062F\u0627\u0645\u0647 \u062F\u0631 \u0627\u06CC\u0646 \u0645\u0631\u0648\u0631\u06AF\u0631 \u0644\u0637\u0641\u0627\u064B \u062F\u0648\u0628\u0627\u0631\u0647 \u0648\u0627\u0631\u062F \u0633\u06CC\u0633\u062A\u0645 \u0634\u0648\u06CC\u062F"
      },
      invalid_captcha: "\u0627\u0637\u0644\u0627\u0639\u0627\u062A \u0648\u0627\u0631\u062F \u0634\u062F\u0647 \u062F\u0631 \u06A9\u067E\u0686\u0627 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0628\u0648\u062F",
      invalid_security_question: "\u067E\u0627\u0633\u062E \u0633\u0648\u0627\u0644 \u0627\u0645\u0646\u06CC\u062A\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0628\u0648\u062F",
      paranoid_verification_code: {
        show: {
          submit: "\u0627\u0631\u0633\u0627\u0644",
          submit_verification_code: "\u0627\u0631\u0633\u0627\u0644 \u06A9\u062F \u062A\u0627\u06CC\u06CC\u062F\u06CC\u0647",
          verification_code: "\u06A9\u062F \u062A\u0627\u06CC\u06CC\u062F\u06CC\u0647"
        },
        updated: "\u06A9\u062F \u062A\u0623\u06CC\u06CC\u062F \u067E\u0630\u06CC\u0631\u0641\u062A\u0647 \u0634\u062F"
      },
      paranoid_verify: {
        code_required: "\u0644\u0637\u0641\u0627\u064B \u06A9\u062F\u06CC \u0631\u0627 \u06A9\u0647 \u062A\u06CC\u0645 \u067E\u0634\u062A\u06CC\u0628\u0627\u0646\u06CC \u0645\u0627 \u0627\u0631\u0627\u0626\u0647 \u06A9\u0631\u062F\u0647 \u0627\u0633\u062A \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F"
      },
      password_expired: {
        change_required: "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0634\u0645\u0627 \u0645\u0646\u0642\u0636\u06CC \u0634\u062F\u0647 \u0627\u0633\u062A \u060C\u0644\u0637\u0641\u0627\u064B \u0631\u0645\u0632 \u062E\u0648\u062F \u0631\u0627 \u062A\u0645\u062F\u06CC\u062F \u06A9\u0646\u06CC\u062F",
        show: {
          change_my_password: "\u062A\u063A\u06CC\u06CC\u0631 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631",
          current_password: "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062C\u0627\u0631\u06CC",
          new_password: "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062C\u062F\u06CC\u062F",
          new_password_confirmation: "\u062A\u06A9\u0631\u0627\u0631 \u0631\u0645\u0632 \u062C\u062F\u06CC\u062F",
          renew_your_password: "\u0633\u0627\u062E\u062A\u0646 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062C\u062F\u06CC\u062F"
        },
        updated: "\u0631\u0645\u0632 \u062C\u062F\u06CC\u062F \u0634\u0645\u0627 \u0630\u062E\u06CC\u0631\u0647 \u0634\u062F\u0647 \u0627\u0633\u062A"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0628\u0627\u06CC\u062F \u067E\u0630\u06CC\u0631\u0641\u062A\u0647 \u0634\u0648\u062F",
        blank: "\u0646\u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F",
        confirmation: "\u0628\u0627 \u062A\u0627\u06CC\u06CC\u062F \u0646\u0645\u06CC\u200C\u062E\u0648\u0627\u0646\u062F",
        empty: "\u0646\u0645\u06CC\u200C\u062A\u0648\u0627\u0646\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F",
        equal_to: "\u0628\u0627\u06CC\u062F \u0628\u0631\u0627\u0628\u0631 %{count} \u0628\u0627\u0634\u062F",
        equal_to_current_password: "\u0628\u0627\u06CC\u062F \u0645\u062A\u0641\u0627\u0648\u062A \u0628\u0627 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0641\u0639\u0644\u06CC \u0628\u0627\u0634\u062F",
        equal_to_email: "\u0628\u0627\u06CC\u062F \u0645\u062A\u0641\u0627\u0648\u062A \u0627\u0632 \u0627\u06CC\u0645\u06CC\u0644 \u0628\u0627\u0634\u062F",
        even: "\u0628\u0627\u06CC\u062F \u0632\u0648\u062C \u0628\u0627\u0634\u062F",
        exclusion: "\u0631\u0632\u0631\u0648 \u0627\u0633\u062A",
        greater_than: "\u0628\u0627\u06CC\u062F \u0628\u0632\u0631\u06AF\u062A\u0631 \u0627\u0632 %{count} \u0628\u0627\u0634\u062F",
        greater_than_or_equal_to: "\u0628\u0627\u06CC\u062F \u0628\u0632\u0631\u06AF\u062A\u0631 \u06CC\u0627 \u0628\u0631\u0627\u0628\u0631 %{count} \u0628\u0627\u0634\u062F",
        inclusion: "\u062F\u0631 \u0644\u06CC\u0633\u062A \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A",
        invalid: "\u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A",
        less_than: "\u0628\u0627\u06CC\u062F \u06A9\u0645\u062A\u0631 \u0627\u0632 %{count} \u0628\u0627\u0634\u062F",
        less_than_or_equal_to: "\u0628\u0627\u06CC\u062F \u06A9\u0645\u062A\u0631 \u06CC\u0627 \u0628\u0631\u0627\u0628\u0631 %{count} \u0628\u0627\u0634\u062F",
        model_invalid: "\u0631\u06A9\u0648\u0631\u062F \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A %{errors}",
        not_a_number: "\u0639\u062F\u062F \u0646\u06CC\u0633\u062A",
        not_an_integer: "\u0639\u062F\u062F \u0635\u062D\u06CC\u062D \u0646\u06CC\u0633\u062A",
        odd: "\u0628\u0627\u06CC\u062F \u0641\u0631\u062F \u0628\u0627\u0634\u062F",
        other_than: "\u0628\u0627\u06CC\u062F \u063A\u06CC\u0631 \u0627\u0632 %{count} \u0628\u0627\u0634\u062F",
        password_complexity: {
          digit: {
            one: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u06CC\u06A9 \u0631\u0642\u0645 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F",
            other: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 %{count} \u0639\u062F\u062F \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F"
          },
          lower: {
            one: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u0634\u0627\u0645\u0644 \u06CC\u06A9 \u062D\u0631\u0641 \u06A9\u0648\u0686\u06A9 \u0628\u0627\u0634\u062F",
            other: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 %{count} \u062D\u0631\u0648\u0641 \u06A9\u0648\u0686\u06A9 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F"
          },
          symbol: {
            one: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u062F\u0627\u0631\u0627\u06CC \u06CC\u06A9 \u0639\u0644\u0627\u0645\u062A \u06CC\u0627 \u06A9\u0627\u0631\u06A9\u062A\u0631 \u062E\u0627\u0635 \u0628\u0627\u0634\u062F",
            other: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u062F\u0627\u0631\u0627\u06CC %{count} \u0639\u0644\u0627\u0626\u0645 \u06CC\u0627 \u06A9\u0627\u0631\u06A9\u062A\u0631 \u0647\u0627\u06CC \u062E\u0627\u0635 \u0628\u0627\u0634\u062F"
          },
          upper: {
            one: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u06CC\u06A9 \u062D\u0631\u0641 \u0628\u0632\u0631\u06AF \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F",
            other: "\u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 %{count} \u062D\u0631\u0648\u0641 \u0628\u0632\u0631\u06AF \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F"
          }
        },
        present: "\u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F",
        required: "\u0628\u0627\u06CC\u062F \u0648\u062C\u0648\u062F \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F",
        taken: "\u067E\u06CC\u0634\u062A\u0631 \u06AF\u0631\u0641\u062A\u0647 \u0634\u062F\u0647",
        taken_in_past: "\u0642\u0628\u0644\u0627 \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0634\u062F\u0647 \u0627\u0633\u062A",
        too_long: "\u0628\u0644\u0646\u062F \u0627\u0633\u062A (\u062D\u062F\u0627\u06A9\u062B\u0631 %{count} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631)",
        too_short: "\u06A9\u0648\u062A\u0627\u0647 \u0627\u0633\u062A (\u062D\u062F\u0627\u0642\u0644 %{count} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631)",
        wrong_length: "\u0646\u0627\u0627\u0646\u062F\u0627\u0632\u0647 \u0627\u0633\u062A (\u0628\u0627\u06CC\u062F %{count} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u0628\u0627\u0634\u062F)"
      },
      template: {
        body: "\u0645\u0648\u0627\u0631\u062F \u0632\u06CC\u0631 \u0645\u0634\u06A9\u0644 \u062F\u0627\u0634\u062A:",
        header: {
          one: "%{count} \u062E\u0637\u0627 \u062C\u0644\u0648\u06CC \u0630\u062E\u06CC\u0631\u0647 \u0627\u06CC\u0646 %{model} \u0631\u0627 \u06AF\u0631\u0641\u062A",
          other: "%{count} \u062E\u0637\u0627 \u062C\u0644\u0648\u06CC \u0630\u062E\u06CC\u0631\u0647 \u0627\u06CC\u0646 %{model} \u0631\u0627 \u06AF\u0631\u0641\u062A"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0644\u0637\u0641\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F"
      },
      submit: {
        create: "\u0627\u06CC\u062C\u0627\u062F %{model}",
        submit: "\u0630\u062E\u06CC\u0631\u0647\u200C\u06CC %{model}",
        update: "\u0628\u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06CC %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u0622: "a",
          \u0627: "a",
          \u0628: "b",
          \u062A: "t",
          \u062B: "s",
          \u062C: "g",
          \u062D: "h",
          \u062E: "kh",
          \u062F: "d",
          \u0630: "z",
          \u0631: "r",
          \u0632: "z",
          \u0633: "s",
          \u0634: "sh",
          \u0635: "s",
          \u0636: "z",
          \u0637: "t",
          \u0638: "z",
          \u0639: "a",
          \u063A: "q",
          \u0641: "f",
          \u0642: "q",
          \u0644: "l",
          \u0645: "m",
          \u0646: "n",
          \u0647: "h",
          \u0648: "v",
          \u067E: "p",
          \u0686: "ch",
          \u0698: "j",
          \u06A9: "k",
          \u06AF: "gh",
          \u06CC: "i",
          "\u06F0": "0",
          "\u06F1": "1",
          "\u06F2": "2",
          "\u06F3": "3",
          "\u06F4": "4",
          "\u06F5": "5",
          "\u06F6": "6",
          "\u06F7": "7",
          "\u06F8": "8",
          "\u06F9": "9"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "\u066C",
          format: "%n %u",
          precision: 0,
          separator: "\u066B",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\uFDFC"
        }
      },
      format: {
        delimiter: "\u066C",
        precision: 2,
        separator: "\u066B",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0645\u06CC\u0644\u06CC\u0627\u0631\u062F",
            million: "\u0645\u06CC\u0644\u06CC\u0648\u0646",
            quadrillion: "\u06A9\u0627\u062F\u0631\u06CC\u0644\u06CC\u0648\u0646",
            thousand: "\u0647\u0632\u0627\u0631",
            trillion: "\u062A\u0631\u06CC\u0644\u06CC\u0648\u0646",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0628\u0627\u06CC\u062A",
              other: "\u0628\u0627\u06CC\u062A"
            },
            gb: "\u06AF\u06CC\u06AF\u0627\u0628\u0627\u06CC\u062A",
            kb: "\u06A9\u06CC\u0644\u0648\u0628\u0627\u06CC\u062A",
            mb: "\u0645\u06AF\u0627\u0628\u0627\u06CC\u062A",
            tb: "\u062A\u0631\u0627\u0628\u0627\u06CC\u062A"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0648 ",
        two_words_connector: " \u0648 ",
        words_connector: "\u060C "
      }
    },
    time: {
      am: "\u0642\u0628\u0644 \u0627\u0632 \u0638\u0647\u0631",
      formats: {
        default: "%A\u060C %e %B %Y\u060C \u0633\u0627\u0639\u062A %H:%M:%S (%Z)",
        long: "%e %B %Y\u060C \u0633\u0627\u0639\u062A %H:%M",
        short: "%e %B\u060C \u0633\u0627\u0639\u062A %H:%M"
      },
      pm: "\u0628\u0639\u062F \u0627\u0632 \u0638\u0647\u0631"
    }
  };
  var fi = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validointi ep\xE4onnistui: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Ei voida poistaa mallia koska t\xE4st\xE4 riippuvaisia %{record} l\xF6ytyy",
            has_one: "Ei voida poistaa mallia koska t\xE4st\xE4 riippuvainen %{record} l\xF6ytyy"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "su",
        "ma",
        "ti",
        "ke",
        "to",
        "pe",
        "la"
      ],
      abbr_month_names: [
        null,
        "tammi",
        "helmi",
        "maalis",
        "huhti",
        "touko",
        "kes\xE4",
        "hein\xE4",
        "elo",
        "syys",
        "loka",
        "marras",
        "joulu"
      ],
      day_names: [
        "sunnuntai",
        "maanantai",
        "tiistai",
        "keskiviikko",
        "torstai",
        "perjantai",
        "lauantai"
      ],
      formats: {
        default: "%-d.%-m.%Y",
        long: "%d. %Bta %Y",
        short: "%d. %b"
      },
      month_names: [
        null,
        "tammikuu",
        "helmikuu",
        "maaliskuu",
        "huhtikuu",
        "toukokuu",
        "kes\xE4kuu",
        "hein\xE4kuu",
        "elokuu",
        "syyskuu",
        "lokakuu",
        "marraskuu",
        "joulukuu"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "noin tunti",
          other: "noin %{count} tuntia"
        },
        about_x_months: {
          one: "noin kuukausi",
          other: "noin %{count} kuukautta"
        },
        about_x_years: {
          one: "vuosi",
          other: "noin %{count} vuotta"
        },
        almost_x_years: {
          one: "melkein yksi vuosi",
          other: "melkein %{count} vuotta"
        },
        half_a_minute: "puoli minuuttia",
        less_than_x_minutes: {
          one: "alle minuutti",
          other: "alle %{count} minuuttia"
        },
        less_than_x_seconds: {
          one: "alle sekunti",
          other: "alle %{count} sekuntia"
        },
        over_x_years: {
          one: "yli vuosi",
          other: "yli %{count} vuotta"
        },
        x_days: {
          one: "p\xE4iv\xE4",
          other: "%{count} p\xE4iv\xE4\xE4"
        },
        x_minutes: {
          one: "minuutti",
          other: "%{count} minuuttia"
        },
        x_months: {
          one: "kuukausi",
          other: "%{count} kuukautta"
        },
        x_seconds: {
          one: "sekunti",
          other: "%{count} sekuntia"
        },
        x_years: {
          one: "vuosi",
          other: "%{count} vuotta"
        }
      },
      prompts: {
        day: "P\xE4iv\xE4",
        hour: "Tunti",
        minute: "Minuutti",
        month: "Kuukausi",
        second: "Sekunti",
        year: "Vuosi"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "t\xE4ytyy olla hyv\xE4ksytty",
        blank: "ei voi olla tyhj\xE4",
        confirmation: "ei vastaa varmennusta",
        empty: "ei voi olla tyhj\xE4",
        equal_to: "t\xE4ytyy olla yht\xE4 suuri kuin %{count}",
        even: "t\xE4ytyy olla parillinen",
        exclusion: "on varattu",
        greater_than: "t\xE4ytyy olla suurempi kuin %{count}",
        greater_than_or_equal_to: "t\xE4ytyy olla suurempi tai yht\xE4 suuri kuin %{count}",
        inclusion: "ei l\xF6ydy listasta",
        invalid: "on virheellinen",
        less_than: "t\xE4ytyy olla pienempi kuin %{count}",
        less_than_or_equal_to: "t\xE4ytyy olla pienempi tai yht\xE4 suuri kuin %{count}",
        model_invalid: "Validointi ep\xE4onnistui: %{errors}",
        not_a_number: "ei ole luku",
        not_an_integer: "t\xE4ytyy olla kokonaisluku",
        odd: "t\xE4ytyy olla pariton",
        present: "t\xE4ytyy olla sis\xE4ll\xF6t\xF6n",
        required: "t\xE4ytyy olla",
        taken: "on jo k\xE4yt\xF6ss\xE4",
        too_long: {
          one: "on liian pitk\xE4 (saa olla enint\xE4\xE4n %{count} merkki)",
          other: "on liian pitk\xE4 (saa olla enint\xE4\xE4n %{count} merkki\xE4)"
        },
        too_short: {
          one: "on liian lyhyt (oltava v\xE4hint\xE4\xE4n %{count} merkki)",
          other: "on liian lyhyt (oltava v\xE4hint\xE4\xE4n %{count} merkki\xE4)"
        },
        wrong_length: {
          one: "on v\xE4\xE4r\xE4n pituinen (t\xE4ytyy olla t\xE4sm\xE4lleen %{count} merkki)",
          other: "on v\xE4\xE4r\xE4n pituinen (t\xE4ytyy olla t\xE4sm\xE4lleen %{count} merkki\xE4)"
        }
      },
      template: {
        body: "Seuraavat kent\xE4t aiheuttivat ongelmia:",
        header: {
          one: "Virhe sy\xF6tteess\xE4 esti mallin %{model} tallentamisen",
          other: "%{count} virhett\xE4 esti mallin %{model} tallentamisen"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Valitse"
      },
      submit: {
        create: "Luo %{model}",
        submit: "Tallenna %{model}",
        update: "P\xE4ivit\xE4 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miljardia",
            million: "miljoonaa",
            quadrillion: "tuhatta biljoonaa",
            thousand: "tuhatta",
            trillion: "biljoonaa",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "tavu",
              other: "tavua"
            },
            gb: "Gt",
            kb: "kt",
            mb: "Mt",
            tb: "Tt"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " ja ",
        two_words_connector: " ja ",
        words_connector: ", "
      }
    },
    time: {
      am: "aamup\xE4iv\xE4",
      formats: {
        default: "%A %e. %Bta %Y %H:%M:%S %z",
        long: "%e. %Bta %Y %H.%M",
        short: "%e.%m. %H.%M"
      },
      pm: "iltap\xE4iv\xE4"
    }
  };
  var fr = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validation a \xE9chou\xE9 : %{errors}",
          restrict_dependent_destroy: {
            has_many: "Vous ne pouvez pas supprimer l'enregistrement parce que les %{record} d\xE9pendants existent",
            has_one: "Vous ne pouvez pas supprimer l'enregistrement car un(e) %{record} d\xE9pendant(e) existe"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dim",
        "lun",
        "mar",
        "mer",
        "jeu",
        "ven",
        "sam"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "f\xE9v.",
        "mars",
        "avr.",
        "mai",
        "juin",
        "juil.",
        "ao\xFBt",
        "sept.",
        "oct.",
        "nov.",
        "d\xE9c."
      ],
      day_names: [
        "dimanche",
        "lundi",
        "mardi",
        "mercredi",
        "jeudi",
        "vendredi",
        "samedi"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "janvier",
        "f\xE9vrier",
        "mars",
        "avril",
        "mai",
        "juin",
        "juillet",
        "ao\xFBt",
        "septembre",
        "octobre",
        "novembre",
        "d\xE9cembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "environ une heure",
          other: "environ %{count} heures"
        },
        about_x_months: {
          one: "environ un mois",
          other: "environ %{count} mois"
        },
        about_x_years: {
          one: "environ un an",
          other: "environ %{count} ans"
        },
        almost_x_years: {
          one: "presque un an",
          other: "presque %{count} ans"
        },
        half_a_minute: "une demi\u2011minute",
        less_than_x_minutes: {
          one: "moins d'une minute",
          other: "moins de %{count} minutes",
          zero: "moins d'une minute"
        },
        less_than_x_seconds: {
          one: "moins d'une seconde",
          other: "moins de %{count} secondes",
          zero: "moins d'une seconde"
        },
        over_x_years: {
          one: "plus d'un an",
          other: "plus de %{count} ans"
        },
        x_days: {
          one: "%{count} jour",
          other: "%{count} jours"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} mois",
          other: "%{count} mois"
        },
        x_seconds: {
          one: "%{count} seconde",
          other: "%{count} secondes"
        },
        x_years: {
          one: "%{count} an",
          other: "%{count} ans"
        }
      },
      prompts: {
        day: "Jour",
        hour: "Heure",
        minute: "Minute",
        month: "Mois",
        second: "Seconde",
        year: "Ann\xE9e"
      }
    },
    devise: {
      failure: {
        expired: "Votre compte a expir\xE9 pour cause d'inactivit\xE9. Veuillez contacter l'administrateur du site",
        session_limited: "Vos identifiants de connexion ont \xE9t\xE9 utilis\xE9s dans un autre navigateur. Veuillez vous reconnecter pour continuer dans ce navigateur"
      },
      invalid_captcha: "Le captcha n'est pas valide",
      invalid_security_question: "La r\xE9ponse \xE0 la question de s\xE9curit\xE9 est invalide",
      paranoid_verification_code: {
        show: {
          submit: "Soumettre",
          submit_verification_code: "Soumettre le code de v\xE9rification",
          verification_code: "Code de v\xE9rification"
        },
        updated: "Code de v\xE9rification accept\xE9"
      },
      paranoid_verify: {
        code_required: "Veuillez entrer le code fourni par notre \xE9quipe de support"
      },
      password_expired: {
        change_required: "Votre mot de passe a expir\xE9. Veuillez en choisir un autre",
        show: {
          change_my_password: "Changer mon mot de passe",
          current_password: "Mot de passe actuel",
          new_password: "Nouveau mot de passe",
          new_password_confirmation: "Confirmer le nouveau mot de passe",
          renew_your_password: "Renouveler votre mot de passe"
        },
        updated: "Votre nouveau mot de passe est enregistr\xE9"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "doit \xEAtre accept\xE9(e)",
        blank: "doit \xEAtre rempli(e)",
        confirmation: "ne concorde pas avec %{attribute}",
        empty: "doit \xEAtre rempli(e)",
        equal_to: "doit \xEAtre \xE9gal \xE0 %{count}",
        equal_to_current_password: "doit \xEAtre diff\xE9rent de l'actuel",
        equal_to_email: "doit \xEAtre diff\xE9rent de l'e-mail",
        even: "doit \xEAtre pair",
        exclusion: "n'est pas disponible",
        greater_than: "doit \xEAtre sup\xE9rieur \xE0 %{count}",
        greater_than_or_equal_to: "doit \xEAtre sup\xE9rieur ou \xE9gal \xE0 %{count}",
        in: "doit \xEAtre dans l'intervalle %{count}",
        inclusion: "n'est pas inclus(e) dans la liste",
        invalid: "n'est pas valide",
        less_than: "doit \xEAtre inf\xE9rieur \xE0 %{count}",
        less_than_or_equal_to: "doit \xEAtre inf\xE9rieur ou \xE9gal \xE0 %{count}",
        model_invalid: "Validation \xE9chou\xE9e : %{errors}",
        not_a_number: "n'est pas un nombre",
        not_an_integer: "doit \xEAtre un nombre entier",
        odd: "doit \xEAtre impair",
        other_than: "doit \xEAtre diff\xE9rent de %{count}",
        password_complexity: {
          digit: {
            one: "doit contenir au moins un chiffre",
            other: "doit contenir au moins %{count} chiffres"
          },
          lower: {
            one: "doit contenir au moins une lettre minuscule",
            other: "doit contenir au moins %{count} lettres minuscules"
          },
          symbol: {
            one: "doit contenir au moins un signe de ponctuation",
            other: "doit contenir au moins %{count} signes de ponctuation"
          },
          upper: {
            one: "doit contenir au moins une lettre majuscule",
            other: "doit contenir au moins %{count} lettres majuscules"
          }
        },
        present: "doit \xEAtre vide",
        required: "doit exister",
        taken: "est d\xE9j\xE0 utilis\xE9(e)",
        taken_in_past: "a \xE9t\xE9 utilis\xE9 trop r\xE9cemment. Veuillez en choisir un autre",
        too_long: {
          one: "est trop long (pas plus d'un caract\xE8re)",
          other: "est trop long (pas plus de %{count} caract\xE8res)"
        },
        too_short: {
          one: "est trop court (au moins un caract\xE8re)",
          other: "est trop court (au moins %{count} caract\xE8res)"
        },
        wrong_length: {
          one: "ne fait pas la bonne longueur (doit comporter un seul caract\xE8re)",
          other: "ne fait pas la bonne longueur (doit comporter %{count} caract\xE8res)"
        }
      },
      template: {
        body: "Veuillez v\xE9rifier les champs suivants : ",
        header: {
          one: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreur",
          other: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreurs"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Veuillez s\xE9lectionner"
      },
      submit: {
        create: "Cr\xE9er un(e) %{model}",
        submit: "Enregistrer ce(tte) %{model}",
        update: "Modifier ce(tte) %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C0: "A",
          \u00C2: "A",
          \u00C6: "Ae",
          \u00C7: "C",
          \u00C8: "E",
          \u00C9: "E",
          \u00CA: "E",
          \u00CB: "E",
          \u00CE: "I",
          \u00CF: "I",
          \u00D4: "O",
          \u00D9: "U",
          \u00DB: "U",
          \u00DC: "U",
          \u00E0: "a",
          \u00E2: "a",
          \u00E6: "ae",
          \u00E7: "c",
          \u00E8: "e",
          \u00E9: "e",
          \u00EA: "e",
          \u00EB: "e",
          \u00EE: "i",
          \u00EF: "i",
          \u00F4: "o",
          \u00F9: "u",
          \u00FB: "u",
          \u00FC: "u",
          \u00FF: "y",
          \u0152: "Oe",
          \u0153: "oe",
          \u0178: "Y"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milliard",
            million: "million",
            quadrillion: "million de milliards",
            thousand: "millier",
            trillion: "billion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            eb: "Eo",
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            pb: "Po",
            tb: "To"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " et ",
        two_words_connector: " et ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d %B %Y %Hh %Mmin %Ss",
        long: "%A %d %B %Y %Hh%M",
        short: "%d %b %Hh%M"
      },
      pm: "pm"
    }
  };
  var fr_CA = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validation a \xE9chou\xE9 : %{errors}",
          restrict_dependent_destroy: {
            has_many: "Vous ne pouvez pas supprimer l'enregistrement parce que les %{record} d\xE9pendants existent",
            has_one: "Vous ne pouvez pas supprimer l'enregistrement car un(e) %{record} d\xE9pendant(e) existe"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dim",
        "lun",
        "mar",
        "mer",
        "jeu",
        "ven",
        "sam"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "f\xE9v.",
        "mars",
        "avr.",
        "mai",
        "juin",
        "juil.",
        "ao\xFBt",
        "sept.",
        "oct.",
        "nov.",
        "d\xE9c."
      ],
      day_names: [
        "dimanche",
        "lundi",
        "mardi",
        "mercredi",
        "jeudi",
        "vendredi",
        "samedi"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%y-%m-%d"
      },
      month_names: [
        null,
        "janvier",
        "f\xE9vrier",
        "mars",
        "avril",
        "mai",
        "juin",
        "juillet",
        "ao\xFBt",
        "septembre",
        "octobre",
        "novembre",
        "d\xE9cembre"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "environ une heure",
          other: "environ %{count} heures"
        },
        about_x_months: {
          one: "environ un mois",
          other: "environ %{count} mois"
        },
        about_x_years: {
          one: "environ un an",
          other: "environ %{count} ans"
        },
        almost_x_years: {
          one: "presque un an",
          other: "presque %{count} ans"
        },
        half_a_minute: "une demi-minute",
        less_than_x_minutes: {
          one: "moins d'une minute",
          other: "moins de %{count} minutes",
          zero: "moins d'une minute"
        },
        less_than_x_seconds: {
          one: "moins d'une seconde",
          other: "moins de %{count} secondes",
          zero: "moins d'une seconde"
        },
        over_x_years: {
          one: "plus d'un an",
          other: "plus de %{count} ans"
        },
        x_days: {
          one: "%{count} jour",
          other: "%{count} jours"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} mois",
          other: "%{count} mois"
        },
        x_seconds: {
          one: "%{count} seconde",
          other: "%{count} secondes"
        },
        x_years: {
          one: "%{count} an",
          other: "%{count} ans"
        }
      },
      prompts: {
        day: "Jour",
        hour: "Heure",
        minute: "Minute",
        month: "Mois",
        second: "Seconde",
        year: "Ann\xE9e"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "doit \xEAtre accept\xE9(e)",
        blank: "doit \xEAtre rempli(e)",
        confirmation: "ne concorde pas avec %{attribute}",
        empty: "doit \xEAtre rempli(e)",
        equal_to: "doit \xEAtre \xE9gal \xE0 %{count}",
        even: "doit \xEAtre pair",
        exclusion: "n'est pas disponible",
        greater_than: "doit \xEAtre sup\xE9rieur \xE0 %{count}",
        greater_than_or_equal_to: "doit \xEAtre sup\xE9rieur ou \xE9gal \xE0 %{count}",
        in: "doit \xEAtre dans l'intervalle %{count}",
        inclusion: "n'est pas inclus(e) dans la liste",
        invalid: "n'est pas valide",
        less_than: "doit \xEAtre inf\xE9rieur \xE0 %{count}",
        less_than_or_equal_to: "doit \xEAtre inf\xE9rieur ou \xE9gal \xE0 %{count}",
        model_invalid: "Validation \xE9chou\xE9e : %{errors}",
        not_a_number: "n'est pas un nombre",
        not_an_integer: "doit \xEAtre un nombre entier",
        odd: "doit \xEAtre impair",
        other_than: "doit \xEAtre diff\xE9rent de %{count}",
        present: "doit \xEAtre vide",
        required: "doit exister",
        taken: "n'est pas disponible",
        too_long: {
          one: "est trop long (pas plus d'un caract\xE8re)",
          other: "est trop long (pas plus de %{count} caract\xE8res)"
        },
        too_short: {
          one: "est trop court (au moins un caract\xE8re)",
          other: "est trop court (au moins %{count} caract\xE8res)"
        },
        wrong_length: {
          one: "ne fait pas la bonne longueur (doit comporter un seul caract\xE8re)",
          other: "ne fait pas la bonne longueur (doit comporter %{count} caract\xE8res)"
        }
      },
      template: {
        body: "Veuillez v\xE9rifier les champs suivants : ",
        header: {
          one: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreur",
          other: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreurs"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Veuillez s\xE9lectionner"
      },
      submit: {
        create: "Cr\xE9er un(e) %{model}",
        submit: "Enregistrer ce(tte) %{model}",
        update: "Modifier ce(tte) %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milliard",
            million: "million",
            quadrillion: "million de milliards",
            thousand: "millier",
            trillion: "billion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            eb: "Eo",
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            pb: "Po",
            tb: "To"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " et ",
        two_words_connector: " et ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d %B %Y %H h %M min %S s",
        long: "%A %d %B %Y %H h %M",
        short: "%d %b %H h %M"
      },
      pm: "pm"
    }
  };
  var fr_CH = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validation a \xE9chou\xE9 : %{errors}",
          restrict_dependent_destroy: {
            has_many: "Vous ne pouvez pas supprimer l'enregistrement parce que les %{record} d\xE9pendants existent",
            has_one: "Vous ne pouvez pas supprimer l'enregistrement car un(e) %{record} d\xE9pendant(e) existe"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dim",
        "lun",
        "mar",
        "mer",
        "jeu",
        "ven",
        "sam"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "f\xE9v.",
        "mars",
        "avr.",
        "mai",
        "juin",
        "juil.",
        "ao\xFBt",
        "sept.",
        "oct.",
        "nov.",
        "d\xE9c."
      ],
      day_names: [
        "dimanche",
        "lundi",
        "mardi",
        "mercredi",
        "jeudi",
        "vendredi",
        "samedi"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "janvier",
        "f\xE9vrier",
        "mars",
        "avril",
        "mai",
        "juin",
        "juillet",
        "ao\xFBt",
        "septembre",
        "octobre",
        "novembre",
        "d\xE9cembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "environ une heure",
          other: "environ %{count} heures"
        },
        about_x_months: {
          one: "environ un mois",
          other: "environ %{count} mois"
        },
        about_x_years: {
          one: "environ un an",
          other: "environ %{count} ans"
        },
        almost_x_years: {
          one: "presque un an",
          other: "presque %{count} ans"
        },
        half_a_minute: "une demi-minute",
        less_than_x_minutes: {
          one: "moins d'une minute",
          other: "moins de %{count} minutes",
          zero: "moins d'une minute"
        },
        less_than_x_seconds: {
          one: "moins d'une seconde",
          other: "moins de %{count} secondes",
          zero: "moins d'une seconde"
        },
        over_x_years: {
          one: "plus d'un an",
          other: "plus de %{count} ans"
        },
        x_days: {
          one: "%{count} jour",
          other: "%{count} jours"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} mois",
          other: "%{count} mois"
        },
        x_seconds: {
          one: "%{count} seconde",
          other: "%{count} secondes"
        },
        x_years: {
          one: "%{count} an",
          other: "%{count} ans"
        }
      },
      prompts: {
        day: "Jour",
        hour: "Heure",
        minute: "Minute",
        month: "Mois",
        second: "Seconde",
        year: "Ann\xE9e"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "doit \xEAtre accept\xE9(e)",
        blank: "doit \xEAtre rempli(e)",
        confirmation: "ne concorde pas avec %{attribute}",
        empty: "doit \xEAtre rempli(e)",
        equal_to: "doit \xEAtre \xE9gal \xE0 %{count}",
        even: "doit \xEAtre pair",
        exclusion: "n'est pas disponible",
        greater_than: "doit \xEAtre sup\xE9rieur \xE0 %{count}",
        greater_than_or_equal_to: "doit \xEAtre sup\xE9rieur ou \xE9gal \xE0 %{count}",
        in: "doit \xEAtre dans l'intervalle %{count}",
        inclusion: "n'est pas inclus(e) dans la liste",
        invalid: "n'est pas valide",
        less_than: "doit \xEAtre inf\xE9rieur \xE0 %{count}",
        less_than_or_equal_to: "doit \xEAtre inf\xE9rieur ou \xE9gal \xE0 %{count}",
        model_invalid: "Validation \xE9chou\xE9e : %{errors}",
        not_a_number: "n'est pas un nombre",
        not_an_integer: "doit \xEAtre un nombre entier",
        odd: "doit \xEAtre impair",
        other_than: "doit \xEAtre diff\xE9rent de %{count}",
        present: "doit \xEAtre vide",
        required: "doit exister",
        taken: "n'est pas disponible",
        too_long: {
          one: "est trop long (pas plus d'un caract\xE8re)",
          other: "est trop long (pas plus de %{count} caract\xE8res)"
        },
        too_short: {
          one: "est trop court (au moins un caract\xE8re)",
          other: "est trop court (au moins %{count} caract\xE8res)"
        },
        wrong_length: {
          one: "ne fait pas la bonne longueur (doit comporter un seul caract\xE8re)",
          other: "ne fait pas la bonne longueur (doit comporter %{count} caract\xE8res)"
        }
      },
      template: {
        body: "Veuillez v\xE9rifier les champs suivants : ",
        header: {
          one: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreur",
          other: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreurs"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Veuillez s\xE9lectionner"
      },
      submit: {
        create: "Cr\xE9er un(e) %{model}",
        submit: "Enregistrer ce(tte) %{model}",
        update: "Modifier ce(tte) %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "'",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "sFr."
        }
      },
      format: {
        delimiter: "'",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milliard",
            million: "million",
            quadrillion: "million de milliards",
            thousand: "millier",
            trillion: "billion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            eb: "Eo",
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            pb: "Po",
            tb: "To"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " et ",
        two_words_connector: " et ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d. %B %Y %H h %M",
        long: "%A, %d %B %Y %H h %M min %S s %Z",
        short: "%d %b %H h %M"
      },
      pm: "pm"
    }
  };
  var fr_FR = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validation a \xE9chou\xE9 : %{errors}",
          restrict_dependent_destroy: {
            has_many: "Vous ne pouvez pas supprimer l'enregistrement parce que les %{record} d\xE9pendants existent",
            has_one: "Vous ne pouvez pas supprimer l'enregistrement car un(e) %{record} d\xE9pendant(e) existe"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dim",
        "lun",
        "mar",
        "mer",
        "jeu",
        "ven",
        "sam"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "f\xE9v.",
        "mars",
        "avr.",
        "mai",
        "juin",
        "juil.",
        "ao\xFBt",
        "sept.",
        "oct.",
        "nov.",
        "d\xE9c."
      ],
      day_names: [
        "dimanche",
        "lundi",
        "mardi",
        "mercredi",
        "jeudi",
        "vendredi",
        "samedi"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "janvier",
        "f\xE9vrier",
        "mars",
        "avril",
        "mai",
        "juin",
        "juillet",
        "ao\xFBt",
        "septembre",
        "octobre",
        "novembre",
        "d\xE9cembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "environ une heure",
          other: "environ %{count} heures"
        },
        about_x_months: {
          one: "environ un mois",
          other: "environ %{count} mois"
        },
        about_x_years: {
          one: "environ un an",
          other: "environ %{count} ans"
        },
        almost_x_years: {
          one: "presque un an",
          other: "presque %{count} ans"
        },
        half_a_minute: "une demi-minute",
        less_than_x_minutes: {
          one: "moins d'une minute",
          other: "moins de %{count} minutes",
          zero: "moins d'une minute"
        },
        less_than_x_seconds: {
          one: "moins d'une seconde",
          other: "moins de %{count} secondes",
          zero: "moins d'une seconde"
        },
        over_x_years: {
          one: "plus d'un an",
          other: "plus de %{count} ans"
        },
        x_days: {
          one: "%{count} jour",
          other: "%{count} jours"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} mois",
          other: "%{count} mois"
        },
        x_seconds: {
          one: "%{count} seconde",
          other: "%{count} secondes"
        },
        x_years: {
          one: "%{count} an",
          other: "%{count} ans"
        }
      },
      prompts: {
        day: "Jour",
        hour: "Heure",
        minute: "Minute",
        month: "Mois",
        second: "Seconde",
        year: "Ann\xE9e"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "doit \xEAtre accept\xE9(e)",
        blank: "doit \xEAtre rempli(e)",
        confirmation: "ne concorde pas avec %{attribute}",
        empty: "doit \xEAtre rempli(e)",
        equal_to: "doit \xEAtre \xE9gal \xE0 %{count}",
        even: "doit \xEAtre pair",
        exclusion: "n'est pas disponible",
        greater_than: "doit \xEAtre sup\xE9rieur \xE0 %{count}",
        greater_than_or_equal_to: "doit \xEAtre sup\xE9rieur ou \xE9gal \xE0 %{count}",
        in: "doit \xEAtre dans l'intervalle %{count}",
        inclusion: "n'est pas inclus(e) dans la liste",
        invalid: "n'est pas valide",
        less_than: "doit \xEAtre inf\xE9rieur \xE0 %{count}",
        less_than_or_equal_to: "doit \xEAtre inf\xE9rieur ou \xE9gal \xE0 %{count}",
        model_invalid: "Validation \xE9chou\xE9e : %{errors}",
        not_a_number: "n'est pas un nombre",
        not_an_integer: "doit \xEAtre un nombre entier",
        odd: "doit \xEAtre impair",
        other_than: "doit \xEAtre diff\xE9rent de %{count}",
        present: "doit \xEAtre vide",
        required: "doit exister",
        taken: "n'est pas disponible",
        too_long: {
          one: "est trop long (pas plus d'un caract\xE8re)",
          other: "est trop long (pas plus de %{count} caract\xE8res)"
        },
        too_short: {
          one: "est trop court (au moins un caract\xE8re)",
          other: "est trop court (au moins %{count} caract\xE8res)"
        },
        wrong_length: {
          one: "ne fait pas la bonne longueur (doit comporter un seul caract\xE8re)",
          other: "ne fait pas la bonne longueur (doit comporter %{count} caract\xE8res)"
        }
      },
      template: {
        body: "Veuillez v\xE9rifier les champs suivants : ",
        header: {
          one: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreur",
          other: "Impossible d'enregistrer ce(tte) %{model} : %{count} erreurs"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Veuillez s\xE9lectionner"
      },
      submit: {
        create: "Cr\xE9er un(e) %{model}",
        submit: "Enregistrer ce(tte) %{model}",
        update: "Modifier ce(tte) %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milliard",
            million: "million",
            quadrillion: "million de milliards",
            thousand: "millier",
            trillion: "billion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            eb: "Eo",
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            pb: "Po",
            tb: "To"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " et ",
        two_words_connector: " et ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d %B %Y %Hh %Mmin %Ss",
        long: "%A %d %B %Y %Hh%M",
        short: "%d %b %Hh%M"
      },
      pm: "pm"
    }
  };
  var fy = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Falidaasje mislearre: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kin de registraasje net wiskje om't der %{record} \xF4fhinklik binne",
            has_one: "Kin de registraasje net wiskje om't der in %{record} \xF4fhinklik is"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "si",
        "mo",
        "ti",
        "wo",
        "to",
        "fr",
        "so"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mrt",
        "apr",
        "mai",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "des"
      ],
      day_names: [
        "snein",
        "moandei",
        "tiisdei",
        "woansdei",
        "tongersdei",
        "freed",
        "sneon"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "jannewaris",
        "febrewaris",
        "maart",
        "april",
        "maaie",
        "juny",
        "july",
        "augustus",
        "septimber",
        "oktober",
        "novimber",
        "desimber"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "likern\xF4ch 1 oere",
          other: "likern\xF4ch %{count} oeren"
        },
        about_x_months: {
          one: "likern\xF4ch 1 moanne",
          other: "likern\xF4ch %{count} moannen"
        },
        about_x_years: {
          one: "likern\xF4ch 1 jier",
          other: "likern\xF4ch %{count} jier"
        },
        almost_x_years: {
          one: "hast 1 jier",
          other: "hast %{count} jier"
        },
        half_a_minute: "in heale min\xFAt",
        less_than_x_minutes: {
          one: "minder as in min\xFAt",
          other: "minder as %{count} minuten"
        },
        less_than_x_seconds: {
          one: "minder as 1 sekonde",
          other: "minder as %{count} sekonden"
        },
        over_x_years: {
          one: "mear as 1 jier",
          other: "mear as %{count} jier"
        },
        x_days: {
          one: "1 dei",
          other: "%{count} dagen"
        },
        x_minutes: {
          one: "1 min\xFAt",
          other: "%{count} minuten"
        },
        x_months: {
          one: "1 moanne",
          other: "%{count} moannen"
        },
        x_seconds: {
          one: "1 sekonde",
          other: "%{count} sekonden"
        },
        x_years: {
          one: "1 jier",
          other: "%{count} jier"
        }
      },
      prompts: {
        day: "dei",
        hour: "oere",
        minute: "min\xFAt",
        month: "moanne",
        second: "sekonde",
        year: "jier"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "moat akseptearre wurde",
        blank: "kin net blanko w\xEAze",
        confirmation: "komt net oerien mei %{attribute}",
        empty: "kin net leech w\xEAze",
        equal_to: "moat lyk w\xEAze oan %{count}",
        even: "moat even w\xEAze",
        exclusion: "is reservearre",
        greater_than: "moat grutter w\xEAze as %{count}",
        greater_than_or_equal_to: "moat grutter w\xEAze as, of lyk oan %{count}",
        inclusion: "stiet net yn 'e list",
        invalid: "is \xFBnjildich",
        less_than: "moat lytser w\xEAze as %{count}",
        less_than_or_equal_to: "moat lytser w\xEAze as, of lyk oan %{count}",
        model_invalid: "Falidaasje mislearre: %{errors}",
        not_a_number: "is gjin getal",
        not_an_integer: "moat in hiel getal w\xEAze",
        odd: "moat \xFBneven w\xEAze",
        other_than: "moat oars w\xEAze as %{count}",
        present: "moat blanko w\xEAze",
        required: "moat der w\xEAze",
        taken: "is al ynnommen",
        too_long: {
          one: "is te lang (maksimum is 1 teken)",
          other: "is te lang (maksimum is %{count} tekens)"
        },
        too_short: {
          one: "is te koart (minimum is 1 teken)",
          other: "is te koart (minimum is %{count} tekens)"
        },
        wrong_length: {
          one: "hat de ferkearde lingte (moat 1 teken w\xEAze)",
          other: "hat de ferkearde lingte (moat %{count} tekens w\xEAze)"
        }
      },
      template: {
        body: "Der binne problemen mei de neikommende fjilden:",
        header: {
          one: "1 flater behinderet it f\xEAstlizzen fan %{model}",
          other: "%{count} flaters behinderje it f\xEAstlizzen fan %{model}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Meitsje in kar"
      },
      submit: {
        create: "%{model} oanmeitsje",
        submit: "%{model} f\xEAstlizze",
        update: "%{model} bywurkje"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miljard",
            million: "miljoen",
            quadrillion: "biljard",
            thousand: "t\xFBzen",
            trillion: "biljoen",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "byte",
              other: "bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " en ",
        two_words_connector: " en ",
        words_connector: ", "
      }
    },
    time: {
      am: "fm.",
      formats: {
        default: "%a %e %b %Y %H.%M:%S %z",
        long: "%e %B %Y om %H.%M oere",
        short: "%e %b, %H.%M o."
      },
      pm: "nm."
    }
  };
  var gd = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Dh\u2019fh\xE0illig leis an dearbhadh: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cha b\u2019 urrainn dhuinn an reacord a sguabadh \xE0s on a tha %{record} ann a tha an eisimeil air",
            has_one: "Cha b\u2019 urrainn dhuinn an reacord a sguabadh \xE0s on a tha %{record} ann a tha an eisimeil air"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "DiD",
        "DiL",
        "DiM",
        "DiC",
        "Dia",
        "Dih",
        "DiS"
      ],
      abbr_month_names: [
        null,
        "Faoi",
        "Gearr",
        "M\xE0rt",
        "Gibl",
        "C\xE8it",
        "\xD2gmh",
        "Iuch",
        "L\xF9na",
        "Sult",
        "D\xE0mh",
        "Samh",
        "D\xF9bh"
      ],
      day_names: [
        "DiD\xF2mhnaich",
        "DiLuain",
        "DiM\xE0irt",
        "DiCiadain",
        "DiarDaoin",
        "DihAoine",
        "DiSathairne"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Am Faoilleach",
        "An Gearran",
        "Am M\xE0rt",
        "An Giblean",
        "An C\xE8itean",
        "An t-\xD2gmhios",
        "An t-Iuchar",
        "An L\xF9nastal",
        "An t-Sultain",
        "An D\xE0mhair",
        "An t-Samhain",
        "An D\xF9bhlachd"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "mu %{count} uairean a th\xECde",
          one: "mu %{count} uair a th\xECde",
          other: "mu %{count} uair a th\xECde",
          two: "mu %{count} uair a th\xECde"
        },
        about_x_months: {
          few: "mu %{count} m\xECosan",
          one: "mu %{count} mh\xECos",
          other: "mu %{count} m\xECos",
          two: "mu %{count} mh\xECos"
        },
        about_x_years: {
          few: "mu %{count} bliadhnaichean",
          one: "mu %{count} bhliadhna",
          other: "mu %{count} bliadhna",
          two: "mu %{count} bhliadhna"
        },
        almost_x_years: {
          few: "cha mh\xF2r %{count} bliadhnaichean",
          one: "cha mh\xF2r %{count} bhliadhna",
          other: "cha mh\xF2r %{count} bliadhna",
          two: "cha mh\xF2r %{count} bhliadhna"
        },
        half_a_minute: "leth-mhionaid",
        less_than_x_minutes: {
          few: "nas lugha na %{count} mionaidean",
          one: "nas lugha na mionaid",
          other: "nas lugha na %{count} mionaid",
          two: "nas lugha na %{count} mhionaid"
        },
        less_than_x_seconds: {
          few: "nas lugha na %{count} diogan",
          one: "nas lugha na %{count} diog",
          other: "nas lugha na %{count} diog",
          two: "nas lugha na %{count} dhiog"
        },
        over_x_years: {
          few: "c\xF2rr is %{count} bliadhnaichean",
          one: "c\xF2rr is %{count} bhliadhna",
          other: "c\xF2rr is %{count} bliadhna",
          two: "c\xF2rr is %{count} bhliadhna"
        },
        x_days: {
          few: "%{count} l\xE0ithean",
          one: "%{count} latha",
          other: "%{count} latha",
          two: "%{count} latha"
        },
        x_minutes: {
          few: "%{count} mionaidean",
          one: "%{count} mhionaid",
          other: "%{count} mionaid",
          two: "%{count} mhionaid"
        },
        x_months: {
          few: "%{count} m\xECosan",
          one: "%{count} mh\xECos",
          other: "%{count} m\xECos",
          two: "%{count} mh\xECos"
        },
        x_seconds: {
          few: "%{count} diogan",
          one: "%{count} diog",
          other: "%{count} diog",
          two: "%{count} dhiog"
        },
        x_years: {
          few: "%{count} bliadhnaichean",
          one: "%{count} bhliadhna",
          other: "%{count} bliadhna",
          two: "%{count} bhliadhna"
        }
      },
      prompts: {
        day: "Latha",
        hour: "Uair a th\xECde",
        minute: "Mionaid",
        month: "M\xECos",
        second: "Diog",
        year: "Bliadhna"
      }
    },
    errors: {
      format: "%{attribute}: %{message}",
      messages: {
        accepted: "feumach air aontachadh",
        blank: "chan fhaod seo a bhith b\xE0n",
        confirmation: "chan eil e \u2019na mhaids dha %{attribute}",
        empty: "chan fhaod seo a bhith falamh",
        equal_to: "feumaidh seo a bhith co-ionnan ri %{count}",
        even: "feumaidh seo a bhith \u2019na \xE0ireamh chothrom",
        exclusion: "tha seo gl\xE8idhte",
        greater_than: "feumaidh seo a bhith nas motha na %{count}",
        greater_than_or_equal_to: "feumaidh seo a bhith nas motha na no co-ionann ri %{count}",
        in: "feumaidh seo a bhith am broinn %{count}",
        inclusion: "chan eil seo am broinn na liosta",
        invalid: "chan eil seo dligheach",
        less_than: "feumaidh seo a bhith nas lugha na %{count}",
        less_than_or_equal_to: "feumaidh seo a bhith nas lugha na no co-ionann ri %{count}",
        model_invalid: "Dh\u2019fh\xE0illig leis an dearbhadh: %{errors}",
        not_a_number: "chan eil seo \u2019na \xE0ireamh",
        not_an_integer: "feumaidh seo a bhith \u2019na \xE0ireamh shl\xE0n",
        odd: "feumaidh seo a bhith \u2019na \xE0ireamh ch\xF2rr",
        other_than: "chan fhaod seo a bhith %{count}",
        present: "feumaidh seo a bhith b\xE0n",
        required: "feumaidh seo a bhith ann",
        taken: "tha seo aig rud eile mu thr\xE0th",
        too_long: {
          few: "tha seo ro fhada (tha %{count} caractaran ceadaichte air a char as motha)",
          one: "tha seo ro fhada (tha %{count} charactar ceadaichte air a char as motha)",
          other: "tha seo ro fhada (tha %{count} caractar ceadaichte air a char as motha)",
          two: "tha seo ro fhada (tha %{count} charactar ceadaichte air a char as motha)"
        },
        too_short: {
          few: "tha seo ro ghoirid (tha %{count} caractaran ceadaichte air a char as lugha)",
          one: "tha seo ro ghoirid (tha %{count} charactar ceadaichte air a char as lugha)",
          other: "tha seo ro ghoirid (tha %{count} caractar ceadaichte air a char as lugha)",
          two: "tha seo ro ghoirid (tha %{count} charactar ceadaichte air a char as lugha)"
        },
        wrong_length: {
          few: "chan eil an fhaide mar bu ch\xF2ir (bu ch\xF2ir dha a bhith %{count} caractaran)",
          one: "chan eil an fhaide mar bu ch\xF2ir (bu ch\xF2ir dha a bhith %{count} charactar)",
          other: "chan eil an fhaide mar bu ch\xF2ir (bu ch\xF2ir dha a bhith %{count} caractar)",
          two: "chan eil an fhaide mar bu ch\xF2ir (bu ch\xF2ir dha a bhith %{count} charactar)"
        }
      },
      template: {
        body: "Bha duilgheadasan ann leis na raointean seo:",
        header: {
          few: "Dh\u2019adhbharaich %{count} mearachdan nach gabh a\u2019 %{model} seo a sh\xE0bhaladh",
          one: "Dh\u2019adhbharaich %{count} mhearachd nach gabh a\u2019 %{model} seo a sh\xE0bhaladh",
          other: "Dh\u2019adhbharaich %{count} mearachd nach gabh a\u2019 %{model} seo a sh\xE0bhaladh",
          two: "Dh\u2019adhbharaich %{count} mhearachd nach gabh a\u2019 %{model} seo a sh\xE0bhaladh"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Tagh"
      },
      submit: {
        create: "Cruthaich %{model}",
        submit: "S\xE0bhail %{model}",
        update: "\xD9raich %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "two",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\xA3"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "billean",
            million: "millean",
            quadrillion: "quadrillean",
            thousand: "m\xECle",
            trillion: "trillean",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "baidhtean",
              one: "bhaidht",
              other: "baidht",
              two: "bhaidht"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {},
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " agus ",
        two_words_connector: " agus ",
        words_connector: ", "
      }
    },
    time: {
      am: "m",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %b %Y, %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "f"
    }
  };
  var gl = {
    date: {
      abbr_day_names: [
        "Dom",
        "Lun",
        "Mar",
        "Mer",
        "Xov",
        "Ven",
        "Sab"
      ],
      abbr_month_names: [
        null,
        "Xan",
        "Feb",
        "Mar",
        "Abr",
        "Mai",
        "Xu\xF1",
        "Xul",
        "Ago",
        "Set",
        "Out",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Domingo",
        "Luns",
        "Martes",
        "M\xE9rcores",
        "Xoves",
        "Venres",
        "S\xE1bado"
      ],
      formats: {
        default: "%e/%m/%Y",
        long: "%A %e de %B de %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "Xaneiro",
        "Febreiro",
        "Marzo",
        "Abril",
        "Maio",
        "Xu\xF1o",
        "Xullo",
        "Agosto",
        "Setembro",
        "Outubro",
        "Novembro",
        "Decembro"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "aproximadamente unha hora",
          other: "%{count} horas"
        },
        about_x_months: {
          one: "aproximadamente %{count} mes",
          other: "%{count} meses"
        },
        about_x_years: {
          one: "aproximadamente %{count} ano",
          other: "%{count} anos"
        },
        half_a_minute: "medio minuto",
        less_than_x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos",
          zero: "menos dun minuto"
        },
        less_than_x_seconds: {
          few: "poucos segundos",
          one: "%{count} segundo",
          other: "%{count} segundos",
          zero: "menos dun segundo"
        },
        over_x_years: {
          one: "m\xE1is dun ano",
          other: "%{count} anos"
        },
        x_days: {
          one: "%{count} d\xEDa",
          other: "%{count} d\xEDas"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minuto"
        },
        x_months: {
          one: "%{count} mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        }
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "debe ser aceptado",
        blank: "non pode estar en branco",
        confirmation: "non coincide coa confirmaci\xF3n",
        empty: "non pode estar baleiro",
        equal_to: "debe ser igual a %{count}",
        even: "debe ser impar",
        exclusion: "xa existe",
        greater_than: "debe ser maior que %{count}",
        greater_than_or_equal_to: "debe ser maior ou igual que %{count}",
        inclusion: "non est\xE1 inclu\xEDdo na lista",
        invalid: "non \xE9 v\xE1lido",
        less_than: "debe ser menor que %{count}",
        less_than_or_equal_to: "debe ser menor ou igual que %{count}",
        not_a_number: "non \xE9 un n\xFAmero",
        odd: "debe ser par",
        taken: "non est\xE1 dispo\xF1ible",
        too_long: "\xE9 demasiado longo (non m\xE1is de %{count} car\xE1cteres)",
        too_short: "\xE9 demasiado curto (non menos de %{count} car\xE1cteres)",
        wrong_length: "non ten a lonxitude correcta (debe ser de %{count} car\xE1cteres)"
      },
      template: {
        body: "Atop\xE1ronse os seguintes problemas:",
        header: {
          one: "%{count} erro evitou que se puidese gardar o %{model}",
          other: "%{count} erros evitaron que se puidese gardar o %{model}"
        }
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %e de %B de %Y \xE1s %H:%M",
        long: "%A %e de %B de %Y \xE1s %H:%M",
        short: "%e/%m, %H:%M"
      },
      pm: "pm"
    }
  };
  var he = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u05D4\u05D0\u05D9\u05DE\u05D5\u05EA \u05E0\u05DB\u05E9\u05DC: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u05D0",
        "\u05D1",
        "\u05D2",
        "\u05D3",
        "\u05D4",
        "\u05D5",
        "\u05E9"
      ],
      abbr_month_names: [
        null,
        "\u05D9\u05E0\u05D5",
        "\u05E4\u05D1\u05E8",
        "\u05DE\u05E8\u05E5",
        "\u05D0\u05E4\u05E8",
        "\u05DE\u05D0\u05D9",
        "\u05D9\u05D5\u05E0",
        "\u05D9\u05D5\u05DC",
        "\u05D0\u05D5\u05D2",
        "\u05E1\u05E4\u05D8",
        "\u05D0\u05D5\u05E7",
        "\u05E0\u05D5\u05D1",
        "\u05D3\u05E6\u05DE"
      ],
      day_names: [
        "\u05E8\u05D0\u05E9\u05D5\u05DF",
        "\u05E9\u05E0\u05D9",
        "\u05E9\u05DC\u05D9\u05E9\u05D9",
        "\u05E8\u05D1\u05D9\u05E2\u05D9",
        "\u05D7\u05DE\u05D9\u05E9\u05D9",
        "\u05E9\u05D9\u05E9\u05D9",
        "\u05E9\u05D1\u05EA"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e \u05D1%B, %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u05D9\u05E0\u05D5\u05D0\u05E8",
        "\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8",
        "\u05DE\u05E8\u05E5",
        "\u05D0\u05E4\u05E8\u05D9\u05DC",
        "\u05DE\u05D0\u05D9",
        "\u05D9\u05D5\u05E0\u05D9",
        "\u05D9\u05D5\u05DC\u05D9",
        "\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8",
        "\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8",
        "\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8",
        "\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8",
        "\u05D3\u05E6\u05DE\u05D1\u05E8"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u05D1\u05E2\u05E8\u05DA \u05E9\u05E2\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05D1\u05E2\u05E8\u05DA %{count} \u05E9\u05E2\u05D5\u05EA"
        },
        about_x_months: {
          one: "\u05D1\u05E2\u05E8\u05DA \u05D7\u05D5\u05D3\u05E9 \u05D0\u05D7\u05D3",
          other: "\u05D1\u05E2\u05E8\u05DA %{count} \u05D7\u05D5\u05D3\u05E9\u05D9\u05DD"
        },
        about_x_years: {
          one: "\u05D1\u05E2\u05E8\u05DA \u05E9\u05E0\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05D1\u05E2\u05E8\u05DA %{count} \u05E9\u05E0\u05D9\u05DD"
        },
        almost_x_years: {
          one: "\u05DB\u05DE\u05E2\u05D8 \u05E9\u05E0\u05D4",
          other: "\u05DB\u05DE\u05E2\u05D8 %{count} \u05E9\u05E0\u05D9\u05DD"
        },
        half_a_minute: "\u05D7\u05E6\u05D9 \u05D3\u05E7\u05D4",
        less_than_x_minutes: {
          one: "\u05E4\u05D7\u05D5\u05EA \u05DE\u05D3\u05E7\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05E4\u05D7\u05D5\u05EA \u05DE- %{count} \u05D3\u05E7\u05D5\u05EA",
          zero: "\u05E4\u05D7\u05D5\u05EA \u05DE\u05D3\u05E7\u05D4 \u05D0\u05D7\u05EA"
        },
        less_than_x_seconds: {
          one: "\u05E4\u05D7\u05D5\u05EA \u05DE\u05E9\u05E0\u05D9\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05E4\u05D7\u05D5\u05EA \u05DE- %{count} \u05E9\u05E0\u05D9\u05D5\u05EA",
          zero: "\u05E4\u05D7\u05D5\u05EA \u05DE\u05E9\u05E0\u05D9\u05D4 \u05D0\u05D7\u05EA"
        },
        over_x_years: {
          one: "\u05DE\u05E2\u05DC \u05E9\u05E0\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05DE\u05E2\u05DC %{count} \u05E9\u05E0\u05D9\u05DD"
        },
        x_days: {
          one: "\u05D9\u05D5\u05DD \u05D0\u05D7\u05D3",
          other: "%{count} \u05D9\u05DE\u05D9\u05DD"
        },
        x_minutes: {
          one: "\u05D3\u05E7\u05D4 \u05D0\u05D7\u05EA",
          other: "%{count} \u05D3\u05E7\u05D5\u05EA"
        },
        x_months: {
          one: "\u05D7\u05D5\u05D3\u05E9 \u05D0\u05D7\u05D3",
          other: "%{count} \u05D7\u05D5\u05D3\u05E9\u05D9\u05DD"
        },
        x_seconds: {
          one: "\u05E9\u05E0\u05D9\u05D4 \u05D0\u05D7\u05EA",
          other: "%{count} \u05E9\u05E0\u05D9\u05D5\u05EA"
        }
      },
      prompts: {
        day: "\u05D9\u05D5\u05DD",
        hour: "\u05E9\u05E2\u05D4",
        minute: "\u05D3\u05E7\u05D4",
        month: "\u05D7\u05D5\u05D3\u05E9",
        second: "\u05E9\u05E0\u05D9\u05D5\u05EA",
        year: "\u05E9\u05E0\u05D4"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u05D7\u05D9\u05D9\u05D1 \u05D1\u05D0\u05D9\u05E9\u05D5\u05E8",
        blank: "\u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7",
        confirmation: "\u05DC\u05D0 \u05EA\u05D5\u05D0\u05DD \u05DC\u05D0\u05D9\u05E9\u05D5\u05E8\u05D5",
        empty: "\u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7",
        equal_to: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05D5\u05D5\u05D4 \u05DC- %{count}",
        even: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D6\u05D5\u05D2\u05D9",
        exclusion: "\u05DC\u05D0 \u05D6\u05DE\u05D9\u05DF",
        greater_than: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D2\u05D3\u05D5\u05DC \u05DE- %{count}",
        greater_than_or_equal_to: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D2\u05D3\u05D5\u05DC \u05D0\u05D5 \u05E9\u05D5\u05D5\u05D4 \u05DC- %{count}",
        inclusion: "\u05DC\u05D0 \u05E0\u05DB\u05DC\u05DC \u05D1\u05E8\u05E9\u05D9\u05DE\u05D4",
        invalid: "\u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF",
        less_than: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E7\u05D8\u05DF \u05DE- %{count}",
        less_than_or_equal_to: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E7\u05D8\u05DF \u05D0\u05D5 \u05E9\u05D5\u05D5\u05D4 \u05DC- %{count}",
        not_a_number: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05E1\u05E4\u05E8",
        not_an_integer: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05E1\u05E4\u05E8 \u05E9\u05DC\u05DD",
        odd: "\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D0\u05D9 \u05D6\u05D5\u05D2\u05D9",
        taken: "\u05DB\u05D1\u05E8 \u05D1\u05E9\u05D9\u05DE\u05D5\u05E9",
        too_long: "\u05D0\u05E8\u05D5\u05DA \u05DE\u05D3\u05D9 (\u05D9\u05D5\u05EA\u05E8 \u05DE- %{count} \u05EA\u05D5\u05D5\u05D9\u05DD)",
        too_short: "\u05E7\u05E6\u05E8 \u05DE\u05D3\u05D9 (\u05E4\u05D7\u05D5\u05EA \u05DE- %{count} \u05EA\u05D5\u05D5\u05D9\u05DD)",
        wrong_length: "\u05DC\u05D0 \u05D1\u05D0\u05D5\u05E8\u05DA \u05D4\u05E0\u05DB\u05D5\u05DF (\u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA %{count} \u05EA\u05D5\u05D5\u05D9\u05DD)"
      },
      template: {
        body: "\u05D0\u05E0\u05D0 \u05D1\u05D3\u05D5\u05E7 \u05D0\u05EA \u05D4\u05E9\u05D3\u05D5\u05EA \u05D4\u05D1\u05D0\u05D9\u05DD:",
        header: {
          one: "\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05DE\u05D5\u05E8 \u05D0\u05EA \u05D4%{model}: \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D0\u05D7\u05EA",
          other: "\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05DE\u05D5\u05E8 \u05D0\u05EA \u05D4%{model}: %{count} \u05E9\u05D2\u05D9\u05D0\u05D5\u05EA."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u05E0\u05D0 \u05DC\u05D1\u05D7\u05D5\u05E8"
      },
      submit: {
        create: "\u05D9\u05E6\u05D9\u05E8\u05EA %{model}",
        submit: "\u05E9\u05DE\u05D5\u05E8 %{model}",
        update: "\u05E2\u05D3\u05DB\u05D5\u05DF %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AA"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u05DE\u05D9\u05DC\u05D9\u05D0\u05E8\u05D3",
            million: "\u05DE\u05D9\u05DC\u05D9\u05D5\u05DF",
            quadrillion: "\u05E7\u05D5\u05D3\u05E8\u05D9\u05DC\u05D9\u05D5\u05DF",
            thousand: "\u05D0\u05DC\u05E3",
            trillion: "\u05D8\u05E8\u05D9\u05DC\u05D9\u05D5\u05DF",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u05D1\u05D9\u05D9\u05D8",
              other: "\u05D1\u05EA\u05D9\u05DD"
            },
            gb: "\u05D2'\u05D9\u05D2\u05D4-\u05D1\u05D9\u05D9\u05D8",
            kb: "\u05E7\u05D9\u05DC\u05D5-\u05D1\u05D9\u05D9\u05D8",
            mb: "\u05DE\u05D2\u05D4-\u05D1\u05D9\u05D9\u05D8",
            tb: "\u05D8\u05E8\u05D4-\u05D1\u05D9\u05D9\u05D8"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u05D5",
        two_words_connector: " \u05D5",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a %d %b %H:%M:%S %Z %Y",
        long: "%d \u05D1%B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var hi = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0938\u0924\u094D\u092F\u093E\u092A\u0928 \u0935\u093F\u092B\u0932: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0930\u0935\u093F",
        "\u0938\u094B\u092E",
        "\u092E\u0902\u0917\u0932",
        "\u092C\u0941\u0927",
        "\u0917\u0941\u0930\u0941",
        "\u0936\u0941\u0915\u094D\u0930",
        "\u0936\u0928\u093F"
      ],
      abbr_month_names: [
        null,
        "\u091C\u0928",
        "\u092B\u0930",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u0905\u092A\u094D\u0930\u0948",
        "\u092E\u0908",
        "\u091C\u0942\u0928",
        "\u091C\u0941\u0932\u093E",
        "\u0905\u0917",
        "\u0938\u093F\u0924\u0902",
        "\u0905\u0915\u094D\u091F\u0942",
        "\u0928\u0935\u0902",
        "\u0926\u093F\u0938"
      ],
      day_names: [
        "\u0930\u0935\u093F\u0935\u093E\u0930",
        "\u0938\u094B\u092E\u0935\u093E\u0930",
        "\u092E\u0902\u0917\u0932\u0935\u093E\u0930",
        "\u092C\u0941\u0927\u0935\u093E\u0930",
        "\u0917\u0941\u0930\u0941\u0935\u093E\u0930",
        "\u0936\u0941\u0915\u094D\u0930\u0935\u093E\u0930",
        "\u0936\u0928\u093F\u0935\u093E\u0930"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u091C\u0928\u0935\u0930\u0940",
        "\u092B\u0930\u0935\u0930\u0940",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u0905\u092A\u094D\u0930\u0948\u0932",
        "\u092E\u0908",
        "\u091C\u0942\u0928",
        "\u091C\u0941\u0932\u093E\u0908",
        "\u0905\u0917\u0938\u094D\u0924",
        "\u0938\u093F\u0924\u0902\u092C\u0930",
        "\u0905\u0915\u094D\u091F\u0942\u092C\u0930",
        "\u0928\u0935\u0902\u092C\u0930",
        "\u0926\u093F\u0938\u0902\u092C\u0930"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0932\u0917\u092D\u0917 \u090F\u0915 \u0918\u0902\u091F\u093E",
          other: "\u0932\u0917\u092D\u0917 %{count} \u0918\u0902\u091F\u093E"
        },
        about_x_months: {
          one: "\u0932\u0917\u092D\u0917 %{count} \u092E\u0939\u0940\u0928\u093E",
          other: "\u0932\u0917\u092D\u0917 %{count} \u092E\u0939\u0940\u0928\u093E"
        },
        about_x_years: {
          one: "\u0932\u0917\u092D\u0917 %{count} \u0938\u093E\u0932",
          other: "\u0932\u0917\u092D\u0917 %{count} \u0938\u093E\u0932"
        },
        almost_x_years: {
          one: "\u0932\u0917\u092D\u0917 \u090F\u0915 \u0938\u093E\u0932",
          other: "\u0932\u0917\u092D\u0917 %{count} \u0938\u093E\u0932"
        },
        half_a_minute: "\u090F\u0915 \u0906\u0927\u093E \u092E\u093F\u0928\u091F",
        less_than_x_minutes: {
          one: "\u090F\u0915 \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E",
          other: "%{count} \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E"
        },
        less_than_x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0947\u0902\u0921 \u0938\u0947 \u0915\u092E",
          other: "%{count}  \u0938\u0947\u0915\u0947\u0902\u0921 \u0938\u0947 \u0915\u092E"
        },
        over_x_years: {
          one: "\u090F\u0915 \u0938\u093E\u0932 \u0915\u0947 \u090A\u092A\u0930",
          other: "%{count} \u0938\u093E\u0932 \u0938\u0947 \u0905\u0927\u093F\u0915"
        },
        x_days: {
          one: "\u090F\u0915 \u0926\u093F\u0928",
          other: "%{count} \u0926\u093F\u0928"
        },
        x_minutes: {
          one: "\u090F\u0915 \u092E\u093F\u0928\u091F",
          other: "%{count} \u092E\u093F\u0928\u091F"
        },
        x_months: {
          one: "\u090F\u0915 \u092E\u0939\u0940\u0928\u093E",
          other: "%{count} \u092E\u0939\u0940\u0928\u093E"
        },
        x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0947\u0902\u0921",
          other: "%{count} \u0938\u0947\u0915\u0947\u0902\u0921"
        }
      },
      prompts: {
        day: "\u0926\u093F\u0928",
        hour: "\u0918\u0902\u091F\u093E",
        minute: "\u092E\u093F\u0928\u091F",
        month: "\u092E\u093E\u0939",
        second: "\u0938\u0947\u0915\u0947\u0902\u0921",
        year: "\u0935\u0930\u094D\u0937"
      }
    },
    devise: {
      failure: {
        expired: "\u0915\u094B\u0908 \u0917\u0924\u093F\u0935\u093F\u0927\u093F \u0928 \u0939\u094B\u0928\u0947 \u0915\u0947 \u0915\u093E\u0930\u0923 \u0916\u093E\u0924\u093E \u092C\u0902\u0926 \u0939\u094B \u0917\u092F\u093E, \u0938\u093F\u0938\u094D\u091F\u092E \u0935\u094D\u092F\u0935\u0938\u094D\u0925\u093E\u092A\u0915 \u0938\u0947 \u0938\u0902\u092A\u0930\u094D\u0915 \u0915\u0930\u0947\u0902",
        session_limited: "\u091C\u093E\u0928\u0915\u093E\u0930\u0940, \u0926\u0942\u0938\u0930\u0947 \u092C\u094D\u0930\u093E\u0909\u095B\u0930 \u092E\u0947\u0902 \u0909\u092A\u092F\u094B\u0917 \u0915\u0940 \u0917\u092F\u0940 \u0925\u0940 \u091C\u093E\u0930\u0940 \u0930\u0916\u0928\u0947 \u092B\u093F\u0930 \u0938\u0947 \u0938\u093E\u0907\u0928-\u0907\u0928 \u0915\u0930\u0947"
      },
      invalid_captcha: "\u0905\u092E\u093E\u0928\u094D\u092F \u0915\u0945\u092A\u094D\u091F\u091A\u093E",
      invalid_security_question: "\u0905\u092E\u093E\u0928\u094D\u092F \u0938\u0941\u0930\u0915\u094D\u0937\u093E \u0909\u0924\u094D\u0924\u0930",
      paranoid_verification_code: {
        show: {
          submit: "\u0938\u092C\u092E\u093F\u091F",
          submit_verification_code: "\u0935\u0947\u0930\u093F\u092B\u093F\u0915\u0947\u0936\u0928 \u0915\u094B\u0921 \u0921\u093E\u0932\u0947",
          verification_code: "\u0935\u0947\u0930\u093F\u092B\u093F\u0915\u0947\u0936\u0928 \u0915\u094B\u0921"
        },
        updated: "\u0938\u0924\u094D\u092F\u093E\u092A\u0928 \u0915\u094B\u0921 \u0938\u094D\u0935\u0940\u0915\u093E\u0930 \u0915\u093F\u092F\u093E \u0917\u092F\u093E"
      },
      paranoid_verify: {
        code_required: "\u0938\u092A\u094B\u0930\u094D\u091F \u091F\u0940\u092E \u0926\u094D\u0935\u093E\u0930\u093E \u0926\u093F\u092F\u093E \u0917\u092F\u093E \u0915\u094B\u0921 \u0921\u093E\u0932\u0947"
      },
      password_expired: {
        change_required: "\u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0905\u092E\u093E\u0928\u094D\u092F \u0939\u094B \u091A\u0941\u0915\u093E, \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u092C\u0926\u0932\u0947",
        show: {
          change_my_password: "\u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u092C\u0926\u0932\u0947",
          current_password: "\u0935\u0930\u094D\u0924\u092E\u093E\u0928 \u092A\u093E\u0938\u0935\u0930\u094D\u0921",
          new_password: "\u0928\u092F\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921",
          new_password_confirmation: "\u0928\u090F \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0915\u0940 \u092A\u0941\u0937\u094D\u091F\u093F \u0915\u0930\u0947\u0902",
          renew_your_password: "\u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u092C\u0926\u0932\u0947"
        },
        updated: "\u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0905\u0926\u094D\u092F\u0924\u0928 \u0915\u093F\u092F\u093E \u0917\u092F\u093E"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0938\u094D\u0935\u0940\u0915\u093E\u0930 \u0915\u093F\u092F\u093E \u091C\u093E\u0928\u093E \u091C\u0930\u0942\u0930\u0940",
        blank: "\u0916\u093E\u0932\u0940 \u0928\u0939\u0940\u0902 \u0930\u0939 \u0938\u0915\u0924\u093E \u0939\u0948",
        confirmation: "\u092A\u0941\u0937\u094D\u091F\u093F\u0915\u0930\u0923 \u092E\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093E\u0924\u093E",
        empty: "\u0930\u093F\u0915\u094D\u0924 \u0928\u0939\u0940\u0902 \u0930\u0939 \u0938\u0915\u0924\u093E \u0939\u0948",
        equal_to: "%{count} \u0915\u0947 \u0932\u093F\u090F \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        equal_to_current_password: "\u0928\u092F\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921, \u0935\u0930\u094D\u0924\u092E\u093E\u0928 \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0938\u0947 \u092D\u093F\u0928\u094D\u0928 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        equal_to_email: "\u0908\u092E\u0947\u0932 \u0938\u0947 \u0905\u0932\u0917 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        even: "\u0938\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        exclusion: "\u0906\u0930\u0915\u094D\u0937\u093F\u0924 \u0939\u0948",
        greater_than: "%{count} \u0938\u0947 \u0905\u0927\u093F\u0915 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        greater_than_or_equal_to: "%{count} \u0938\u0947 \u092C\u0921\u093C\u093E \u092F\u093E \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u0906\u0935\u0936\u094D\u092F\u0915 \u0939\u0948",
        inclusion: "\u0938\u0942\u091A\u0940 \u092E\u0947\u0902 \u0936\u093E\u092E\u093F\u0932 \u0928\u0939\u0940\u0902 \u0939\u0948",
        invalid: "\u0905\u0935\u0948\u0927 \u0939\u0948",
        less_than: "%{count} \u0938\u0947 \u0915\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        less_than_or_equal_to: "%{count} \u0938\u0947 \u0915\u092E \u092F\u093E \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u0906\u0935\u0936\u094D\u092F\u0915 \u0939\u0948",
        not_a_number: "\u0915\u094B\u0908 \u0938\u0902\u0916\u094D\u092F\u093E \u0928\u0939\u0940\u0902 \u0939\u0948",
        not_an_integer: "\u090F\u0915 \u092A\u0942\u0930\u094D\u0923\u093E\u0902\u0915 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        odd: "\u0935\u093F\u0938\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        password_complexity: {
          digit: {
            one: "\u090F\u0915 \u0905\u0902\u0915 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
            other: "\u0915\u092E \u0938\u0947 \u0915\u092E %{count} \u0905\u0902\u0915 \u0939\u094B\u0928\u0947 \u091A\u093E\u0939\u093F\u090F"
          },
          lower: {
            one: "\u090F\u0915 \u0932\u094B\u0905\u0930-\u0915\u0947\u0938 \u0905\u0915\u094D\u0937\u0930 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
            other: "\u0915\u092E \u0938\u0947 \u0915\u092E %{count} \u0905\u0915\u094D\u0937\u0930 \u0939\u094B\u0928\u0947 \u091A\u093E\u0939\u093F\u090F"
          },
          symbol: {
            one: "\u090F\u0915 \u091A\u093F\u0928\u094D\u0939 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
            other: "\u0915\u092E \u0938\u0947 \u0915\u092E %{count} \u091A\u093F\u0928\u094D\u0939 \u0939\u094B\u0928\u0947 \u091A\u093E\u0939\u093F\u090F"
          },
          upper: {
            one: "\u090F\u0915 \u0905\u092A\u0930-\u0915\u0947\u0938 \u0905\u0915\u094D\u0937\u0930 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
            other: "\u0915\u092E \u0938\u0947 \u0915\u092E %{count} \u0905\u092A\u0930-\u0915\u0947\u0938 \u0905\u0915\u094D\u0937\u0930 \u0939\u094B\u0928\u0947 \u091A\u093E\u0939\u093F\u090F"
          }
        },
        taken: "\u092A\u0939\u0932\u0947 \u0939\u0940 \u0932\u0947 \u0932\u093F\u092F\u093E \u0917\u092F\u093E \u0939\u0948",
        taken_in_past: "\u092F\u0939 \u092A\u093E\u0938\u0935\u0930\u094D\u0921, \u0906\u092A\u0915\u0947 \u0926\u094D\u0935\u093E\u0930\u093E \u092A\u0942\u0930\u094D\u0935 \u092E\u0947 \u092A\u094D\u0930\u092F\u094B\u0917 \u0915\u093F\u092F\u093E \u091C\u093E \u091A\u0941\u0915\u093E \u0939\u0948",
        too_long: "\u0905\u0924\u094D\u092F\u0927\u093F\u0915 \u0932\u0902\u092C\u093E \u0939\u0948 (\u0905\u0927\u093F\u0915\u0924\u092E %{count} \u0935\u0930\u094D\u0923 \u0939\u0948\u0902)",
        too_short: "\u0905\u0924\u094D\u092F\u0927\u093F\u0915 \u091B\u094B\u091F\u093E \u0939\u0948 (\u0928\u094D\u092F\u0942\u0928\u0924\u092E %{count} \u0935\u0930\u094D\u0923 \u0939\u0948\u0902)",
        wrong_length: "\u0917\u0932\u0924 \u0932\u0902\u092C\u093E\u0908 \u0939\u0948 (%{count} \u0935\u0930\u094D\u0923 \u092F\u0941\u0915\u094D\u0924 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F)"
      },
      template: {
        body: "\u0928\u093F\u092E\u094D\u0928\u0932\u093F\u0916\u093F\u0924 \u0915\u094D\u0937\u0947\u0924\u094D\u0930\u094B\u0902 \u0915\u0947 \u0938\u093E\u0925 \u0938\u092E\u0938\u094D\u092F\u093E \u0925\u0940:",
        header: {
          one: "\u0907\u0938 %{model} \u0915\u094B \u0938\u0939\u0947\u091C\u0947 \u091C\u093E\u0928\u093E \u090F\u0915 \u0924\u094D\u0930\u0941\u091F\u093F \u0915\u0947 \u0915\u093E\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0941\u0906",
          other: "\u0907\u0938 %{model} \u0915\u094B \u0938\u0939\u0947\u091C\u0947 \u091C\u093E\u0928\u093E %{count} \u0924\u094D\u0930\u0941\u091F\u093F \u0915\u0947 \u0915\u093E\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0941\u0906"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0915\u0943\u092A\u092F\u093E \u091A\u0941\u0928\u0947\u0902"
      },
      submit: {
        create: "%{model} \u092C\u0928\u093E\u090F\u0901",
        submit: "%{model} \u0938\u094C\u0902\u092A\u0947\u0902",
        update: "%{model} \u0905\u0926\u094D\u092F\u0924\u0928"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0905\u0930\u092C",
            million: "\u0926\u0938 \u0915\u0930\u094B\u0921\u093C",
            quadrillion: "\u0915\u0930\u094B\u0921\u093C \u0936\u0902\u0916",
            thousand: "\u0939\u091C\u093C\u093E\u0930",
            trillion: "\u0916\u0930\u092C",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0914\u0930 ",
        two_words_connector: " \u0914\u0930 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0905\u092A\u0930\u093E\u0939\u094D\u0928"
    }
  };
  var hi_IN = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0938\u0924\u094D\u092F\u093E\u092A\u0928 \u0935\u093F\u092B\u0932: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0930\u0935\u093F",
        "\u0938\u094B\u092E",
        "\u092E\u0902\u0917\u0932",
        "\u092C\u0941\u0927",
        "\u0917\u0941\u0930\u0941",
        "\u0936\u0941\u0915\u094D\u0930",
        "\u0936\u0928\u093F"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "\u0930\u0935\u093F\u0935\u093E\u0930",
        "\u0938\u094B\u092E\u0935\u093E\u0930",
        "\u092E\u0902\u0917\u0932\u0935\u093E\u0930",
        "\u092C\u0941\u0927\u0935\u093E\u0930",
        "\u0917\u0941\u0930\u0941\u0935\u093E\u0930",
        "\u0936\u0941\u0915\u094D\u0930\u0935\u093E\u0930",
        "\u0936\u0928\u093F\u0935\u093E\u0930"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u091C\u0928\u0935\u0930\u0940",
        "\u092B\u0930\u0935\u0930\u0940",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u0905\u092A\u094D\u0930\u0948\u0932",
        "\u092E\u0908",
        "\u091C\u0942\u0928",
        "\u091C\u0941\u0932\u093E\u0908",
        "\u0905\u0917\u0938\u094D\u0924",
        "\u0938\u093F\u0924\u0902\u092C\u0930",
        "\u0905\u0915\u094D\u091F\u0942\u092C\u0930",
        "\u0928\u0935\u0902\u092C\u0930",
        "\u0926\u093F\u0938\u0902\u092C\u0930"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0932\u0917 - \u092D\u0917 \u090F\u0915 \u0918\u0902\u091F\u093E",
          other: "\u0932\u0917 - \u092D\u0917 %{count} \u0918\u0902\u091F\u093E"
        },
        about_x_months: {
          one: "\u0932\u0917 - \u092D\u0917 %{count} \u092E\u0939\u0940\u0928\u093E",
          other: "\u0932\u0917 - \u092D\u0917 %{count} \u092E\u0939\u0940\u0928\u093E"
        },
        about_x_years: {
          one: "\u0932\u0917 - \u092D\u0917 %{count} \u0938\u093E\u0932",
          other: "\u0932\u0917 - \u092D\u0917 %{count} \u0938\u093E\u0932"
        },
        almost_x_years: {
          one: "\u0932\u0917 - \u092D\u0917 \u090F\u0915 \u0938\u093E\u0932",
          other: "\u0932\u0917 - \u092D\u0917 %{count} \u0938\u093E\u0932"
        },
        half_a_minute: "\u090F\u0915 \u0906\u0927\u093E \u092E\u093F\u0928\u091F",
        less_than_x_minutes: {
          one: "\u090F\u0915 \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E",
          other: "%{count} \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E"
        },
        less_than_x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092E",
          other: "%{count}  \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092E"
        },
        over_x_years: {
          one: "\u090F\u0915 \u0938\u093E\u0932 \u0915\u0947 \u090A\u092A\u0930",
          other: "%{count} \u0938\u093E\u0932 \u0915\u0947 \u090A\u092A\u0930"
        },
        x_days: {
          one: "\u090F\u0915 \u0926\u093F\u0928",
          other: "%{count} \u0926\u093F\u0928"
        },
        x_minutes: {
          one: "\u090F\u0915 \u092E\u093F\u0928\u091F",
          other: "%{count} \u092E\u093F\u0928\u091F"
        },
        x_months: {
          one: "\u090F\u0915 \u092E\u0939\u0940\u0928\u093E",
          other: "%{count} \u092E\u0939\u0940\u0928\u093E"
        },
        x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0902\u0921",
          other: "%{count} \u0938\u0947\u0915\u0902\u0921"
        }
      },
      prompts: {
        day: "\u0926\u093F\u0928",
        hour: "\u0918\u0902\u091F\u093E",
        minute: "\u0915\u094D\u0937\u0923",
        month: "\u092E\u093E\u0939",
        second: "\u0938\u0947\u0915\u0902\u0921",
        year: "\u0935\u0930\u094D\u0937"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0939\u094B\u0928\u093E \u0938\u094D\u0935\u0940\u0915\u093E\u0930 \u0915\u093F\u092F\u093E \u091C\u093E\u0928\u093E \u0906\u0935\u0936\u094D\u092F\u0915",
        blank: "\u0916\u093E\u0932\u0940 \u0928\u0939\u0940\u0902 \u0915\u093F\u092F\u093E \u091C\u093E \u0938\u0915\u0924\u093E",
        confirmation: "\u092A\u0941\u0937\u094D\u091F\u093F\u0915\u0930\u0923 \u092E\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093E\u0924\u093E",
        empty: "\u0916\u093E\u0932\u0940 \u0928\u0939\u0940\u0902 \u0915\u093F\u092F\u093E \u091C\u093E \u0938\u0915\u0924\u093E",
        equal_to: "%{count} \u0915\u0947 \u0932\u093F\u090F \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        even: "\u0938\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        exclusion: "\u0906\u0930\u0915\u094D\u0937\u093F\u0924 \u0939\u0948",
        greater_than: "%{count} \u0938\u0947 \u0905\u0927\u093F\u0915 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        greater_than_or_equal_to: "%{count} \u0938\u0947 \u092C\u0921\u093C\u093E \u092F\u093E \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u0906\u0935\u0936\u094D\u092F\u0915 \u0939\u0948",
        inclusion: "\u0938\u0942\u091A\u0940 \u092E\u0947\u0902 \u0936\u093E\u092E\u093F\u0932 \u0928\u0939\u0940\u0902 \u0939\u0948",
        invalid: "\u0905\u0935\u0948\u0927 \u0939\u0948",
        less_than: "%{count} \u0938\u0947 \u0915\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        less_than_or_equal_to: "%{count} \u0938\u0947 \u0915\u092E \u092F\u093E \u092C\u0930\u093E\u092C\u0930 \u0939\u094B\u0928\u093E \u0906\u0935\u0936\u094D\u092F\u0915 \u0939\u0948",
        not_a_number: "\u0915\u094B\u0908 \u0938\u0902\u0916\u094D\u092F\u093E \u0928\u0939\u0940\u0902 \u0939\u0948",
        not_an_integer: "\u090F\u0915 \u092A\u0942\u0930\u094D\u0923\u093E\u0902\u0915 \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        odd: "\u0935\u093F\u0937\u092E \u0939\u094B\u0928\u093E \u091A\u093E\u0939\u093F\u090F",
        taken: "\u092A\u0939\u0932\u0947 \u0939\u0940 \u0932\u0947 \u0932\u093F\u092F\u093E \u0917\u092F\u093E \u0939\u0948",
        too_long: "\u092C\u0939\u0941\u0924 \u0932\u0902\u092C\u093E \u0939\u0948 (\u0905\u0927\u093F\u0915\u0924\u092E %{count} \u0905\u0915\u094D\u0937\u0930\u094B\u0902 \u0939\u0948)",
        too_short: "\u092C\u0939\u0941\u0924 \u091B\u094B\u091F\u093E \u0939\u0948 (\u0928\u094D\u092F\u0942\u0928\u0924\u092E %{count} \u0905\u0915\u094D\u0937\u0930\u094B\u0902 \u0939\u0948)",
        wrong_length: "\u0917\u0932\u0924 \u0932\u0902\u092C\u093E\u0908 \u0939\u0948 (%{count} \u0935\u0930\u094D\u0923 \u0935\u093E\u0932\u0947 \u0939\u094B\u0928\u0947 \u091A\u093E\u0939\u093F\u090F)"
      },
      template: {
        body: "\u0935\u0939\u093E\u0901 \u0928\u093F\u092E\u094D\u0928\u0932\u093F\u0916\u093F\u0924 \u0915\u094D\u0937\u0947\u0924\u094D\u0930\u094B\u0902 \u0915\u0947 \u0938\u093E\u0925 \u0938\u092E\u0938\u094D\u092F\u093E\u0913\u0902 \u0930\u0939\u0947 \u0925\u0947:",
        header: {
          one: "\u090F\u0915 \u0924\u094D\u0930\u0941\u091F\u093F \u0938\u0939\u0947\u091C\u0947 \u091C\u093E\u0928\u0947 \u0938\u0947 \u0907\u0938 %{model} \u0915\u094B \u0928\u093F\u0937\u093F\u0926\u094D\u0927",
          other: "%{count} \u0924\u094D\u0930\u0941\u091F\u093F\u092F\u094B\u0902 \u0915\u094B \u0938\u0939\u0947\u091C\u0947 \u091C\u093E\u0928\u0947 \u0938\u0947 \u0907\u0938 %{model} \u0928\u093F\u0937\u093F\u0926\u094D\u0927"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0915\u0943\u092A\u092F\u093E \u091A\u0941\u0928\u0947\u0902"
      },
      submit: {
        create: "\u092C\u0928\u093E\u090F\u0901 %{model}",
        submit: "\u0938\u0939\u0947\u091C\u0947\u0902 %{model}",
        update: "\u0905\u0926\u094D\u092F\u0924\u0928 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0905\u0930\u092C",
            million: "\u092E\u093F\u0932\u094D\u0932\u093F\u0913\u0902\u0928",
            quadrillion: "\u0915\u0930\u094B\u0921\u093C \u0936\u0902\u0916",
            thousand: "\u0939\u091C\u093C\u093E\u0930",
            trillion: "\u0916\u0930\u092C",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0914\u0930 ",
        two_words_connector: " \u0914\u0930 ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var hr = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validacija nije uspjela: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Nije mogu\u0107e izbrisati zapis jer postoje ovisni %{record}",
            has_one: "Nije mogu\u0107e izbrisati zapis jer postoji ovisan %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "ned.",
        "pon.",
        "uto.",
        "sri.",
        "\u010Det.",
        "pet.",
        "sub."
      ],
      abbr_month_names: [
        null,
        "sij.",
        "velj.",
        "o\u017Eu.",
        "tra.",
        "svi.",
        "lip.",
        "srp.",
        "kol.",
        "ruj.",
        "lis.",
        "stu.",
        "pro."
      ],
      day_names: [
        "nedjelja",
        "ponedjeljak",
        "utorak",
        "srijeda",
        "\u010Detvrtak",
        "petak",
        "subota"
      ],
      formats: {
        default: "%d.%m.%Y.",
        long: "%e. %B %Y.",
        short: "%e.%-m."
      },
      month_names: [
        null,
        "sije\u010Dnja",
        "velja\u010De",
        "o\u017Eujka",
        "travnja",
        "svibnja",
        "lipnja",
        "srpnja",
        "kolovoza",
        "rujna",
        "listopada",
        "studenoga",
        "prosinca"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "oko %{count} sata",
          many: "oko %{count} sati",
          one: "oko %{count} sat",
          other: "oko %{count} sati"
        },
        about_x_months: {
          few: "oko %{count} mjeseca",
          many: "oko %{count} mjeseci",
          one: "oko %{count} mjesec",
          other: "oko %{count} mjeseci"
        },
        about_x_years: {
          few: "oko %{count} godine",
          many: "oko %{count} godina",
          one: "oko %{count} godine",
          other: "oko %{count} godina"
        },
        almost_x_years: {
          few: "skoro %{count} godine",
          many: "skoro %{count} godina",
          one: "skoro %{count} godina",
          other: "skoro %{count} godina"
        },
        half_a_minute: "pola minute",
        less_than_x_minutes: {
          few: "manje od %{count} minute",
          many: "manje od %{count} minuta",
          one: "manje od %{count} minute",
          other: "manje od %{count} minuta"
        },
        less_than_x_seconds: {
          few: "manje od %{count} sekunde",
          many: "manje od %{count} sekundi",
          one: "manje od %{count} sekunde",
          other: "manje od %{count} sekundi"
        },
        over_x_years: {
          few: "preko %{count} godine",
          many: "preko %{count} godina",
          one: "preko %{count} godine",
          other: "preko %{count} godina"
        },
        x_days: {
          few: "%{count} dana",
          many: "%{count} dana",
          one: "%{count} dan",
          other: "%{count} dana"
        },
        x_minutes: {
          few: "%{count} minute",
          many: "%{count} minuta",
          one: "%{count} minuta",
          other: "%{count} minuta"
        },
        x_months: {
          few: "%{count} mjeseca",
          many: "%{count} mjeseci",
          one: "%{count} mjesec",
          other: "%{count} mjeseci"
        },
        x_seconds: {
          few: "%{count} sekunde",
          many: "%{count} sekundi",
          one: "%{count} sekunda",
          other: "%{count} sekundi"
        },
        x_years: {
          few: "%{count} godine",
          many: "%{count} godina",
          one: "%{count} godina",
          other: "%{count} godina"
        }
      },
      prompts: {
        day: "Dan",
        hour: "Sat",
        minute: "Minuta",
        month: "Mjesec",
        second: "Sekunde",
        year: "Godina"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mora biti prihva\u0107en",
        blank: "ne smije biti prazan",
        confirmation: "se ne sla\u017Ee sa svojom potvrdom",
        empty: "ne smije biti prazan",
        equal_to: "mora biti jednak %{count}",
        even: "mora biti paran",
        exclusion: "je rezerviran",
        greater_than: "mora biti ve\u0107i od %{count}",
        greater_than_or_equal_to: "mora biti ve\u0107i ili jednak %{count}",
        inclusion: "nije u listi",
        invalid: "nije ispravan",
        less_than: "mora biti manji od %{count}",
        less_than_or_equal_to: "mora biti manji ili jednak %{count}",
        model_invalid: "Validacija nije uspjela: %{errors}",
        not_a_number: "nije broj",
        not_an_integer: "nije cijeli broj",
        odd: "mora biti neparan",
        other_than: "mora biti razli\u010Dit od %{count}",
        present: "mora biti prazan",
        required: "mora biti unesen",
        taken: "je ve\u0107 zauzet",
        too_long: {
          few: "je preduga\u010Dak (maksimum je %{count} znaka)",
          many: "je preduga\u010Dak (maksimum je %{count} znakova)",
          one: "je preduga\u010Dak (maksimum je %{count} znak)",
          other: "je preduga\u010Dak (maksimum je %{count} znakova)"
        },
        too_short: {
          few: "je prekratak (minimum je %{count} znaka)",
          many: "je prekratak (minimum je %{count} znakova)",
          one: "je prekratak (minimum je %{count} znak)",
          other: "je prekratak (minimum je %{count} znakova)"
        },
        wrong_length: {
          few: "nije odgovaraju\u0107e duljine (treba biti %{count} znaka)",
          many: "nije odgovaraju\u0107e duljine (treba biti %{count} znakova)",
          one: "nije odgovaraju\u0107e duljine (treba biti %{count} znak)",
          other: "nije odgovaraju\u0107e duljine (treba biti %{count} znakova)"
        }
      },
      template: {
        body: "Sljede\u0107a polja su neispravno popunjena:",
        header: {
          few: "%{count} gre\u0161ke su sprije\u010Dile da se spremi %{model}",
          many: "%{count} gre\u0161aka je sprije\u010Dilo da se spremi %{model}",
          one: "%{count} gre\u0161ka je sprije\u010Dila da se spremi %{model}",
          other: "%{count} gre\u0161aka je sprije\u010Dilo da se spremi %{model}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Izaberite"
      },
      submit: {
        create: "Stvori %{model}",
        submit: "Spremi %{model}",
        update: "Izmijeni %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kn"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milijarda",
            million: "milijun",
            quadrillion: "bilijarda",
            thousand: "tisu\u0107a",
            trillion: "bilijun",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "bajta",
              many: "bajtova",
              one: "bajt",
              other: "bajtova"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " i ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "AM",
      formats: {
        default: "%d.%m.%Y. %H:%M:%S",
        long: "%e. %B %Y. %H:%M",
        short: "%e.%-m. %k:%M"
      },
      pm: "PM"
    }
  };
  var hsb = {
    i18n: {
      plural: {
        keys: [
          "one",
          "two",
          "few",
          "other"
        ]
      }
    }
  };
  var hu = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Sikertelen valid\xE1l\xE1s %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "v.",
        "h.",
        "k.",
        "sze.",
        "cs.",
        "p.",
        "szo."
      ],
      abbr_month_names: [
        null,
        "jan.",
        "febr.",
        "m\xE1rc.",
        "\xE1pr.",
        "m\xE1j.",
        "j\xFAn.",
        "j\xFAl.",
        "aug.",
        "szept.",
        "okt.",
        "nov.",
        "dec."
      ],
      day_names: [
        "vas\xE1rnap",
        "h\xE9tf\u0151",
        "kedd",
        "szerda",
        "cs\xFCt\xF6rt\xF6k",
        "p\xE9ntek",
        "szombat"
      ],
      formats: {
        default: "%Y.%m.%d.",
        long: "%Y. %B %e.",
        short: "%b %e."
      },
      month_names: [
        null,
        "janu\xE1r",
        "febru\xE1r",
        "m\xE1rcius",
        "\xE1prilis",
        "m\xE1jus",
        "j\xFAnius",
        "j\xFAlius",
        "augusztus",
        "szeptember",
        "okt\xF3ber",
        "november",
        "december"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "kb. %{count} \xF3r\xE1ja",
          other: "kb. %{count} \xF3r\xE1ja"
        },
        about_x_months: {
          one: "kb. %{count} h\xF3napja",
          other: "kb. %{count} h\xF3napja"
        },
        about_x_years: {
          one: "kb. %{count} \xE9ve",
          other: "kb. %{count} \xE9ve"
        },
        almost_x_years: {
          one: "majdnem %{count} \xE9ve",
          other: "majdnem %{count} \xE9ve"
        },
        half_a_minute: "f\xE9l perce",
        less_than_x_minutes: {
          one: "kevesebb, mint %{count} perce",
          other: "kevesebb, mint %{count} perce"
        },
        less_than_x_seconds: {
          one: "kevesebb, mint %{count} m\xE1sodperce",
          other: "kevesebb, mint %{count} m\xE1sodperce"
        },
        over_x_years: {
          one: "t\xF6bb, mint %{count} \xE9ve",
          other: "t\xF6bb, mint %{count} \xE9ve"
        },
        x_days: {
          one: "%{count} napja",
          other: "%{count} napja"
        },
        x_minutes: {
          one: "%{count} perce",
          other: "%{count} perce"
        },
        x_months: {
          one: "%{count} h\xF3napja",
          other: "%{count} h\xF3napja"
        },
        x_seconds: {
          one: "%{count} m\xE1sodperce",
          other: "%{count} m\xE1sodperce"
        }
      },
      prompts: {
        day: "Nap",
        hour: "\xD3ra",
        minute: "Perc",
        month: "H\xF3nap",
        second: "M\xE1sodperc",
        year: "\xC9v"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "nincs elfogadva",
        blank: "nincs megadva",
        confirmation: "nem egyezik",
        empty: "nincs megadva",
        equal_to: "pontosan %{count} kell legyen",
        even: "p\xE1ros kell legyen",
        exclusion: "nem el\xE9rhet\u0151",
        greater_than: "nagyobb kell legyen, mint %{count}",
        greater_than_or_equal_to: "legal\xE1bb %{count} kell legyen",
        inclusion: "nincs a list\xE1ban",
        invalid: "nem megfelel\u0151",
        less_than: "kevesebb, mint %{count} kell legyen",
        less_than_or_equal_to: "legfeljebb %{count} lehet",
        not_a_number: "nem sz\xE1m",
        not_an_integer: "eg\xE9sz sz\xE1mnak kell lennie",
        odd: "p\xE1ratlan kell legyen",
        taken: "m\xE1r foglalt",
        too_long: "t\xFAl hossz\xFA (nem lehet t\xF6bb %{count} karaktern\xE9l)",
        too_short: "t\xFAl r\xF6vid (legal\xE1bb %{count} karakter kell legyen)",
        wrong_length: "nem megfelel\u0151 hossz\xFAs\xE1g\xFA (%{count} karakter sz\xFCks\xE9ges)"
      },
      template: {
        body: "Probl\xE9m\xE1s mez\u0151k:",
        header: {
          one: "%{count} hiba miatt nem menthet\u0151 a k\xF6vetkez\u0151: %{model}",
          other: "%{count} hiba miatt nem menthet\u0151 a k\xF6vetkez\u0151: %{model}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "V\xE1lasszon"
      },
      submit: {
        create: "\xDAj %{model}",
        submit: "%{model} ment\xE9se",
        update: "%{model} m\xF3dos\xEDt\xE1sa"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C1: "A",
          \u00C9: "E",
          \u00CD: "I",
          \u00D3: "O",
          \u00D6: "O",
          \u00DA: "U",
          \u00DC: "U",
          \u00E1: "a",
          \u00E9: "e",
          \u00ED: "i",
          \u00F3: "o",
          \u00F6: "o",
          \u00FA: "u",
          \u00FC: "u",
          \u0150: "O",
          \u0151: "o",
          \u0170: "U",
          \u0171: "u"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "",
          format: "%n %u",
          precision: 0,
          separator: ",",
          significant: true,
          strip_insignificant_zeros: true,
          unit: "Ft"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        separator: ",",
        significant: true,
        strip_insignificant_zeros: true
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "milli\xE1rd",
            million: "milli\xF3",
            quadrillion: "billi\xE1rd",
            thousand: "ezer",
            trillion: "billi\xF3",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "b\xE1jt",
              other: "b\xE1jt"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \xE9s ",
        two_words_connector: " \xE9s ",
        words_connector: ", "
      }
    },
    time: {
      am: "de.",
      formats: {
        default: "%Y. %b %e., %H:%M",
        long: "%Y. %B %e., %A, %H:%M",
        short: "%b %e., %H:%M"
      },
      pm: "du."
    }
  };
  var id = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validasi gagal: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Tidak bisa menghapus record karena terdapat %{record} yang bergantung",
            has_one: "Tidak bisa menghapus record karena terdapat satu %{record} yang bergantung"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Min",
        "Sen",
        "Sel",
        "Rab",
        "Kam",
        "Jum",
        "Sab"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "Mei",
        "Jun",
        "Jul",
        "Agu",
        "Sep",
        "Okt",
        "Nov",
        "Des"
      ],
      day_names: [
        "Minggu",
        "Senin",
        "Selasa",
        "Rabu",
        "Kamis",
        "Jumat",
        "Sabtu"
      ],
      formats: {
        default: "%d %B %Y",
        long: "%A, %d %B %Y",
        short: "%d.%m.%Y"
      },
      month_names: [
        null,
        "Januari",
        "Februari",
        "Maret",
        "April",
        "Mei",
        "Juni",
        "Juli",
        "Agustus",
        "September",
        "Oktober",
        "November",
        "Desember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "sekitar satu jam",
          other: "sekitar %{count} jam"
        },
        about_x_months: {
          one: "sekitar sebulan",
          other: "sekitar %{count} bulan"
        },
        about_x_years: {
          one: "sekitar setahun",
          other: "sekitar %{count} tahun"
        },
        almost_x_years: {
          one: "hampir setahun",
          other: "hampir %{count} tahun"
        },
        half_a_minute: "setengah menit",
        less_than_x_minutes: {
          one: "kurang dari %{count} menit",
          other: "kurang dari %{count} menit",
          zero: "kurang dari 1 menit"
        },
        less_than_x_seconds: {
          one: "kurang dari %{count} detik",
          other: "kurang dari %{count} detik",
          zero: "kurang dari 1 detik"
        },
        over_x_years: {
          one: "lebih dari setahun",
          other: "lebih dari %{count} tahun"
        },
        x_days: {
          one: "sehari",
          other: "%{count} hari"
        },
        x_minutes: {
          one: "satu menit",
          other: "%{count} menit"
        },
        x_months: {
          one: "sebulan",
          other: "%{count} bulan"
        },
        x_seconds: {
          one: "satu detik",
          other: "%{count} detik"
        }
      },
      prompts: {
        day: "Hari",
        hour: "Jam",
        minute: "Menit",
        month: "Bulan",
        second: "Detik",
        year: "Tahun"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "harus diterima",
        blank: "tidak boleh kosong",
        confirmation: "tidak sesuai dengan %{attribute}",
        empty: "tidak boleh kosong",
        equal_to: "harus sama dengan %{count}",
        even: "harus genap",
        exclusion: "sudah digunakan",
        greater_than: "harus lebih besar dari %{count}",
        greater_than_or_equal_to: "harus sama atau lebih besar dari %{count}",
        inclusion: "tidak termasuk",
        invalid: "tidak valid",
        less_than: "harus lebih kecil dari %{count}",
        less_than_or_equal_to: "harus sama atau lebih kecil dari %{count}",
        model_invalid: "Validasi gagal: %{errors}",
        not_a_number: "bukan angka",
        not_an_integer: "harus bilangan bulat",
        odd: "harus ganjil",
        other_than: "harus selain %{count}",
        present: "harus kosong",
        required: "harus ada",
        taken: "sudah digunakan",
        too_long: {
          one: "terlalu panjang (maksimum %{count} karakter)",
          other: "terlalu panjang (maksimum %{count} karakter)"
        },
        too_short: {
          one: "terlalu pendek (minimum %{count} karakter)",
          other: "terlalu pendek (minimum %{count} karakter)"
        },
        wrong_length: {
          one: "jumlah karakter salah (seharusnya %{count} karakter)",
          other: "jumlah karakter salah (seharusnya %{count} karakter)"
        }
      },
      template: {
        body: "Ada masalah dengan field berikut:",
        header: {
          one: "%{count} kesalahan mengakibatkan %{model} ini tidak bisa disimpan",
          other: "%{count} kesalahan mengakibatkan %{model} ini tidak bisa disimpan"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Silakan pilih"
      },
      submit: {
        create: "Buat %{model}",
        submit: "Simpan %{model}",
        update: "Perbarui %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "Rp"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliar",
            million: "Juta",
            quadrillion: "Quadriliun",
            thousand: "Ribu",
            trillion: "Triliun",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", dan ",
        two_words_connector: " dan ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H.%M.%S %z",
        long: "%d %B %Y %H.%M",
        short: "%d %b %H.%M"
      },
      pm: "pm"
    }
  };
  var is = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Villur: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Ekki h\xE6gt a\xF0 ey\xF0a f\xE6rslur \xFEv\xED %{record} sem h\xFAn er h\xE1\xF0 er til",
            has_one: "Ekki h\xE6gt a\xF0 ey\xF0a f\xE6rslu \xFEv\xED %{record} sem h\xFAn er h\xE1\xF0 er til"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "sun",
        "m\xE1n",
        "\xFEri",
        "mi\xF0",
        "fim",
        "f\xF6s",
        "lau"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "ma\xED",
        "j\xFAn",
        "j\xFAl",
        "\xE1g\xFA",
        "sep",
        "okt",
        "n\xF3v",
        "des"
      ],
      day_names: [
        "sunnudaginn",
        "m\xE1nudaginn",
        "\xFEri\xF0judaginn",
        "mi\xF0vikudaginn",
        "fimmtudaginn",
        "f\xF6studaginn",
        "laugardaginn"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "jan\xFAar",
        "febr\xFAar",
        "mars",
        "apr\xEDl",
        "ma\xED",
        "j\xFAn\xED",
        "j\xFAl\xED",
        "\xE1g\xFAst",
        "september",
        "okt\xF3ber",
        "n\xF3vember",
        "desember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "u.\xFE.b. %{count} klukkustund",
          other: "u.\xFE.b. %{count} klukkustundir"
        },
        about_x_months: {
          one: "u.\xFE.b. %{count} m\xE1nu\xF0ur",
          other: "u.\xFE.b. %{count} m\xE1nu\xF0ir"
        },
        about_x_years: {
          one: "u.\xFE.b. %{count} \xE1r",
          other: "u.\xFE.b. %{count} \xE1r"
        },
        almost_x_years: {
          one: "n\xE6stum %{count} \xE1r",
          other: "n\xE6stum %{count} \xE1r"
        },
        half_a_minute: "h\xE1lf m\xEDn\xFAta",
        less_than_x_minutes: {
          one: "minna en %{count} m\xEDn\xFAta",
          other: "minna en %{count} m\xEDn\xFAtur"
        },
        less_than_x_seconds: {
          one: "minna en %{count} sek\xFAnda",
          other: "minna en %{count} sek\xFAndur"
        },
        over_x_years: {
          one: "meira en %{count} \xE1r",
          other: "meira en %{count} \xE1r"
        },
        x_days: {
          one: "%{count} dagur",
          other: "%{count} dagar"
        },
        x_minutes: {
          one: "%{count} m\xEDn\xFAta",
          other: "%{count} m\xEDn\xFAtur"
        },
        x_months: {
          one: "%{count} m\xE1nu\xF0ur",
          other: "%{count} m\xE1nu\xF0ir"
        },
        x_seconds: {
          one: "%{count} sek\xFAnda",
          other: "%{count} sek\xFAndur"
        }
      },
      prompts: {
        day: "Dagur",
        hour: "Klukkustund",
        minute: "M\xEDn\xFAta",
        month: "M\xE1nu\xF0ur",
        second: "Sek\xFAnda",
        year: "\xC1r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\xFEarf a\xF0 vera teki\xF0 gilt",
        blank: "m\xE1 ekki vera autt",
        confirmation: "er ekki jafngilt sta\xF0festingunni",
        empty: "m\xE1 ekki vera t\xF3mt",
        equal_to: "\xFEarf a\xF0 vera jafngilt %{count}",
        even: "\xFEarf a\xF0 vera sl\xE9tt tala",
        exclusion: "er fr\xE1teki\xF0",
        greater_than: "\xFEarf a\xF0 vera st\xE6rri en %{count}",
        greater_than_or_equal_to: "\xFEarf a\xF0 vera st\xE6rri en e\xF0a jafngilt %{count}",
        inclusion: "er ekki \xED listanum",
        invalid: "er \xF3gilt",
        less_than: "\xFEarf a\xF0 vera minna en %{count}",
        less_than_or_equal_to: "\xFEarf a\xF0 vera minna en e\xF0a jafngilt %{count}",
        not_a_number: "er ekki tala",
        not_an_integer: "\xFEarf a\xF0 vera heiltala",
        odd: "\xFEarf a\xF0 vera oddatala",
        other_than: "ver\xF0ur a\xF0 vera anna\xF0 en %{count}",
        present: "ver\xF0ur a\xF0 vera autt",
        taken: "er \xFEegar \xED notkun",
        too_long: {
          one: "er of langt (m\xE1 mest vera %{count} stafur)",
          other: "er of langt (m\xE1 mest vera %{count} stafir)"
        },
        too_short: {
          one: "er of stutt (m\xE1 minnst vera %{count} stafur)",
          other: "er of stutt (m\xE1 minnst vera %{count} stafir)"
        },
        wrong_length: {
          one: "er af rangri lengd (m\xE1 mest vera %{count} stafur)",
          other: "er af rangri lengd (m\xE1 mest vera %{count} stafir)"
        }
      },
      template: {
        body: "Villur fundust \xED eftirfarandi d\xE1lkum:",
        header: {
          one: "Ekki var h\xE6gt a\xF0 vista %{model} vegna einnar villu.",
          other: "Ekki var h\xE6gt a\xF0 vista %{model} vegna %{count} villna."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Veldu"
      },
      submit: {
        create: "B\xFAa til %{model}",
        submit: "Vista %{model}",
        update: "Uppf\xE6ra %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kr."
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "milljar\xF0ur",
              other: "milljar\xF0ar"
            },
            million: {
              one: "millj\xF3n",
              other: "millj\xF3nir"
            },
            quadrillion: {
              one: "billjar\xF0ur",
              other: "billjar\xF0ar"
            },
            thousand: "\xFE\xFAsund",
            trillion: {
              one: "billj\xF3n",
              other: "billj\xF3nir"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "b\xE6ti",
              other: "b\xE6ti"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " og ",
        two_words_connector: " og ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A %e. %B %Y kl. %H:%M",
        long: "%A %e. %B %Y kl. %H:%M",
        short: "%e. %B kl. %H:%M"
      },
      pm: "pm"
    }
  };
  var it = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validazione fallita: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Il record non pu\xF2 essere cancellato perch\xE8 esistono %{record} dipendenti",
            has_one: "Il record non pu\xF2 essere cancellato perch\xE8 esiste un %{record} dipendente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "mer",
        "gio",
        "ven",
        "sab"
      ],
      abbr_month_names: [
        null,
        "gen",
        "feb",
        "mar",
        "apr",
        "mag",
        "giu",
        "lug",
        "ago",
        "set",
        "ott",
        "nov",
        "dic"
      ],
      day_names: [
        "domenica",
        "luned\xEC",
        "marted\xEC",
        "mercoled\xEC",
        "gioved\xEC",
        "venerd\xEC",
        "sabato"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "gennaio",
        "febbraio",
        "marzo",
        "aprile",
        "maggio",
        "giugno",
        "luglio",
        "agosto",
        "settembre",
        "ottobre",
        "novembre",
        "dicembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "circa un'ora",
          other: "circa %{count} ore"
        },
        about_x_months: {
          one: "circa un mese",
          other: "circa %{count} mesi"
        },
        about_x_years: {
          one: "circa un anno",
          other: "circa %{count} anni"
        },
        almost_x_years: {
          one: "quasi un anno",
          other: "quasi %{count} anni"
        },
        half_a_minute: "mezzo minuto",
        less_than_x_minutes: {
          one: "meno di un minuto",
          other: "meno di %{count} minuti"
        },
        less_than_x_seconds: {
          one: "meno di un secondo",
          other: "meno di %{count} secondi"
        },
        over_x_years: {
          one: "oltre un anno",
          other: "oltre %{count} anni"
        },
        x_days: {
          one: "%{count} giorno",
          other: "%{count} giorni"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minuti"
        },
        x_months: {
          one: "%{count} mese",
          other: "%{count} mesi"
        },
        x_seconds: {
          one: "%{count} secondo",
          other: "%{count} secondi"
        },
        x_years: {
          one: "%{count} anno",
          other: "%{count} anni"
        }
      },
      prompts: {
        day: "Giorno",
        hour: "Ora",
        minute: "Minuto",
        month: "Mese",
        second: "Secondo",
        year: "Anno"
      }
    },
    devise: {
      failure: {
        expired: "Il tuo account \xE8 stato bloccato per inattivit\xE0. Contatta l amministratore del sito.",
        session_limited: "Hai effettuato l accesso in un altro browser. Fai nuovamente l accesso per connetterti in questo."
      },
      invalid_captcha: "Il captcha inserito non \xE8 valido!",
      invalid_security_question: "La risposta alla domanda di sicurezza non \xE8 valida.",
      paranoid_verification_code: {
        show: {
          submit: "Invia",
          submit_verification_code: "Invia codice di verifica",
          verification_code: "Codice di verifica"
        },
        updated: "Codice di verifica accettato"
      },
      paranoid_verify: {
        code_required: "Inserisci il codice fornito dal nostro team di supporto"
      },
      password_expired: {
        change_required: "La tua password \xE8 scaduta. Si prega di rinnovarla!",
        show: {
          change_my_password: "Cambia la mia password",
          current_password: "Password attuale",
          new_password: "Nuova password",
          new_password_confirmation: "Conferma nuova password",
          renew_your_password: "Rinnova la tua password"
        },
        updated: "La tua nuova password \xE8 stata salvata."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "deve essere accettata",
        blank: "non pu\xF2 essere lasciato in bianco",
        confirmation: "non coincide con %{attribute}",
        empty: "non pu\xF2 essere vuoto",
        equal_to: "deve essere uguale a %{count}",
        equal_to_current_password: " deve essere differente dalla password corrente!",
        equal_to_email: "deve essere differente dall'email",
        even: "deve essere pari",
        exclusion: "\xE8 riservato",
        greater_than: "deve essere maggiore di %{count}",
        greater_than_or_equal_to: "deve essere maggiore o uguale a %{count}",
        inclusion: "non \xE8 compreso tra le opzioni disponibili",
        invalid: "non \xE8 valido",
        less_than: "deve essere minore di %{count}",
        less_than_or_equal_to: "deve essere minore o uguale a %{count}",
        model_invalid: "Validazione fallita: %{errors}",
        not_a_number: "non \xE8 un numero",
        not_an_integer: "non \xE8 un numero intero",
        odd: "deve essere dispari",
        other_than: "devono essere di numero diverso da %{count}",
        password_complexity: {
          digit: {
            one: "deve contenere almeno una cifra",
            other: "deve contenere almeno %{count} cifre"
          },
          lower: {
            one: "deve contenere almeno una lettera minuscola",
            other: "deve contenere almeno %{count} lettere minuscole"
          },
          symbol: {
            one: "deve contenere almeno un simbolo di punteggiatura o un simbolo speciale",
            other: "deve contenere almeno %{count} tra simboli di punteggiatura e simboli speciali"
          },
          upper: {
            one: "deve contenere almeno una lettera maiuscola",
            other: "deve contenere almeno %{count} lettere maiuscole"
          }
        },
        present: "deve essere lasciato in bianco",
        required: "deve esistere",
        taken: "\xE8 gi\xE0 presente",
        taken_in_past: "\xE8 stata gia' utilizzata in passato!",
        too_long: {
          one: "\xE8 troppo lungo (il massimo \xE8 %{count} carattere)",
          other: "\xE8 troppo lungo (il massimo \xE8 %{count} caratteri)"
        },
        too_short: {
          one: "\xE8 troppo corto (il minimo \xE8 %{count} carattere)",
          other: "\xE8 troppo corto (il minimo \xE8 %{count} caratteri)"
        },
        wrong_length: {
          one: "\xE8 della lunghezza sbagliata (deve essere di %{count} carattere)",
          other: "\xE8 della lunghezza sbagliata (deve essere di %{count} caratteri)"
        }
      },
      template: {
        body: "Ricontrolla i seguenti campi:",
        header: {
          one: "Non posso salvare questo %{model}: %{count} errore",
          other: "Non posso salvare questo %{model}: %{count} errori."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Seleziona..."
      },
      submit: {
        create: "Crea %{model}",
        submit: "Invia %{model}",
        update: "Aggiorna %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliardi",
            million: "Milioni",
            quadrillion: "Biliardi",
            thousand: "Mila",
            trillion: "Bilioni",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var it_CH = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validazione fallita: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Il record non pu\xF2 essere cancellato perch\xE8 esistono %{record} dipendenti",
            has_one: "Il record non pu\xF2 essere cancellato perch\xE8 esiste un %{record} dipendente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Dom",
        "Lun",
        "Mar",
        "Mer",
        "Gio",
        "Ven",
        "Sab"
      ],
      abbr_month_names: [
        null,
        "Gen",
        "Feb",
        "Mar",
        "Apr",
        "Mag",
        "Giu",
        "Lug",
        "Ago",
        "Set",
        "Ott",
        "Nov",
        "Dic"
      ],
      day_names: [
        "Domenica",
        "Luned\xEC",
        "Marted\xEC",
        "Mercoled\xEC",
        "Gioved\xEC",
        "Venerd\xEC",
        "Sabato"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Gennaio",
        "Febbraio",
        "Marzo",
        "Aprile",
        "Maggio",
        "Giugno",
        "Luglio",
        "Agosto",
        "Settembre",
        "Ottobre",
        "Novembre",
        "Dicembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "circa un'ora",
          other: "circa %{count} ore"
        },
        about_x_months: {
          one: "circa un mese",
          other: "circa %{count} mesi"
        },
        about_x_years: {
          one: "circa un anno",
          other: "circa %{count} anni"
        },
        almost_x_years: {
          one: "circa %{count} anno",
          other: "circa %{count} anni"
        },
        half_a_minute: "mezzo minuto",
        less_than_x_minutes: {
          one: "meno di un minuto",
          other: "meno di %{count} minuti"
        },
        less_than_x_seconds: {
          one: "meno di un secondo",
          other: "meno di %{count} secondi"
        },
        over_x_years: {
          one: "oltre un anno",
          other: "oltre %{count} anni"
        },
        x_days: {
          one: "%{count} giorno",
          other: "%{count} giorni"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minuti"
        },
        x_months: {
          one: "%{count} mese",
          other: "%{count} mesi"
        },
        x_seconds: {
          one: "%{count} secondo",
          other: "%{count} secondi"
        },
        x_years: {
          one: "%{count} anno",
          other: "%{count} anni"
        }
      },
      prompts: {
        day: "Giorno",
        hour: "Ora",
        minute: "Minuto",
        month: "Mese",
        second: "Secondi",
        year: "Anno"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "deve essere accettata",
        blank: "non pu\xF2 essere lasciato in bianco",
        confirmation: "non coincide con %{attribute}",
        empty: "non pu\xF2 essere vuoto",
        equal_to: "deve essere uguale a %{count}",
        even: "deve essere pari",
        exclusion: "\xE8 riservato",
        greater_than: "deve essere superiore a %{count}",
        greater_than_or_equal_to: "deve essere superiore o uguale a %{count}",
        inclusion: "non \xE8 incluso nella lista",
        invalid: "non \xE8 valido",
        less_than: "deve essere meno di %{count}",
        less_than_or_equal_to: "deve essere meno o uguale a %{count}",
        model_invalid: "Validazione fallita: %{errors}",
        not_a_number: "non \xE8 un numero",
        not_an_integer: "non \xE8 un intero",
        odd: "deve essere dispari",
        other_than: "devono essere di numero diverso da %{count}",
        present: "deve essere lasciato in bianco",
        required: "deve esistere",
        taken: "\xE8 gi\xE0 presente",
        too_long: {
          one: "\xE8 troppo lungo (il massimo \xE8 %{count} carattere)",
          other: "\xE8 troppo lungo (il massimo \xE8 %{count} caratteri)"
        },
        too_short: {
          one: "\xE8 troppo corto (il minimo \xE8 %{count} carattere)",
          other: "\xE8 troppo corto (il minimo \xE8 %{count} caratteri)"
        },
        wrong_length: {
          one: "\xE8 della lunghezza sbagliata (deve essere di %{count} carattere)",
          other: "\xE8 della lunghezza sbagliata (deve essere di %{count} caratteri)"
        }
      },
      template: {
        body: "Per favore ricontrolla i seguenti campi:",
        header: {
          one: "Non posso salvare questo %{model}: %{count} errore",
          other: "Non posso salvare questo %{model}: %{count} errori."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Per favore, seleziona"
      },
      submit: {
        create: "Crea %{model}",
        submit: "Invia %{model}",
        update: "Aggiorna %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "'",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "CHF"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliardi",
            million: "Milioni",
            quadrillion: "Biliardi",
            thousand: "Mila",
            trillion: "Bilioni",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var ja = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\u306B\u5931\u6557\u3057\u307E\u3057\u305F: %{errors}",
          restrict_dependent_destroy: {
            has_many: "%{record}\u304C\u5B58\u5728\u3057\u3066\u3044\u308B\u306E\u3067\u524A\u9664\u3067\u304D\u307E\u305B\u3093",
            has_one: "%{record}\u304C\u5B58\u5728\u3057\u3066\u3044\u308B\u306E\u3067\u524A\u9664\u3067\u304D\u307E\u305B\u3093"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u65E5",
        "\u6708",
        "\u706B",
        "\u6C34",
        "\u6728",
        "\u91D1",
        "\u571F"
      ],
      abbr_month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      day_names: [
        "\u65E5\u66DC\u65E5",
        "\u6708\u66DC\u65E5",
        "\u706B\u66DC\u65E5",
        "\u6C34\u66DC\u65E5",
        "\u6728\u66DC\u65E5",
        "\u91D1\u66DC\u65E5",
        "\u571F\u66DC\u65E5"
      ],
      formats: {
        default: "%Y/%m/%d",
        long: "%Y\u5E74%m\u6708%d\u65E5(%a)",
        short: "%m/%d"
      },
      month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u7D04%{count}\u6642\u9593",
        about_x_months: "\u7D04%{count}\u30F6\u6708",
        about_x_years: "\u7D04%{count}\u5E74",
        almost_x_years: "%{count}\u5E74\u5F31",
        half_a_minute: "30\u79D2\u524D\u5F8C",
        less_than_x_minutes: "%{count}\u5206\u672A\u6E80",
        less_than_x_seconds: "%{count}\u79D2\u672A\u6E80",
        over_x_years: "%{count}\u5E74\u4EE5\u4E0A",
        x_days: "%{count}\u65E5",
        x_minutes: "%{count}\u5206",
        x_months: "%{count}\u30F6\u6708",
        x_seconds: "%{count}\u79D2",
        x_years: "%{count}\u5E74"
      },
      prompts: {
        day: "\u65E5",
        hour: "\u6642",
        minute: "\u5206",
        month: "\u6708",
        second: "\u79D2",
        year: "\u5E74"
      }
    },
    devise: {
      failure: {
        expired: "\u6D3B\u52D5\u304C\u306A\u304B\u3063\u305F\u305F\u3081\u3001\u3042\u306A\u305F\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u306F\u671F\u9650\u5207\u308C\u3068\u306A\u308A\u307E\u3057\u305F\u3002\u30B5\u30A4\u30C8\u7BA1\u7406\u8005\u306B\u9023\u7D61\u3057\u3066\u304F\u3060\u3055\u3044\u3002",
        session_limited: "\u4ED6\u306E\u30D6\u30E9\u30A6\u30B6\u3067\u30ED\u30B0\u30A4\u30F3\u3055\u308C\u307E\u3057\u305F\u3002\u3053\u306E\u30D6\u30E9\u30A6\u30B6\u3067\u7D9A\u3051\u308B\u5834\u5408\u306F\u3001\u3082\u3046\u4E00\u5EA6\u30B5\u30A4\u30F3\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\u3002"
      },
      invalid_captcha: "\u30AD\u30E3\u30D7\u30C1\u30E3\u5165\u529B\u304C\u4E0D\u6B63\u3067\u3059\u3002",
      invalid_security_question: "\u30BB\u30AD\u30E5\u30EA\u30C6\u30A3\u8CEA\u554F\u306B\u5BFE\u3059\u308B\u56DE\u7B54\u304C\u4E0D\u6B63\u3067\u3059\u3002",
      paranoid_verification_code: {
        show: {
          submit: "\u53C2\u52A0\u3059\u308B",
          submit_verification_code: "\u78BA\u8A8D\u30B3\u30FC\u30C9\u3092\u9001\u4FE1\u3059\u308B",
          verification_code: "\u691C\u8A3C\u30B3\u30FC\u30C9"
        },
        updated: "\u78BA\u8A8D\u30B3\u30FC\u30C9\u3092\u53D7\u3051\u5165\u308C\u307E\u3057\u305F"
      },
      paranoid_verify: {
        code_required: "\u30B5\u30DD\u30FC\u30C8\u30C1\u30FC\u30E0\u306B\u63D0\u4F9B\u3055\u308C\u305F\u8A8D\u8A3C\u30B3\u30FC\u30C9\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002"
      },
      password_expired: {
        change_required: "\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u671F\u9650\u5207\u308C\u3067\u3059\u3002\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u65B0\u3057\u304F\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044\u3002",
        show: {
          change_my_password: "\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5909\u66F4\u3059\u308B",
          current_password: "\u73FE\u5728\u306E\u30D1\u30B9\u30EF\u30FC\u30C9",
          new_password: "\u65B0\u3057\u3044\u30D1\u30B9\u30EF\u30FC\u30C9",
          new_password_confirmation: "\u65B0\u3057\u3044\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u78BA\u8A8D",
          renew_your_password: "\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u66F4\u65B0\u3059\u308B"
        },
        updated: "\u65B0\u3057\u3044\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u4FDD\u5B58\u3055\u308C\u307E\u3057\u305F\u3002"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u3092\u53D7\u8AFE\u3057\u3066\u304F\u3060\u3055\u3044",
        blank: "\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        confirmation: "\u3068%{attribute}\u306E\u5165\u529B\u304C\u4E00\u81F4\u3057\u307E\u305B\u3093",
        empty: "\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        equal_to: "\u306F%{count}\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        equal_to_current_password: "\u306F\u73FE\u5728\u306E\u30D1\u30B9\u30EF\u30FC\u30C9\u3068\u7570\u306A\u308B\u3082\u306E\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",
        equal_to_email: "\u30E1\u30FC\u30EB\u3068\u306F\u7570\u306A\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059",
        even: "\u306F\u5076\u6570\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        exclusion: "\u306F\u4E88\u7D04\u3055\u308C\u3066\u3044\u307E\u3059",
        greater_than: "\u306F%{count}\u3088\u308A\u5927\u304D\u3044\u5024\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        greater_than_or_equal_to: "\u306F%{count}\u4EE5\u4E0A\u306E\u5024\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        in: "\u306F%{count}\u306E\u7BC4\u56F2\u306B\u542B\u3081\u3066\u304F\u3060\u3055\u3044",
        inclusion: "\u306F\u4E00\u89A7\u306B\u3042\u308A\u307E\u305B\u3093",
        invalid: "\u306F\u4E0D\u6B63\u306A\u5024\u3067\u3059",
        less_than: "\u306F%{count}\u3088\u308A\u5C0F\u3055\u3044\u5024\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        less_than_or_equal_to: "\u306F%{count}\u4EE5\u4E0B\u306E\u5024\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        model_invalid: "\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\u306B\u5931\u6557\u3057\u307E\u3057\u305F: %{errors}",
        not_a_number: "\u306F\u6570\u5024\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        not_an_integer: "\u306F\u6574\u6570\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        odd: "\u306F\u5947\u6570\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        other_than: "\u306F%{count}\u4EE5\u5916\u306E\u5024\u306B\u3057\u3066\u304F\u3060\u3055\u3044",
        password_complexity: {
          digit: {
            one: "\u306F\u6700\u4F4E1\u3064\u306E\u6570\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",
            other: "\u306F\u6700\u4F4E%{count}\u3064\u306E\u6570\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002"
          },
          lower: {
            one: "\u306F\u6700\u4F4E1\u3064\u306E\u5C0F\u6587\u5B57\u82F1\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",
            other: "\u306F\u6700\u4F4E%{count}\u3064\u306E\u5C0F\u6587\u5B57\u82F1\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002"
          },
          symbol: {
            one: "\u306F\u6700\u4F4E1\u3064\u306E\u8A18\u53F7\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",
            other: "\u306F\u6700\u4F4E%{count}\u3064\u306E\u8A18\u53F7\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002"
          },
          upper: {
            one: "\u306F\u6700\u4F4E1\u3064\u306E\u5927\u6587\u5B57\u82F1\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",
            other: "\u306F\u6700\u4F4E%{count}\u3064\u306E\u5927\u6587\u5B57\u82F1\u5B57\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002"
          }
        },
        present: "\u306F\u5165\u529B\u3057\u306A\u3044\u3067\u304F\u3060\u3055\u3044",
        required: "\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        taken: "\u306F\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059",
        taken_in_past: "\u306F\u65E2\u306B\u4F7F\u308F\u308C\u3066\u3044\u307E\u3059\u3002",
        too_long: "\u306F%{count}\u6587\u5B57\u4EE5\u5185\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        too_short: "\u306F%{count}\u6587\u5B57\u4EE5\u4E0A\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044",
        wrong_length: "\u306F%{count}\u6587\u5B57\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044"
      },
      template: {
        body: "\u6B21\u306E\u9805\u76EE\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044",
        header: "%{model}\u306B%{count}\u500B\u306E\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F"
      }
    },
    helpers: {
      select: {
        prompt: "\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044"
      },
      submit: {
        create: "\u767B\u9332\u3059\u308B",
        submit: "\u4FDD\u5B58\u3059\u308B",
        update: "\u66F4\u65B0\u3059\u308B"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n%u",
          precision: 0,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u5186"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u5341\u5104",
            million: "\u767E\u4E07",
            quadrillion: "\u5343\u5146",
            thousand: "\u5343",
            trillion: "\u5146",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n%u",
          units: {
            byte: "\u30D0\u30A4\u30C8",
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u3001",
        two_words_connector: "\u3001",
        words_connector: "\u3001"
      }
    },
    time: {
      am: "\u5348\u524D",
      formats: {
        default: "%Y\u5E74%m\u6708%d\u65E5(%a) %H\u6642%M\u5206%S\u79D2 %z",
        long: "%Y/%m/%d %H:%M",
        short: "%m/%d %H:%M"
      },
      pm: "\u5348\u5F8C"
    }
  };
  var ka = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u10D3\u10D0\u10D3\u10D0\u10E1\u10E2\u10E3\u10E0\u10D4\u10D1\u10D0 \u10EC\u10D0\u10E0\u10E3\u10DB\u10D0\u10E2\u10D4\u10D1\u10D4\u10DA\u10D8\u10D0: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u10D9\u10D5",
        "\u10DD\u10E0\u10E8",
        "\u10E1\u10D0\u10DB\u10E8",
        "\u10DD\u10D7\u10EE\u10E8",
        "\u10EE\u10E3\u10D7\u10E8",
        "\u10DE\u10D0\u10E0",
        "\u10E8\u10D0\u10D1"
      ],
      abbr_month_names: [
        null,
        "\u10D8\u10D0\u10DC\u10D5",
        "\u10D7\u10D4\u10D1",
        "\u10DB\u10D0\u10E0\u10E2\u10D8",
        "\u10D0\u10DE\u10E0",
        "\u10DB\u10D0\u10D8\u10E1\u10D8",
        "\u10D8\u10D5\u10DC",
        "\u10D8\u10D5\u10DA",
        "\u10D0\u10D2\u10D5",
        "\u10E1\u10D4\u10E5\u10E2",
        "\u10DD\u10E5\u10E2",
        "\u10DC\u10DD\u10D4\u10DB\u10D1",
        "\u10D3\u10D4\u10D9"
      ],
      day_names: [
        "\u10D9\u10D5\u10D8\u10E0\u10D0",
        "\u10DD\u10E0\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8",
        "\u10E1\u10D0\u10DB\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8",
        "\u10DD\u10D7\u10EE\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8",
        "\u10EE\u10E3\u10D7\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8",
        "\u10DE\u10D0\u10E0\u10D0\u10E1\u10D9\u10D4\u10D5\u10D8",
        "\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u10D8\u10D0\u10DC\u10D5\u10D0\u10E0\u10D8",
        "\u10D7\u10D4\u10D1\u10D4\u10E0\u10D5\u10D0\u10DA\u10D8",
        "\u10DB\u10D0\u10E0\u10E2\u10D8",
        "\u10D0\u10DE\u10E0\u10D8\u10DA\u10D8",
        "\u10DB\u10D0\u10D8\u10E1\u10D8",
        "\u10D8\u10D5\u10DC\u10D8\u10E1\u10D8",
        "\u10D8\u10D5\u10DA\u10D8\u10E1\u10D8",
        "\u10D0\u10D2\u10D5\u10D8\u10E1\u10E2\u10DD",
        "\u10E1\u10D4\u10E5\u10E2\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8",
        "\u10DD\u10E5\u10E2\u10DD\u10DB\u10D1\u10D4\u10E0\u10D8",
        "\u10DC\u10DD\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8",
        "\u10D3\u10D4\u10D9\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10E1\u10D0\u10D0\u10D7\u10D8",
          other: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10E1\u10D0\u10D0\u10D7\u10D8"
        },
        about_x_months: {
          one: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10D7\u10D5\u10D4",
          other: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10D7\u10D5\u10D4"
        },
        about_x_years: {
          one: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10EC\u10D4\u10DA\u10D8",
          other: "\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 %{count} \u10EC\u10D4\u10DA\u10D8"
        },
        almost_x_years: {
          one: "\u10D7\u10D8\u10D7\u10E5\u10DB\u10D8\u10E1 %{count} \u10EC\u10D4\u10DA\u10D8",
          other: "\u10D7\u10D8\u10D7\u10E5\u10DB\u10D8\u10E1 %{count} \u10EC\u10D4\u10DA\u10D8"
        },
        half_a_minute: "\u10DC\u10D0\u10EE\u10D4\u10D5\u10D0\u10E0\u10D8 \u10EC\u10E3\u10D7\u10D8",
        less_than_x_minutes: {
          one: "%{count} \u10EC\u10E3\u10D7\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8",
          other: "%{count} \u10EC\u10E3\u10D7\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8"
        },
        less_than_x_seconds: {
          one: "%{count} \u10EC\u10D0\u10DB\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8",
          other: "%{count} \u10EC\u10D0\u10DB\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8"
        },
        over_x_years: {
          one: "%{count} \u10EC\u10D4\u10DA\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8",
          other: "%{count} \u10EC\u10D4\u10DA\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8"
        },
        x_days: {
          one: "%{count} \u10D3\u10E6\u10D4",
          other: "%{count} \u10D3\u10E6\u10D4"
        },
        x_minutes: {
          one: "%{count} \u10EC\u10E3\u10D7\u10D8",
          other: "%{count} \u10EC\u10E3\u10D7\u10D8"
        },
        x_months: {
          one: "%{count} \u10D7\u10D5\u10D4",
          other: "%{count} \u10D7\u10D5\u10D4"
        },
        x_seconds: {
          one: "%{count} \u10EC\u10D0\u10DB\u10D8",
          other: "%{count} \u10EC\u10D0\u10DB\u10D8"
        },
        x_years: {
          one: "%{count} \u10EC\u10D4\u10DA\u10D8",
          other: "%{count} \u10EC\u10D4\u10DA\u10D8"
        }
      },
      prompts: {
        day: "\u10D3\u10E6\u10D4",
        hour: "\u10E1\u10D0\u10D0\u10D7\u10D8",
        minute: "\u10EC\u10E3\u10D7\u10D8",
        month: "\u10D7\u10D5\u10D4",
        second: "\u10EC\u10D0\u10DB\u10D8",
        year: "\u10EC\u10D4\u10DA\u10D8"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10D3\u10D0\u10D3\u10D0\u10E1\u10E2\u10E3\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8",
        blank: "\u10D0\u10E0 \u10E8\u10D4\u10D8\u10EB\u10DA\u10D4\u10D1\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10EA\u10D0\u10E0\u10D8\u10D4\u10DA\u10D8",
        confirmation: "\u10D5\u10D4\u10DA\u10D8 %{attribute}-\u10E1 \u10D0\u10E0 \u10D4\u10DB\u10D7\u10EE\u10D5\u10D4\u10D5\u10D0",
        empty: "\u10D0\u10E0 \u10E8\u10D4\u10D8\u10EB\u10DA\u10D4\u10D1\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10EA\u10D0\u10E0\u10D8\u10D4\u10DA\u10D8",
        equal_to: "\u10E3\u10DC\u10D3\u10D0 \u10E3\u10D3\u10E0\u10D8\u10D3\u10D4\u10E1 %{count}-\u10E1",
        even: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10DA\u10E3\u10EC\u10D8",
        exclusion: "\u10E0\u10D4\u10D6\u10D4\u10E0\u10D5\u10D8\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8\u10D0",
        greater_than: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 %{count}-\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8",
        greater_than_or_equal_to: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 %{count}-\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8 \u10D0\u10DC \u10E2\u10DD\u10DA\u10D8",
        inclusion: "\u10D0\u10E0 \u10D0\u10E0\u10D8\u10E1 \u10E1\u10D8\u10D0\u10E8\u10D8",
        invalid: "\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8\u10D0",
        less_than: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 %{count}-\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8",
        less_than_or_equal_to: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 %{count}-\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8 \u10D0\u10DC \u10E2\u10DD\u10DA\u10D8",
        model_invalid: "\u10D3\u10D0\u10D3\u10D0\u10E1\u10E2\u10E3\u10E0\u10D4\u10D1\u10D0 \u10EC\u10D0\u10E0\u10E3\u10DB\u10D0\u10E2\u10D4\u10D1\u10D4\u10DA\u10D8\u10D0: %{errors}",
        not_a_number: "\u10D0\u10E0 \u10D0\u10E0\u10D8\u10E1 \u10E0\u10D8\u10EA\u10EE\u10D5\u10D8",
        not_an_integer: "\u10D0\u10E0 \u10D0\u10E0\u10D8\u10E1 \u10DB\u10D7\u10D4\u10DA\u10D8 \u10E0\u10D8\u10EA\u10EE\u10D5\u10D8",
        odd: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10D9\u10D4\u10DC\u10E2\u10D8",
        other_than: "\u10E3\u10DC\u10D3\u10D0 \u10D2\u10D0\u10DC\u10E1\u10EE\u10D5\u10D0\u10D5\u10D3\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 %{count}-\u10D2\u10D0\u10DC",
        present: "\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10EA\u10D0\u10E0\u10D8\u10D4\u10DA\u10D8",
        required: "\u10E3\u10DC\u10D3\u10D0 \u10D0\u10E0\u10E1\u10D4\u10D1\u10DD\u10D1\u10D3\u10D4\u10E1",
        taken: "\u10E3\u10D9\u10D5\u10D4 \u10D3\u10D0\u10D9\u10D0\u10D5\u10D4\u10D1\u10E3\u10DA\u10D8\u10D0",
        too_long: {
          one: "\u10D0\u10E0\u10D8\u10E1 \u10EB\u10D0\u10DA\u10D8\u10D0\u10DC \u10D2\u10E0\u10EB\u10D4\u10DA\u10D8 (\u10DB\u10D0\u10E5\u10E1\u10D8\u10DB\u10E3\u10DB\u10D8\u10D0 %{count} \u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD)",
          other: "\u10D0\u10E0\u10D8\u10E1 \u10DB\u10D4\u10E2\u10D8\u10E1\u10DB\u10D4\u10E2\u10D0\u10D3 \u10D3\u10D8\u10D3\u10D8 \u10E1\u10D8\u10D2\u10E0\u10EB\u10D8\u10E1 (\u10DB\u10D0\u10E5\u10E1\u10D8\u10DB\u10E3\u10DB\u10D8\u10D0 %{count} \u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD)"
        },
        too_short: {
          one: "\u10D0\u10E0\u10D8\u10E1 \u10EB\u10D0\u10DA\u10D8\u10D0\u10DC \u10DB\u10DD\u10D9\u10DA\u10D4 (\u10DB\u10D8\u10DC\u10D8\u10DB\u10E3\u10DB\u10D8\u10D0 %{count} \u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD)",
          other: "\u10D0\u10E0\u10D8\u10E1 \u10EB\u10D0\u10DA\u10D8\u10D0\u10DC \u10DB\u10DD\u10D9\u10DA\u10D4 (\u10DB\u10D8\u10DC\u10D8\u10DB\u10E3\u10DB\u10D8\u10D0 %{count} \u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD)"
        },
        wrong_length: {
          one: "\u10D0\u10E0\u10D8\u10E1 \u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10D8\u10D2\u10E0\u10EB\u10D8\u10E1 (\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10D6\u10E3\u10E1\u10E2\u10D0\u10D3 %{count} \u10E1\u10D8\u10D1\u10DB\u10DD\u10DA\u10DD)",
          other: "\u10D0\u10E0\u10D8\u10E1 \u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10D8\u10D2\u10E0\u10EB\u10D8\u10E1 (\u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 \u10D6\u10E3\u10E1\u10E2\u10D0\u10D3 %{count} \u10E1\u10D8\u10D1\u10DB\u10DD\u10DA\u10DD)"
        }
      },
      template: {
        body: "\u10E8\u10D4\u10D8\u10E5\u10DB\u10DC\u10D0 \u10DE\u10E0\u10DD\u10D1\u10DA\u10D4\u10DB\u10D4\u10D1\u10D8 \u10E8\u10D4\u10DB\u10D3\u10D4\u10D2 \u10D5\u10D4\u10DA\u10D4\u10D1\u10D7\u10D0\u10DC \u10D3\u10D0\u10D9\u10D0\u10D5\u10E8\u10D8\u10E0\u10D4\u10D1\u10D8\u10D7:",
        header: {
          one: "%{model}-\u10E1 \u10E8\u10D4\u10DC\u10D0\u10EE\u10D5\u10D0 \u10D5\u10D4\u10E0 \u10D2\u10D0\u10DC\u10EE\u10DD\u10E0\u10EA\u10D8\u10D4\u10DA\u10D3\u10D0 %{count} \u10E8\u10D4\u10EA\u10D3\u10DD\u10DB\u10D8\u10E1 \u10D2\u10D0\u10DB\u10DD",
          other: "%{model}-\u10E1 \u10E8\u10D4\u10DC\u10D0\u10EE\u10D5\u10D0 \u10D5\u10D4\u10E0 \u10D2\u10D0\u10DC\u10EE\u10DD\u10E0\u10EA\u10D8\u10D4\u10DA\u10D3\u10D0 %{count} \u10E8\u10D4\u10EA\u10D3\u10DD\u10DB\u10D8\u10E1 \u10D2\u10D0\u10DB\u10DD"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u10D2\u10D7\u10EE\u10DD\u10D5\u10D7 \u10D0\u10D8\u10E0\u10E9\u10D8\u10DD\u10D7"
      },
      submit: {
        create: "%{model}-\u10E1 \u10E8\u10D4\u10E5\u10DB\u10DC\u10D0",
        submit: "%{model}-\u10E1 \u10D3\u10D0\u10DB\u10D0\u10EE\u10E1\u10DD\u10D5\u10E0\u10D4\u10D1\u10D0",
        update: "%{model}-\u10E1 \u10D2\u10D0\u10DC\u10D0\u10EE\u10DA\u10D4\u10D1\u10D0"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u10D0: "a",
          \u10D1: "b",
          \u10D2: "g",
          \u10D3: "d",
          \u10D4: "e",
          \u10D5: "v",
          \u10D6: "z",
          \u10D7: "T",
          \u10D8: "i",
          \u10D9: "k",
          \u10DA: "l",
          \u10DB: "m",
          \u10DC: "n",
          \u10DD: "o",
          \u10DE: "p",
          \u10DF: "J",
          \u10E0: "r",
          \u10E1: "s",
          \u10E2: "t",
          \u10E3: "u",
          \u10E4: "f",
          \u10E5: "q",
          \u10E6: "R",
          \u10E7: "y",
          \u10E8: "S",
          \u10E9: "C",
          \u10EA: "c",
          \u10EB: "Z",
          \u10EC: "w",
          \u10ED: "W",
          \u10EE: "x",
          \u10EF: "j",
          \u10F0: "h"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u10DA"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u10DB\u10D8\u10DA\u10D8\u10D0\u10E0\u10D3\u10D8",
            million: "\u10DB\u10D8\u10DA\u10D8\u10DD\u10DC\u10D8",
            quadrillion: "\u10D9\u10D5\u10D0\u10D3\u10E0\u10D8\u10DA\u10D8\u10DD\u10DC\u10D8",
            thousand: "\u10D0\u10D7\u10D0\u10E1\u10D8",
            trillion: "\u10E2\u10E0\u10D8\u10DA\u10D8\u10DD\u10DC\u10D8",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u10D1\u10D0\u10D8\u10E2\u10D8",
              other: "\u10D1\u10D0\u10D8\u10E2\u10D4\u10D1\u10D8"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u10D3\u10D0 ",
        two_words_connector: " \u10D3\u10D0 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u10D3\u10D8\u10DA\u10D8\u10E1",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\u10E1"
    }
  };
  var kk = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0422\u0435\u043A\u0441\u0435\u0440\u0443 \u0441\u04D9\u0442\u0441\u0456\u0437 \u0430\u044F\u049B\u0442\u0430\u043B\u0434\u044B: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0416\u0430\u0437\u0431\u0430\u043D\u044B \u0436\u043E\u044E \u043C\u04AF\u043C\u043A\u0456\u043D \u0435\u043C\u0435\u0441, \u0442\u04D9\u0443\u0435\u043B\u0434\u0456\u043B\u0456\u043A\u0442\u0435\u0440 \u0431\u0430\u0440: %{record}",
            has_one: "\u0416\u0430\u0437\u0431\u0430\u043D\u044B \u0436\u043E\u044E \u043C\u04AF\u043C\u043A\u0456\u043D \u0435\u043C\u0435\u0441, \u0442\u04D9\u0443\u0435\u043B\u0434\u0456\u043B\u0456\u043A \u0431\u0430\u0440: %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0416\u0441",
        "\u0414\u0441",
        "\u0421\u0441",
        "\u0421\u0440",
        "\u0411\u0441",
        "\u0416\u043C",
        "\u0421\u0431"
      ],
      abbr_month_names: [
        null,
        "\u049B\u0430\u04A3.",
        "\u0430\u049B\u043F.",
        "\u043D\u0430\u0443.",
        "\u0441\u04D9\u0443.",
        "\u043C\u0430\u043C.",
        "\u043C\u0430\u0443.",
        "\u0448\u0456\u043B.",
        "\u0442\u0430\u043C.",
        "\u049B\u044B\u0440.",
        "\u049B\u0430\u0437.",
        "\u049B\u0430\u0440.",
        "\u0436\u0435\u043B."
      ],
      day_names: [
        "\u0436\u0435\u043A\u0441\u0435\u043D\u0431\u0456",
        "\u0434\u04AF\u0439\u0441\u0435\u043D\u0431\u0456",
        "\u0441\u0435\u0439\u0441\u0435\u043D\u0431\u0456",
        "\u0441\u04D9\u0440\u0441\u0435\u043D\u0431\u0456",
        "\u0431\u0435\u0439\u0441\u0435\u043D\u0431\u0456",
        "\u0436\u04B1\u043C\u0430",
        "\u0441\u0435\u043D\u0431\u0456"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "\u043A\u0430\u04A3\u0442\u0430\u0440",
        "\u0430\u049B\u043F\u0430\u043D",
        "\u043D\u0430\u0443\u0440\u044B\u0437",
        "\u0441\u04D9\u0443\u0456\u0440",
        "\u043C\u0430\u043C\u044B\u0440",
        "\u043C\u0430\u0443\u0441\u044B\u043C",
        "\u0448\u0456\u043B\u0434\u0435",
        "\u0442\u0430\u043C\u044B\u0437",
        "\u049B\u044B\u0440\u043A\u04AF\u0439\u0435\u043A",
        "\u049B\u0430\u0437\u0430\u043D",
        "\u049B\u0430\u0440\u0430\u0448\u0430",
        "\u0436\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0441\u0430\u0493\u0430\u0442",
          other: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0441\u0430\u0493\u0430\u0442"
        },
        about_x_months: {
          one: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0430\u0439",
          other: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0430\u0439"
        },
        about_x_years: {
          one: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0436\u044B\u043B",
          other: "\u0448\u0430\u043C\u0430\u043C\u0435\u043D %{count} \u0436\u044B\u043B"
        },
        almost_x_years: {
          one: "%{count} \u0436\u044B\u043B\u0493\u0430 \u0436\u0443\u044B\u049B",
          other: "%{count} \u0436\u044B\u043B\u0493\u0430 \u0436\u0443\u044B\u049B"
        },
        half_a_minute: "\u0436\u0430\u0440\u0442\u044B \u043C\u0438\u043D\u0443\u0442",
        less_than_x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437"
        },
        less_than_x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437"
        },
        over_x_years: {
          one: "%{count} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C",
          other: "%{count} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C"
        },
        x_days: {
          one: "%{count} \u043A\u04AF\u043D",
          other: "%{count} \u043A\u04AF\u043D"
        },
        x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442"
        },
        x_months: {
          one: "%{count} \u0430\u0439",
          other: "%{count} \u0430\u0439"
        },
        x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434"
        },
        x_years: {
          one: "%{count} \u0436\u044B\u043B",
          other: "%{count} \u0436\u044B\u043B"
        }
      },
      prompts: {
        day: "\u041A\u04AF\u043D",
        hour: "\u0421\u0430\u0493\u0430\u0442",
        minute: "\u041C\u0438\u043D\u0443\u0442",
        month: "\u0410\u0439",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434",
        year: "\u0416\u044B\u043B"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0440\u0430\u0441\u0442\u0430\u043B\u0443\u044B \u0442\u0438\u0456\u0441",
        blank: "\u0431\u043E\u0441 \u0431\u043E\u043B\u0443\u044B \u043C\u04AF\u043C\u043A\u0456\u043D \u0435\u043C\u0435\u0441",
        confirmation: "%{attribute} \u043C\u04D9\u043D\u0456\u043D\u0435 \u0441\u04D9\u0439\u043A\u0435\u0441 \u043A\u0435\u043B\u043C\u0435\u0439\u0434\u0456",
        empty: "\u0431\u043E\u0441 \u0431\u043E\u043B\u0443\u044B \u043C\u04AF\u043C\u043A\u0456\u043D \u0435\u043C\u0435\u0441",
        equal_to: "\u0442\u0435\u043A %{count} \u0442\u0435\u04A3 \u043C\u04D9\u043D\u0433\u0435 \u0438\u0435 \u0431\u043E\u043B\u0443\u044B \u043C\u04AF\u043C\u043A\u0456\u043D",
        even: "\u0442\u0435\u043A \u0436\u04B1\u043F \u043C\u04D9\u043D\u0433\u0435 \u0438\u0435 \u0431\u043E\u043B\u0430 \u0430\u043B\u0430\u0434\u044B",
        exclusion: "\u0441\u0430\u049B\u0442\u0430\u043B\u0493\u0430\u043D \u043C\u0430\u0493\u044B\u043D\u0430",
        greater_than: "\u043C\u04D9\u043D\u0456 %{count} \u0441\u0430\u043D\u044B\u043D\u0430\u043D \u0436\u043E\u0493\u0430\u0440\u044B \u0431\u043E\u043B\u0443\u044B \u043A\u0435\u0440\u0435\u043A",
        greater_than_or_equal_to: "\u043C\u04D9\u043D\u0456 %{count} \u0441\u0430\u043D\u044B\u043D\u0430\u043D \u0436\u043E\u0493\u0430\u0440\u044B \u043D\u0435\u043C\u0435\u0441\u0435 \u0442\u0435\u04A3 \u0431\u043E\u043B\u0443\u044B \u043A\u0435\u0440\u0435\u043A",
        inclusion: "\u043A\u04AF\u0442\u043F\u0435\u0433\u0435\u043D \u043C\u0430\u0493\u044B\u043D\u0430",
        invalid: "\u049B\u0430\u0442\u0435 \u043C\u0430\u0493\u044B\u043D\u0430",
        less_than: "\u043C\u04D9\u043D\u0456 %{count} \u0441\u0430\u043D\u044B\u043D\u0430\u043D \u043A\u0435\u043C \u0431\u043E\u043B\u0443\u044B \u043A\u0435\u0440\u0435\u043A",
        less_than_or_equal_to: "\u043C\u04D9\u043D\u0456 %{count} \u0441\u0430\u043D\u044B\u043D\u0430\u043D \u043A\u0435\u043C \u043D\u0435\u043C\u0435\u0441\u0435 \u0442\u0435\u04A3 \u0431\u043E\u043B\u0443\u044B \u043A\u0435\u0440\u0435\u043A",
        model_invalid: "\u0422\u0435\u043A\u0441\u0435\u0440\u0443 \u0441\u04D9\u0442\u0441\u0456\u0437 \u0430\u044F\u049B\u0442\u0430\u043B\u0434\u044B: %{errors}",
        not_a_number: "\u0441\u0430\u043D \u0435\u043C\u0435\u0441",
        not_an_integer: "\u0431\u04AF\u0442\u0456\u043D \u0441\u0430\u043D \u0435\u043C\u0435\u0441",
        odd: "\u0442\u0435\u043A \u0442\u0430\u049B \u043C\u04D9\u043D\u0433\u0435 \u0438\u0435 \u0431\u043E\u043B\u0430 \u0430\u043B\u0430\u0434\u044B",
        other_than: "%{count} \u0441\u0430\u043D\u044B\u043D\u0430\u043D \u04E9\u0437\u0433\u0435\u0448\u0435 \u0431\u043E\u043B\u0443\u044B \u0442\u0438\u0456\u0441",
        present: "\u0431\u043E\u0441 \u049B\u0430\u043B\u0443\u044B \u0442\u0438\u0456\u0441",
        required: "\u0436\u043E\u049B \u0431\u043E\u043B\u0443\u044B \u043C\u04AF\u043C\u043A\u0456\u043D \u0435\u043C\u0435\u0441",
        taken: "\u0431\u04B1\u0440\u044B\u043D\u043D\u0430\u043D \u0431\u0430\u0440",
        too_long: {
          one: "\u0442\u044B\u043C \u04B1\u0437\u044B\u043D (%{count} \u0442\u0430\u04A3\u0431\u0430\u0434\u0430\u043D \u0430\u0441\u044B\u0440\u043C\u0430\u04A3\u044B\u0437)",
          other: "\u0442\u044B\u043C \u04B1\u0437\u044B\u043D (%{count} \u0442\u0430\u04A3\u0431\u0430\u0434\u0430\u043D \u0430\u0441\u044B\u0440\u043C\u0430\u04A3\u044B\u0437)"
        },
        too_short: {
          one: "\u0442\u044B\u043C \u049B\u044B\u0441\u049B\u0430 (%{count} \u0442\u0430\u04A3\u0431\u0430\u0434\u0430\u043D \u043A\u04E9\u043F \u043D\u0435\u043C\u0435\u0441\u0435 \u0442\u0435\u04A3 \u0431\u043E\u043B\u0443\u044B \u0442\u0438\u0456\u0441)",
          other: "\u0442\u044B\u043C \u049B\u044B\u0441\u049B\u0430 (%{count} \u0442\u0430\u04A3\u0431\u0430\u0434\u0430\u043D \u043A\u04E9\u043F \u043D\u0435\u043C\u0435\u0441\u0435 \u0442\u0435\u04A3 \u0431\u043E\u043B\u0443\u044B \u0442\u0438\u0456\u0441)"
        },
        wrong_length: {
          one: "\u04B1\u0437\u044B\u043D\u0434\u044B\u0493\u044B \u0434\u04B1\u0440\u044B\u0441 \u0435\u043C\u0435\u0441 (\u0434\u04D9\u043B %{count} \u0442\u0430\u04A3\u0431\u0430 \u0431\u043E\u043B\u0443\u044B \u0442\u0438\u0456\u0441)",
          other: "\u04B1\u0437\u044B\u043D\u0434\u044B\u0493\u044B \u0434\u04B1\u0440\u044B\u0441 \u0435\u043C\u0435\u0441 (\u0434\u04D9\u043B %{count} \u0442\u0430\u04A3\u0431\u0430 \u0431\u043E\u043B\u0443\u044B \u0442\u0438\u0456\u0441)"
        }
      },
      template: {
        body: "\u041A\u0435\u043B\u0435\u0441\u0456 \u04E9\u0440\u0456\u0441\u0442\u0435\u0440\u043C\u0435\u043D \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430\u043B\u0430\u0440 \u0442\u0443\u044B\u043D\u0434\u0430\u0434\u044B:",
        header: {
          one: "%{model}: %{count} \u049B\u0430\u0442\u0435\u0433\u0435 \u0431\u0430\u0439\u043B\u0430\u043D\u044B\u0441\u0442\u044B \u0441\u0430\u049B\u0442\u0430\u0443 \u0441\u04D9\u0442\u0441\u0456\u0437 \u0430\u044F\u049B\u0442\u0430\u043B\u0434\u044B",
          other: "%{model}: %{count} \u049B\u0430\u0442\u0435\u0433\u0435 \u0431\u0430\u0439\u043B\u0430\u043D\u044B\u0441\u0442\u044B \u0441\u0430\u049B\u0442\u0430\u0443 \u0441\u04D9\u0442\u0441\u0456\u0437 \u0430\u044F\u049B\u0442\u0430\u043B\u0434\u044B"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0422\u0430\u04A3\u0434\u0430\u04A3\u044B\u0437: "
      },
      submit: {
        create: "\u049A\u04B1\u0440\u0443 %{model}",
        submit: "\u0421\u0430\u049B\u0442\u0430\u0443 %{model}",
        update: "\u04E8\u0437\u0433\u0435\u0440\u0442\u0443 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0442\u0435\u04A3\u0433\u0435"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434",
              other: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434"
            },
            million: {
              one: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            quadrillion: {
              one: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            thousand: {
              one: "\u043C\u044B\u04A3",
              other: "\u043C\u044B\u04A3"
            },
            trillion: {
              one: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0431\u0430\u0439\u0442",
              other: "\u0431\u0430\u0439\u0442"
            },
            eb: "\u042D\u0411",
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            pb: "\u041F\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0436\u04D9\u043D\u0435 ",
        two_words_connector: " \u0436\u04D9\u043D\u0435 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0442\u0430\u04A3\u0493\u044B",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u043A\u0435\u0448\u043A\u0456"
    }
  };
  var km = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u1798\u17B7\u1793\u1798\u17B6\u1793\u179F\u17BB\u1796\u179B\u1797\u17B6\u1796\u17D6 %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u1798\u17B7\u1793\u17A2\u17B6\u1785\u179B\u17BB\u1794\u1794\u17B6\u1793\u1791\u17C1\u1796\u17B8\u1796\u17D2\u179A\u17C4\u17C7\u1798\u17B6\u1793 %{record} \u1793\u17C5\u17A1\u17BE\u1799",
            has_one: "\u1798\u17B7\u1793\u17A2\u17B6\u1785\u179B\u17BB\u1794\u1794\u17B6\u1793\u1791\u17C1\u1796\u17B8\u1796\u17D2\u179A\u17C4\u17C7\u1798\u17B6\u1793 %{record} \u1793\u17C5\u17A1\u17BE\u1799"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u17A2\u17B6",
        "\u1785",
        "\u17A2",
        "\u1796\u17BB",
        "\u1796\u17D2\u179A\u17A0",
        "\u179F\u17BB",
        "\u179F"
      ],
      abbr_month_names: [
        null,
        "\u1798\u1780\u179A\u17B6",
        "\u1780\u17BB\u1798\u17D2\u1797\u17C8",
        "\u1798\u17B7\u1793\u17B6",
        "\u1798\u17C1\u179F\u17B6",
        "\u17A7\u179F\u1797\u17B6",
        "\u1798\u17B7\u1790\u17BB\u1793\u17B6",
        "\u1780\u1780\u17D2\u1780\u178A\u17B6",
        "\u179F\u17B8\u17A0\u17B6",
        "\u1780\u1789\u17D2\u1789\u17B6",
        "\u178F\u17BB\u179B\u17B6",
        "\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6",
        "\u1792\u17D2\u1793\u17BC"
      ],
      day_names: [
        "\u17A2\u17B6\u1791\u17B7\u178F\u17D2\u1799",
        "\u1785\u1793\u17D2\u1791",
        "\u17A2\u1784\u17D2\u1782\u17B6\u179A",
        "\u1796\u17BB\u1792",
        "\u1796\u17D2\u179A\u17A0\u179F\u17D2\u1794\u178F\u17B7\u17CD",
        "\u179F\u17BB\u1780\u17D2\u179A",
        "\u179F\u17C5\u179A\u17CD"
      ],
      formats: {
        default: "%d %B %Y",
        long: "\u1790\u17D2\u1784\u17C3%A \u1791\u17B8%e \u1781\u17C2%B \u1786\u17D2\u1793\u17B6\u17C6%Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u1798\u1780\u179A\u17B6",
        "\u1780\u17BB\u1798\u17D2\u1797\u17C8",
        "\u1798\u17B7\u1793\u17B6",
        "\u1798\u17C1\u179F\u17B6",
        "\u17A7\u179F\u1797\u17B6",
        "\u1798\u17B7\u1790\u17BB\u1793\u17B6",
        "\u1780\u1780\u17D2\u1780\u178A\u17B6",
        "\u179F\u17B8\u17A0\u17B6",
        "\u1780\u1789\u17D2\u1789\u17B6",
        "\u178F\u17BB\u179B\u17B6",
        "\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6",
        "\u1792\u17D2\u1793\u17BC"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u1794\u17D2\u179A\u1798\u17B6\u178E %{count} \u1798\u17C9\u17C4\u1784",
        about_x_months: "\u1794\u17D2\u179A\u1798\u17B6\u178E %{count} \u1781\u17C2",
        about_x_years: "\u1794\u17D2\u179A\u1798\u17B6\u178E %{count} \u1786\u17D2\u1793\u17B6\u17C6",
        almost_x_years: "\u1787\u17B7\u178F %{count} \u1786\u17D2\u1793\u17B6\u17C6",
        half_a_minute: "\u1780\u1793\u17D2\u179B\u17C7\u1793\u17B6\u1791\u17B8",
        less_than_x_minutes: "\u178F\u17B7\u1785\u1787\u17B6\u1784 %{count} \u1793\u17B6\u1791\u17B8",
        less_than_x_seconds: "\u178F\u17B7\u1785\u1787\u17B6\u1784 %{count} \u179C\u17B7\u1793\u17B6\u1791\u17B8",
        over_x_years: "\u179B\u17BE\u179F\u1796\u17B8 %{count} \u1786\u17D2\u1793\u17B6\u17C6",
        x_days: "%{count} \u1790\u17D2\u1784\u17C3",
        x_minutes: "%{count} \u1793\u17B6\u1791\u17B8",
        x_months: "%{count} \u1781\u17C2",
        x_seconds: "%{count} \u179C\u17B7\u1793\u17B6\u1791\u17B8"
      },
      prompts: {
        day: "\u1790\u17D2\u1784\u17C3",
        hour: "\u1798\u17C9\u17C4\u1784",
        minute: "\u1793\u17B6\u1791\u17B8",
        month: "\u1781\u17C2",
        second: "\u179C\u17B7\u1793\u17B6\u1791\u17B8",
        year: "\u1786\u17D2\u1793\u17B6\u17C6"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
        blank: "\u1798\u17B7\u1793\u17A2\u17B6\u1785\u179A\u17C6\u179B\u1784",
        confirmation: "\u1795\u17D2\u1791\u17C0\u1784\u1795\u17D2\u1791\u17B6\u178F\u17CB\u1798\u17B7\u1793\u178F\u17D2\u179A\u17BC\u179C\u1793\u17B9\u1784 %{attribute}",
        empty: "\u1798\u17B7\u1793\u17A2\u17B6\u1785\u179A\u17C6\u179B\u1784",
        equal_to: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u179F\u17D2\u1798\u17BE %{count}",
        even: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1787\u17B6\u1785\u17C6\u1793\u17BD\u1793\u1782\u178F\u17CB",
        exclusion: "\u1798\u17B7\u1793\u17A2\u1793\u17BB\u1789\u17D2\u1789\u17B6\u178F\u17B1\u17D2\u1799\u1794\u17D2\u179A\u17BE",
        greater_than: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1785\u17D2\u179A\u17BE\u1793\u1787\u17B6\u1784 %{count}",
        greater_than_or_equal_to: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1785\u17D2\u179A\u17BE\u1793\u1787\u17B6\u1784\u17AC\u179F\u17D2\u1798\u17BE %{count}",
        inclusion: "\u1798\u17B7\u1793\u1798\u17B6\u1793\u1793\u17C5\u1780\u17D2\u1793\u17BB\u1784\u1794\u1789\u17D2\u1787\u17B8",
        invalid: "\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C",
        less_than: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u178F\u17B7\u1785\u1787\u17B6\u1784 %{count}",
        less_than_or_equal_to: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u178F\u17B7\u1785\u1787\u17B6\u1784\u17AC\u179F\u17D2\u1798\u17BE %{count}",
        not_a_number: "\u1798\u17B7\u1793\u1798\u17C2\u1793\u1787\u17B6\u179B\u17C1\u1781\u1791\u17C1",
        not_an_integer: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1787\u17B6\u1785\u17C6\u1793\u17BD\u1793\u1782\u178F\u17CB",
        odd: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1787\u17B6\u1785\u17C6\u1793\u17BD\u1793\u179F\u17C1\u179F",
        other_than: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1781\u17BB\u179F\u1796\u17B8 %{count}",
        present: "\u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u179A\u17C6\u179B\u1784",
        taken: "\u1798\u17B6\u1793\u179A\u17BD\u1785\u17A0\u17BE\u1799",
        too_long: "\u179C\u17C2\u1784\u1796\u17C1\u1780 (\u1799\u17C9\u17B6\u1784\u1785\u17D2\u179A\u17BE\u1793 %{count} \u178F\u17BD)",
        too_short: "\u1781\u17D2\u179B\u17B8\u1796\u17C1\u1780 (\u1799\u17C9\u17B6\u1784\u178F\u17B7\u1785 %{count} \u178F\u17BD)",
        wrong_length: "\u1794\u17D2\u179A\u179C\u17C2\u1784\u1798\u17B7\u1793\u178F\u17D2\u179A\u17BC\u179C (\u1782\u17BD\u179A\u178F\u17C2\u1798\u17B6\u1793 %{count} \u178F\u17BD)"
      },
      template: {
        body: "\u179F\u17BC\u1798\u1796\u17B7\u1793\u17B7\u178F\u17D2\u1799\u1798\u17BE\u179B\u1780\u17C6\u17A0\u17BB\u179F\u1793\u17C5\u1781\u17B6\u1784\u1780\u17D2\u179A\u17C4\u1798:",
        header: "\u1798\u17B6\u1793\u1780\u17C6\u17A0\u17BB\u179F %{count} \u178A\u17C2\u179B\u1794\u17B6\u1793\u1794\u1789\u17D2\u1788\u1794\u17CB\u1780\u17B6\u179A\u179A\u1780\u17D2\u179F\u17B6\u1791\u17BB\u1780 %{model}\u1793\u17C1\u17C7"
      }
    },
    helpers: {
      select: {
        prompt: "\u179F\u17BC\u1798\u1787\u17D2\u179A\u17BE\u179F\u179A\u17BE\u179F"
      },
      submit: {
        create: "\u1794\u1784\u17D2\u1780\u17BE\u178F%{model}",
        submit: "\u179A\u1780\u17D2\u179F\u17B6\u1791\u17BB\u1780%{model}",
        update: "\u1794\u17D2\u178F\u17BC\u179A%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u17DB"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u1794\u17CA\u17B8\u179B\u17B6\u1793",
            million: "\u179B\u17B6\u1793",
            quadrillion: "\u1780\u17D2\u179C\u17B6\u1791\u17D2\u179A\u17B8\u179B\u17B6\u1793",
            thousand: "\u1796\u17B6\u1793\u17CB",
            trillion: "\u1791\u17D2\u179A\u17B8\u179B\u17B6\u1793",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u1793\u17B7\u1784 ",
        two_words_connector: " \u1793\u17B7\u1784 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u1796\u17D2\u179A\u17B9\u1780",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u200B\u179B\u17D2\u1784\u17B6\u1785"
    }
  };
  var kn = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0CA4\u0CAA\u0CCD\u0CAA\u0CC1 \u0C86\u0CA7\u0CBE\u0CB0: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0CB0\u0CB5\u0CBF",
        "\u0CB8\u0CCB\u0CAE",
        "\u0CAE\u0C82\u0C97\u0CB3",
        "\u0CAC\u0CC1\u0CA7",
        "\u0C97\u0CC1\u0CB0\u0CC1",
        "\u0CB6\u0CC1\u0C95\u0CCD\u0CB0",
        "\u0CB6\u0CA8\u0CBF"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "\u0CB0\u0CB5\u0CBF\u0CB5\u0CBE\u0CB0",
        "\u0CB8\u0CCB\u0CAE\u0CB5\u0CBE\u0CB0",
        "\u0CAE\u0C82\u0C97\u0CB3\u0CB5\u0CBE\u0CB0",
        "\u0CAC\u0CC1\u0CA7\u0CB5\u0CBE\u0CB0",
        "\u0C97\u0CC1\u0CB0\u0CC1\u0CB5\u0CBE\u0CB0",
        "\u0CB6\u0CC1\u0C95\u0CCD\u0CB0\u0CB5\u0CBE\u0CB0",
        "\u0CB6\u0CA8\u0CBF\u0CB5\u0CBE\u0CB0"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0C9C\u0CA8\u0CB5\u0CB0\u0CBF",
        "\u0CAB\u0CC6\u0CAC\u0CCD\u0CB0\u0CB5\u0CB0\u0CBF",
        "\u0CAE\u0CBE\u0CB0\u0CCD\u0C9A\u0CCD",
        "\u0C8F\u0CAA\u0CCD\u0CB0\u0CBF\u0CB2\u0CCD",
        "\u0CAE\u0CC7",
        "\u0C9C\u0CC2\u0CA8\u0CCD",
        "\u0C9C\u0CC1\u0CB2\u0CC8",
        "\u0C86\u0C97\u0CB8\u0CCD\u0C9F\u0CCD",
        "\u0CB8\u0CC6\u0CAA\u0CCD\u0C9F\u0CC6\u0C82\u0CAC\u0CB0\u0CCD",
        "\u0C85\u0C95\u0CCD\u0C9F\u0CCB\u0CAC\u0CB0\u0CCD",
        "\u0CA8\u0CB5\u0C82\u0CAC\u0CB0\u0CCD",
        "\u0CA1\u0CBF\u0CB8\u0CC6\u0C82\u0CAC\u0CB0\u0CCD"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 \u0C92\u0C82\u0CA6\u0CC1 \u0C97\u0C82\u0C9F\u0CC6",
          other: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 %{count} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3\u0CC1"
        },
        about_x_months: {
          one: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 \u0C92\u0C82\u0CA6\u0CC1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1",
          other: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 %{count} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3\u0CC1"
        },
        about_x_years: {
          one: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 \u0C92\u0C82\u0CA6\u0CC1 \u0CB5\u0CB0\u0CC1\u0CB7",
          other: "\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 %{count} \u0CB5\u0CB0\u0CC1\u0CB7\u0C97\u0CB3\u0CC1"
        },
        almost_x_years: {
          one: "\u0CB8\u0CB0\u0CBF\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 \u0C92\u0C82\u0CA6\u0CC1 \u0CB5\u0CB0\u0CC1\u0CB7",
          other: "\u0CB8\u0CB0\u0CBF\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 %{count} \u0CB5\u0CB0\u0CC1\u0CB7\u0C97\u0CB3\u0CC1"
        },
        half_a_minute: "\u0C92\u0C82\u0CA6\u0CC1 \u0C85\u0CB0\u0CCD\u0CA7 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7",
        less_than_x_minutes: {
          one: "\u0C92\u0C82\u0CA6\u0CC1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CC2 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6",
          other: "%{count} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6"
        },
        less_than_x_seconds: {
          one: "\u0C92\u0C82\u0CA6\u0CC1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CBF\u0C97\u0CC2 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6",
          other: "%{count} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CBF\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6"
        },
        over_x_years: {
          one: "\u0C92\u0C82\u0CA6\u0CC1 \u0CB5\u0CB0\u0CC1\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0CB9\u0CC6\u0C9A\u0CCD\u0C9A\u0CC1",
          other: "%{count} \u0CB5\u0CB0\u0CC1\u0CB7\u0C97\u0CB3\u0CBF\u0C97\u0CBF\u0C82\u0CA4 \u0CB9\u0CC6\u0C9A\u0CCD\u0C9A\u0CC1"
        },
        x_days: {
          one: "%{count} \u0CA6\u0CBF\u0CA8",
          other: "%{count} \u0CA6\u0CBF\u0CA8\u0C97\u0CB3\u0CC1"
        },
        x_minutes: {
          one: "%{count} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7",
          other: "%{count} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C97\u0CB3\u0CC1"
        },
        x_months: {
          one: "%{count} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1",
          other: "%{count} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3\u0CC1"
        },
        x_seconds: {
          one: "%{count} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD",
          other: "%{count} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CC1\u0C97\u0CB3\u0CC1"
        }
      },
      prompts: {
        day: "\u0CA6\u0CBF\u0CA8",
        hour: "\u0C97\u0C82\u0C9F\u0CC6",
        minute: "\u0CA8\u0CBF\u0CAE\u0CBF\u0CB7",
        month: "\u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1",
        second: "\u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CC1",
        year: "\u0CB5\u0CB0\u0CC1\u0CB7"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0C92\u0CAA\u0CCD\u0CAA\u0CBF\u0C95\u0CCA\u0CB3\u0CCD\u0CB3\u0CAC\u0CC7\u0C95\u0CC1",
        blank: "\u0C96\u0CBE\u0CB2\u0CBF \u0CAC\u0CBF\u0CA1\u0CB2\u0CC1 \u0CB8\u0CA7\u0CCD\u0CAF\u0CB5\u0CBF\u0CB2\u0CCD\u0CB2",
        confirmation: "\u0CB8\u0CAE\u0CB0\u0CCD\u0CA5\u0CA8\u0CC6 \u0CB8\u0CB0\u0CBF\u0CAC\u0CB0\u0CB2\u0CCD\u0CB2\u0CBF\u0CB2\u0CCD\u0CB2",
        empty: "\u0C96\u0CBE\u0CB2\u0CBF \u0CAC\u0CBF\u0CA1\u0CB2\u0CC1 \u0CB8\u0CA7\u0CCD\u0CAF\u0CB5\u0CBF\u0CB2\u0CCD\u0CB2",
        equal_to: "%{count} \u0C95\u0CCD\u0C95\u0CC6 \u0CB8\u0CAE\u0CBE\u0CA8\u0CB5\u0CBE\u0C97\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        even: "\u0CB8\u0CAE \u0C86\u0C97\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        exclusion: "\u0C95\u0CBE\u0CAF\u0CCD\u0CA6\u0CBF\u0CB0\u0CBF\u0CB8\u0CB2\u0CBE\u0C97\u0CBF\u0CA6\u0CC6",
        greater_than: "%{count} \u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0CB9\u0CC6\u0C9A\u0CCD\u0C9A\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        greater_than_or_equal_to: "%{count} \u0C95\u0CBF\u0C82\u0CA4 \u0CB9\u0CC6\u0C9A\u0CCD\u0C9A\u0CC1 \u0C85\u0CA5\u0CB5\u0CBE \u0CB8\u0CAE\u0CBE\u0CA8\u0CB5\u0CBE\u0C97\u0CBF\u0CB0 \u0C87\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        inclusion: "\u0CAA\u0C9F\u0CCD\u0C9F\u0CBF\u0CAF\u0CB2\u0CCD\u0CB2\u0CBF \u0CB6\u0CBE\u0CAE\u0CC0\u0CB2\u0CC1 \u0C86\u0C97\u0CBF\u0CB2\u0CCD\u0CB2",
        invalid: "\u0CA8\u0CBF\u0CB0\u0CB0\u0CCD\u0CA5\u0C95\u0CB5\u0CBE\u0C97\u0CBF\u0CA6\u0CC6",
        less_than: "%{count} \u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6 \u0C86\u0C97\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        less_than_or_equal_to: "%{count} \u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6 \u0C85\u0CA5\u0CB5\u0CBE \u0CB8\u0CAE\u0CBE\u0CA8\u0CB5\u0CBE\u0C97\u0CBF\u0CB0 \u0C87\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        not_a_number: "\u0CB8\u0C82\u0C96\u0CC6 \u0C86\u0C97\u0CBF\u0CB2\u0CCD\u0CB2",
        not_an_integer: "\u0CB8\u0C82\u0C96\u0CC6 \u0C86\u0C97\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        odd: "\u0CAC\u0CC6\u0CB8 \u0C86\u0C97\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1",
        taken: "\u0CA4\u0CC6\u0C97\u0CC6\u0CA6\u0CC1\u0C95\u0CCA\u0C82\u0CA1\u0CBE\u0C97\u0CBF\u0CA6\u0CC6",
        too_long: "\u0CAC\u0CB9\u0CB3 \u0CA6\u0CCA\u0CA1\u0CCD\u0CA1\u0CA6\u0CBE\u0C97\u0CBF\u0CA6\u0CC6 (\u0C97\u0CB0\u0CBF\u0CB7\u0CCD\u0C9F %{count} \u0C85\u0C95\u0CCD\u0CB7\u0CB0\u0C97\u0CB3\u0CC1)",
        too_short: "\u0CAC\u0CB9\u0CB3 \u0C9A\u0CBF\u0C95\u0CCD\u0C95\u0CA6\u0CBE\u0C97\u0CBF\u0CA6\u0CC6 (\u0C95\u0CA8\u0CBF\u0CB7\u0CCD\u0CA0 %{count} \u0C85\u0C95\u0CCD\u0CB7\u0CB0\u0C97\u0CB3\u0CC1)",
        wrong_length: "\u0CA4\u0CAA\u0CCD\u0CAA\u0CC1 \u0C89\u0CA6\u0CCD\u0CA6\u0CB5\u0CBF\u0CA6\u0CC6 (%{count} \u0C85\u0C95\u0CCD\u0CB7\u0CB0\u0C97\u0CB3\u0CBF\u0CB0\u0CAC\u0CC7\u0C95\u0CC1)"
      },
      template: {
        body: "\u0CB8\u0CAE\u0CB8\u0CCD\u0CAF\u0CC6\u0C97\u0CB3\u0CBF\u0CB0\u0CC1\u0CB5 \u0C9C\u0CBE\u0C97\u0C97\u0CB3\u0CC1:",
        header: {
          one: "%{count} \u0CA7\u0CCB\u0CB7\u0CA6 \u0CAA\u0CB0\u0CBF\u0CA3\u0CBE\u0CAE %{model} \u0C85\u0CA8\u0CCD\u0CA8\u0CC1 \u0CB0\u0C9A\u0CBF\u0CB8\u0CB2\u0CC1 \u0CB8\u0CBE\u0CA7\u0CCD\u0CAF\u0CB5\u0CBE\u0C97\u0CB2\u0CBF\u0CB2\u0CCD\u0CB2",
          other: "%{count} \u0CA7\u0CCB\u0CB7\u0C97\u0CB3 \u0CAA\u0CB0\u0CBF\u0CA3\u0CBE\u0CAE %{model} \u0C85\u0CA8\u0CCD\u0CA8\u0CC1 \u0CB0\u0C9A\u0CBF\u0CB8\u0CB2\u0CC1 \u0CB8\u0CBE\u0CA7\u0CCD\u0CAF\u0CB5\u0CBE\u0C97\u0CB2\u0CBF\u0CB2\u0CCD\u0CB2"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0CA6\u0CAF\u0CB5\u0CBF\u0C9F\u0CCD\u0C9F\u0CC1 \u0C86\u0CB0\u0CBF\u0CB8\u0CBF"
      },
      submit: {
        create: "%{model} \u0CB0\u0C9A\u0CBF\u0CB8\u0CBF",
        submit: "%{model} \u0C95\u0CB3\u0CC1\u0CB9\u0CBF\u0CB8\u0CC1",
        update: "%{model} \u0CB0\u0C9A\u0CBF\u0CB8\u0CBF"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0CB2\u0C95\u0CCD\u0CB7\u0C95\u0CCB\u0C9F\u0CBF",
            million: "\u0CA6\u0CB6\u0CB2\u0C95\u0CCD\u0CB7",
            quadrillion: "\u0CAA\u0CA6\u0CCD\u0CAE",
            thousand: "\u0CB8\u0CBE\u0CB5\u0CBF\u0CB0",
            trillion: "\u0CA8\u0CC0\u0CB2\u0CCD",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0CAE\u0CA4\u0CCD\u0CA4\u0CC1  ",
        two_words_connector: " \u0CAE\u0CA4\u0CCD\u0CA4\u0CC1  ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0CAA\u0CCD\u0CB0\u0CBE\u0CA4\u0C83\u0C95\u0CBE\u0CB2",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0C85\u0CAA\u0CB0\u0CA8\u0CCD\u0CA8\u0C83"
    }
  };
  var ko = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\uB370\uC774\uD130 \uAC80\uC99D\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4. %{errors}",
          restrict_dependent_destroy: {
            has_many: "%{record}(\uC774)\uAC00 \uC874\uC7AC\uD558\uAE30 \uB54C\uBB38\uC5D0 \uC0AD\uC81C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4",
            has_one: "%{record}(\uC774)\uAC00 \uC874\uC7AC\uD558\uAE30 \uB54C\uBB38\uC5D0 \uC0AD\uC81C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\uC77C",
        "\uC6D4",
        "\uD654",
        "\uC218",
        "\uBAA9",
        "\uAE08",
        "\uD1A0"
      ],
      abbr_month_names: [
        null,
        "1\uC6D4",
        "2\uC6D4",
        "3\uC6D4",
        "4\uC6D4",
        "5\uC6D4",
        "6\uC6D4",
        "7\uC6D4",
        "8\uC6D4",
        "9\uC6D4",
        "10\uC6D4",
        "11\uC6D4",
        "12\uC6D4"
      ],
      day_names: [
        "\uC77C\uC694\uC77C",
        "\uC6D4\uC694\uC77C",
        "\uD654\uC694\uC77C",
        "\uC218\uC694\uC77C",
        "\uBAA9\uC694\uC77C",
        "\uAE08\uC694\uC77C",
        "\uD1A0\uC694\uC77C"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y\uB144 %m\uC6D4 %d\uC77C",
        short: "%m\uC6D4 %d\uC77C"
      },
      month_names: [
        null,
        "1\uC6D4",
        "2\uC6D4",
        "3\uC6D4",
        "4\uC6D4",
        "5\uC6D4",
        "6\uC6D4",
        "7\uC6D4",
        "8\uC6D4",
        "9\uC6D4",
        "10\uC6D4",
        "11\uC6D4",
        "12\uC6D4"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\uB300\uB7B5 %{count}\uC2DC\uAC04",
        about_x_months: "\uB300\uB7B5 %{count}\uAC1C\uC6D4",
        about_x_years: "\uB300\uB7B5 %{count}\uB144",
        almost_x_years: "\uAC70\uC758 %{count}\uB144",
        half_a_minute: "30\uCD08",
        less_than_x_minutes: "%{count}\uBD84 \uBBF8\uB9CC",
        less_than_x_seconds: "%{count}\uCD08 \uBBF8\uB9CC",
        over_x_years: "%{count}\uB144 \uCD08\uACFC",
        x_days: "%{count}\uC77C",
        x_minutes: "%{count}\uBD84",
        x_months: "%{count}\uAC1C\uC6D4",
        x_seconds: "%{count}\uCD08",
        x_years: "%{count}\uB144"
      },
      prompts: {
        day: "\uC77C",
        hour: "\uC2DC",
        minute: "\uBD84",
        month: "\uC6D4",
        second: "\uCD08",
        year: "\uB144"
      }
    },
    errors: {
      format: "%{message}",
      messages: {
        accepted: "%{attribute}\uC744(\uB97C) \uBC18\uB4DC\uC2DC \uD655\uC778\uD574\uC57C \uD569\uB2C8\uB2E4",
        blank: "%{attribute}\uC5D0 \uB0B4\uC6A9\uC744 \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        confirmation: "%{attribute}\uC740(\uB294) \uC11C\uB85C \uC77C\uCE58\uD574\uC57C \uD569\uB2C8\uB2E4",
        empty: "%{attribute}\uC5D0 \uB0B4\uC6A9\uC744 \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        equal_to: "%{attribute}\uC740(\uB294) %{count}\uC640(\uACFC) \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4",
        even: "%{attribute}\uC5D0 \uC9DD\uC218\uB97C \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        exclusion: "%{attribute}\uC740(\uB294) \uC774\uBBF8 \uC608\uC57D\uB418\uC5B4 \uC788\uB294 \uAC12\uC785\uB2C8\uB2E4",
        greater_than: "%{attribute}\uC740(\uB294) %{count}\uBCF4\uB2E4 \uCEE4\uC57C \uD569\uB2C8\uB2E4",
        greater_than_or_equal_to: "%{attribute}\uC740(\uB294) %{count}\uBCF4\uB2E4 \uD06C\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4",
        in: "%{attribute}\uC740(\uB294) %{count}\uBC94\uC704 \uC548\uC5D0 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4",
        inclusion: "%{attribute}\uC740(\uB294) \uBAA9\uB85D\uC5D0 \uD3EC\uD568\uB418\uC5B4 \uC788\uB294 \uAC12\uC774 \uC544\uB2D9\uB2C8\uB2E4",
        invalid: "%{attribute}\uC740(\uB294) \uC62C\uBC14\uB974\uC9C0 \uC54A\uC740 \uAC12\uC785\uB2C8\uB2E4",
        less_than: "%{attribute}\uC740(\uB294) %{count}\uBCF4\uB2E4 \uC791\uC544\uC57C \uD569\uB2C8\uB2E4",
        less_than_or_equal_to: "%{attribute}\uC740(\uB294) %{count}\uC640(\uACFC) \uC791\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4",
        model_invalid: "%{attribute}\uC5D0 \uB300\uD55C \uB370\uC774\uD130 \uAC80\uC99D\uC5D0 \uC2E4\uD328\uD558\uC600\uC2B5\uB2C8\uB2E4: %{errors}",
        not_a_number: "%{attribute}\uC5D0 \uC22B\uC790\uB97C \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        not_an_integer: "%{attribute}\uC5D0 \uC815\uC218\uB97C \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        odd: "%{attribute}\uC5D0 \uD640\uC218\uB97C \uC785\uB825\uD574 \uC8FC\uC138\uC694",
        other_than: "%{attribute}\uC740(\uB294) %{count}\uC640(\uACFC) \uB2EC\uB77C\uC57C \uD569\uB2C8\uB2E4",
        present: "%{attribute}\uC740(\uB294) \uBE44\uC5B4\uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4",
        required: "%{attribute}\uC740(\uB294) \uBC18\uB4DC\uC2DC \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4",
        taken: "%{attribute}\uC740(\uB294) \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4",
        too_long: "%{attribute}\uC740(\uB294) %{count}\uC790\uB97C \uB118\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4",
        too_short: "%{attribute}\uC740(\uB294) \uC801\uC5B4\uB3C4 %{count}\uC790\uB97C \uB118\uC5B4\uC57C \uD569\uB2C8\uB2E4",
        wrong_length: "%{attribute}\uC740(\uB294) %{count}\uC790\uC5EC\uC57C \uD569\uB2C8\uB2E4"
      },
      template: {
        body: "\uC544\uB798 \uBB38\uC81C\uB97C \uD655\uC778\uD574 \uC8FC\uC138\uC694.",
        header: "%{count}\uAC1C\uC758 \uC624\uB958\uB85C \uC778\uD574 %{model}\uC744(\uB97C) \uC800\uC7A5\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4"
      }
    },
    helpers: {
      select: {
        prompt: "\uC120\uD0DD\uD574\uC8FC\uC138\uC694"
      },
      submit: {
        create: "\uB4F1\uB85D",
        submit: "\uC81C\uCD9C",
        update: "\uC218\uC815"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n%u",
          precision: 0,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\uC6D0"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        round_mode: "default",
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n%u",
          units: {
            billion: "\uC2ED\uC5B5",
            million: "\uBC31\uB9CC",
            quadrillion: "\uCC9C\uC870",
            thousand: "\uCC9C",
            trillion: "\uC870",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n%u",
          units: {
            byte: "\uBC14\uC774\uD2B8",
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", ",
        two_words_connector: ", ",
        words_connector: ", "
      }
    },
    time: {
      am: "\uC624\uC804",
      formats: {
        default: "%Y\uB144 %m\uC6D4 %d\uC77C %A %H\uC2DC %M\uBD84 %S\uCD08 %z",
        long: "%Y\uB144 %m\uC6D4 %d\uC77C %H\uC2DC %M\uBD84",
        short: "%m\uC6D4 %d\uC77C %H:%M"
      },
      pm: "\uC624\uD6C4"
    }
  };
  var lb = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validatioun feelgeschlo: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Den Enregistrement kann net gel\xE4scht gi w\xEBll et dovun ofh\xE4ngegt %{record} g\xEBtt",
            has_one: "Den Enregistrement kann net gel\xE4scht gi w\xEBll et en dovun ofh\xE4ngegt %{record} g\xEBtt"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Son",
        "M\xE9i",
        "D\xEBn",
        "M\xEBt",
        "Don",
        "Fre",
        "Sam"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "M\xE4e",
        "Abr",
        "Mee",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dez"
      ],
      day_names: [
        "Sonndeg",
        "M\xE9indeg",
        "D\xEBnschdeg",
        "M\xEBttwoch",
        "Donneschdeg",
        "Freideg",
        "Samschdeg"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "Januar",
        "Februar",
        "M\xE4erz",
        "Abr\xEBll",
        "Mee",
        "Juni",
        "Juli",
        "August",
        "September",
        "Oktober",
        "November",
        "Dezember"
      ],
      order: [
        "Joer",
        "Mount",
        "Dag"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ongef\xE9ier eng Stonn",
          other: "ongef\xE9ier %{count} Stonnen"
        },
        about_x_months: {
          one: "ongef\xE9ier ee Mount",
          other: "ongef\xE9ier %{count} M\xE9int"
        },
        about_x_years: {
          one: "ongef\xE9ier ee Joer",
          other: "ongef\xE9ier %{count} Joer"
        },
        almost_x_years: {
          one: "bal ee Joer",
          other: "bal %{count} Joer"
        },
        half_a_minute: "eng hallef Minutt",
        less_than_x_minutes: {
          one: "manner w\xE9i eng Minutt",
          other: "manner w\xE9i %{count} Minutten"
        },
        less_than_x_seconds: {
          one: "manner w\xE9i eng Sekonn",
          other: "manner w\xE9i %{count} Sekonnen"
        },
        over_x_years: {
          one: "m\xE9i w\xE9i ee Joer",
          other: "m\xE9i w\xE9i %{count} Joer"
        },
        x_days: {
          one: "%{count} Dag",
          other: "%{count} Deeg"
        },
        x_minutes: {
          one: "%{count} Minutt",
          other: "%{count} Minutten"
        },
        x_months: {
          one: "%{count} Mount",
          other: "%{count} M\xE9int"
        },
        x_seconds: {
          one: "%{count} Sekonn",
          other: "%{count} Sekonnen"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Stonn",
        minute: "Minutt",
        month: "Mount",
        second: "Sekonnen",
        year: "Joer"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "muss akzept\xE9iert ginn",
        blank: "d\xE4erf net eidel sinn",
        confirmation: "st\xEBmmt net mat %{attribute} iwwerenee",
        empty: "d\xE4erf net eidel sinn",
        equal_to: "muss d'selwecht si w\xE9i %{count}",
        even: "muss gerued sinn",
        exclusion: "ass reserv\xE9iert",
        greater_than: "muss m\xE9i grouss w\xE9i %{count} sinn",
        greater_than_or_equal_to: "muss m\xE9i grouss oder gl\xE4ich si w\xE9i %{count}",
        inclusion: "ass net an der L\xEBscht dran",
        invalid: "ass net valabel",
        less_than: "muss m\xE9i kleng w\xE9i %{count} sinn",
        less_than_or_equal_to: "muss m\xE9i kleng oder gl\xE4ich si w\xE9i %{count}",
        not_a_number: "ass keng Zuel",
        not_an_integer: "muss eng ganz Zuel sinn",
        odd: "muss ongerued sinn",
        other_than: "muss anescht si w\xE9i %{count}",
        present: "muss eidel sinn",
        taken: "gouf scho geholl",
        too_long: {
          one: "ass ze laang (Maximal %{count} Zeechen)",
          other: "ass ze laang (net m\xE9i w\xE9i %{count} Zeechen)"
        },
        too_short: {
          one: "ass ze kuerz (Mniimal %{count} Zeechen)",
          other: "ass ze kuerz (mindestens %{count} Zeechen)"
        },
        wrong_length: {
          one: "huet d\xE9i falsch L\xE4ngt (muss genee een Zeeche sinn)",
          other: "huet d\xE9i falsch L\xE4ngt (musse genee %{count} Zeeche sinn)"
        }
      },
      template: {
        body: "Et gouf Problemer mat d\xEBse Felder:",
        header: {
          one: "%{count} Feeler verh\xEBnnert d'Sp\xE4ichere vu(n) %{model}",
          other: "%{count} Feeler verh\xEBnneren d'Sp\xE4ichere vu(n) %{model}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Sicht w.e.g. eraus"
      },
      submit: {
        create: "ulee\xEBn %{model}",
        submit: "sp\xE4icheren %{model}",
        update: "aktualis\xE9ieren %{model}"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Milliard",
            million: "Millioun",
            quadrillion: {
              one: "Billiard",
              other: "Billiarden"
            },
            thousand: "Dausend",
            trillion: "Billioun",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byten"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", an ",
        two_words_connector: " an ",
        words_connector: ", "
      }
    },
    time: {
      am: "moies",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Auer",
        long: "%A, %d. %B %Y, %H:%M Auer",
        short: "%d. %b %H:%M"
      },
      pm: "m\xEBttes"
    }
  };
  var lo = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0E81\u0EB2\u0E99\u0EA2\u0EB7\u0E99\u0EA2\u0EB1\u0E99\u0E9A\u0ECD\u0EC8\u0EAA\u0EB3\u0EC0\u0EA5\u0EB1\u0E94 : %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0EAD\u0EB2\u0E97\u0EB4\u0E94",
        "\u0E88\u0EB1\u0E99",
        "\u0EAD\u0EB1\u0E87\u0E84\u0EB2\u0E99",
        "\u0E9E\u0EB8\u0E94",
        "\u0E9E\u0EB0\u0EAB\u0EB1\u0E94",
        "\u0EAA\u0EB8\u0E81",
        "\u0EC0\u0EAA\u0EBB\u0EB2"
      ],
      abbr_month_names: [
        null,
        "\u0EA1.\u0E81",
        "\u0E81.\u0E9E",
        "\u0EA1.\u0E99",
        "\u0EA1.\u0EAA",
        "\u0E9E.\u0E9E",
        "\u0EA1\u0EB4.\u0E96",
        "\u0E81.\u0EA5",
        "\u0EAA.\u0EAB",
        "\u0E81.\u0E8D",
        "\u0E95.\u0EA5",
        "\u0E9E.\u0E88",
        "\u0E97.\u0EA7"
      ],
      day_names: [
        "\u0EAD\u0EB2\u0E97\u0EB4\u0E94",
        "\u0E88\u0EB1\u0E99",
        "\u0EAD\u0EB1\u0E87\u0E84\u0EB2\u0E99",
        "\u0E9E\u0EB8\u0E94",
        "\u0E9E\u0EB0\u0EAB\u0EB1\u0E94",
        "\u0EAA\u0EB8\u0E81",
        "\u0EC0\u0EAA\u0EBB\u0EB2"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u0EA1\u0EB1\u0E87\u0E81\u0EAD\u0E99",
        "\u0E81\u0EB8\u0EA1\u0E9E\u0EB2",
        "\u0EA1\u0EB5\u0E99\u0EB2",
        "\u0EC0\u0EA1\u0EAA\u0EB2",
        "\u0E9E\u0EB6\u0E94\u0EAA\u0EB0\u0E9E\u0EB2",
        "\u0EA1\u0EB4\u0E96\u0EB8\u0E99\u0EB2",
        "\u0E81\u0ECD\u0EA5\u0EB0\u0E81\u0EBB\u0E94",
        "\u0EAA\u0EB4\u0E87\u0EAB\u0EB2",
        "\u0E81\u0EB1\u0E99\u0E8D\u0EB2",
        "\u0E95\u0EB8\u0EA5\u0EB2",
        "\u0E9E\u0EB0\u0E88\u0EB4\u0E81",
        "\u0E97\u0EB1\u0E99\u0EA7\u0EB2"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u0E9B\u0EB0\u0EA1\u0EB2\u0E99 %{count} \u0E8A\u0EBB\u0EC8\u0EA7\u0EC2\u0EA1\u0E87",
        about_x_months: "\u0E9B\u0EB0\u0EA1\u0EB2\u0E99 %{count} \u0EC0\u0E94\u0EB7\u0EAD\u0E99",
        about_x_years: "\u0E9B\u0EB0\u0EA1\u0EB2\u0E99 %{count} \u0E9B\u0EB5",
        almost_x_years: "\u0EC0\u0E81\u0EB7\u0EAD\u0E9A %{count} \u0E9B\u0EB5",
        half_a_minute: "\u0EC0\u0E84\u0EB4\u0EC8\u0E87\u0E99\u0EB2\u0E97\u0EB5",
        less_than_x_minutes: "\u0E99\u0EC9\u0EAD\u0E8D\u0E81\u0EA7\u0EC8\u0EB2 %{count} \u0E99\u0EB2\u0E97\u0EB5",
        less_than_x_seconds: "\u0E99\u0EC9\u0EAD\u0E8D\u0E81\u0EA7\u0EC8\u0EB2 %{count} \u0EA7\u0EB4\u0E99\u0EB2\u0E97\u0EB5",
        over_x_years: "\u0EAB\u0EBC\u0EB2\u0E8D\u0E81\u0EA7\u0EC8\u0EB2 %{count} \u0E9B\u0EB5",
        x_days: "%{count} \u0EA1\u0EB7\u0EC9",
        x_minutes: "%{count} \u0E99\u0EB2\u0E97\u0EB5",
        x_months: "%{count} \u0EC0\u0E94\u0EB7\u0EAD\u0E99",
        x_seconds: "%{count} \u0EA7\u0EB4\u0E99\u0EB2\u0E97\u0EB5"
      },
      prompts: {
        day: "\u0EA7\u0EB1\u0E99",
        hour: "\u0E8A\u0EBB\u0EC8\u0EA7\u0EC2\u0EA1\u0E87",
        minute: "\u0E99\u0EB2\u0E97\u0EB5",
        month: "\u0EC0\u0E94\u0EB7\u0EAD\u0E99",
        second: "\u0EA7\u0EB4\u0E99\u0EB2\u0E97\u0EB5",
        year: "\u0E9B\u0EB5"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0E95\u0EC9\u0EAD\u0E87\u0E8D\u0EAD\u0EA1\u0EAE\u0EB1\u0E9A",
        blank: "\u0EC0\u0E9B\u0EBB\u0EC8\u0EB2\u0E9A\u0ECD\u0EC8\u0EC4\u0E94\u0EC9",
        confirmation: "\u0E9A\u0ECD\u0EC8\u0E96\u0EB7\u0E81\u0E81\u0EB1\u0E9A\u0E81\u0EB2\u0E99\u0EA2\u0EB7\u0E99\u0EA2\u0EB1\u0E99",
        empty: "\u0EA7\u0EC8\u0EB2\u0E87\u0EC4\u0EA7\u0EC9\u0E9A\u0ECD\u0EC8\u0EC4\u0E94\u0EC9",
        equal_to: "\u0E95\u0EC9\u0EAD\u0E87\u0EC0\u0E97\u0EBB\u0EC8\u0EB2\u0E81\u0EB1\u0E9A %{count}",
        even: "\u0E95\u0EC9\u0EAD\u0E87\u0EC0\u0E9B\u0EB1\u0E99\u0EC0\u0EA5\u0E81\u0E84\u0EB9\u0EC8",
        exclusion: "\u0EA1\u0EB5\u0E81\u0EB2\u0E99\u0E88\u0EAD\u0E87\u0EC4\u0EA7\u0EC9\u0EC1\u0EA5\u0EC9\u0EA7",
        greater_than: "\u0E95\u0EC9\u0EAD\u0E87\u0EAA\u0EB9\u0E87\u0E81\u0EA7\u0EC8\u0EB2 %{count}",
        greater_than_or_equal_to: "\u0E95\u0EC9\u0EAD\u0E87\u0EAA\u0EB9\u0E87\u0E81\u0EA7\u0EC8\u0EB2 \u0EAB\u0EBC\u0EB7 \u0EC0\u0E97\u0EBB\u0EC8\u0EB2\u0E81\u0EB1\u0E9A %{count}",
        inclusion: "\u0E9A\u0ECD\u0EC8\u0EC4\u0E94\u0EC9\u0EAE\u0EA7\u0EA1\u0EA2\u0EB9\u0EC8\u0EC3\u0E99\u0E9A\u0EB1\u0E99\u0E8A\u0EB5\u0EA5\u0EB2\u0E8D\u0E81\u0EB2\u0E99",
        invalid: "\u0E9A\u0ECD\u0EC8\u0E96\u0EB7\u0E81",
        less_than: "\u0E95\u0EC9\u0EAD\u0E87\u0E95\u0EB3\u0EC8\u0E81\u0EA7\u0EC8\u0EB2 %{count}",
        less_than_or_equal_to: "\u0E95\u0EC9\u0EAD\u0E87\u0E95\u0EB3\u0EC8\u0E81\u0EA7\u0EC8\u0EB2 \u0EAB\u0EBC\u0EB7 \u0EC0\u0E97\u0EBB\u0EC8\u0EB2\u0E81\u0EB1\u0E9A %{count}",
        not_a_number: "\u0E9A\u0ECD\u0EC8\u0EC1\u0EA1\u0EC8\u0E99\u0E95\u0EBB\u0EA7\u0EC0\u0EA5\u0E81",
        odd: "\u0E95\u0EC9\u0EAD\u0E87\u0EC0\u0E9B\u0EB1\u0E99\u0EC0\u0EA5\u0E81\u0E84\u0EB5\u0E81",
        taken: "\u0EAE\u0EB1\u0E9A\u0EC0\u0EAD\u0EBB\u0EB2\u0EC4\u0E9B\u0EC1\u0EA5\u0EC9\u0EA7",
        too_long: "\u0E8D\u0EB2\u0EA7\u0EC2\u0E9E\u0E94 (\u0EAA\u0EB9\u0E87\u0EAA\u0EB8\u0E94\u0E84\u0EB7 %{count} \u0E95\u0EBB\u0EA7\u0EAD\u0EB1\u0E81\u0EAA\u0EAD\u0E99)",
        too_short: "\u0EAA\u0EB1\u0EC9\u0E99\u0EC2\u0E9E\u0E94 (\u0E95\u0EB3\u0EC8\u0EAA\u0EB8\u0E94\u0E84\u0EB7 %{count} \u0E95\u0EBB\u0EA7\u0EAD\u0EB1\u0E81\u0EAA\u0EAD\u0E99)",
        wrong_length: "\u0E84\u0EA7\u0EB2\u0EA1\u0E8D\u0EB2\u0EA7\u0E9C\u0EB4\u0E94 (\u0E84\u0EA7\u0E99\u0E88\u0EB0\u0EC0\u0E9B\u0EB1\u0E99 %{count} \u0E95\u0EBB\u0EA7\u0EAD\u0EB1\u0E81\u0EAA\u0EAD\u0E99)"
      },
      template: {
        body: "\u0E81\u0EB0\u0EA5\u0EB8\u0E99\u0EB2\u0E81\u0EA7\u0E94\u0EAA\u0EAD\u0E9A\u0E82\u0ECD\u0EC9\u0EA1\u0EB9\u0E99\u0EC3\u0E99\u0EAB\u0EC9\u0EAD\u0E87\u0E95\u0ECD\u0EC8\u0EC4\u0E9B\u0E99\u0EB5\u0EC9 :",
        header: "\u0E9A\u0ECD\u0EC8\u0EAA\u0EB2\u0EA1\u0EB2\u0E94\u0E9A\u0EB1\u0E99\u0E97\u0EB6\u0E81 %{model} \u0EC4\u0E94\u0EC9\u0EC0\u0E99\u0EB7\u0EC8\u0EAD\u0E87\u0E88\u0EB2\u0E81 \u0EC0\u0E81\u0EB5\u0E94 %{count} \u0E82\u0ECD\u0EC9\u0E9C\u0EB4\u0E94\u0E9E\u0EB2\u0E94"
      }
    },
    helpers: {
      select: {
        prompt: "\u0E42\u0E1B\u0E23\u0E14\u0E40\u0E25\u0E37\u0E2D\u0E01"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "Kip"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Bytes",
              many: "Bytes",
              one: "Byte",
              other: "Bytes",
              two: "Bytes",
              zero: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0EC1\u0EA5\u0EB0 ",
        two_words_connector: "\u0EC1\u0EA5\u0EB0 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0EC0\u0E8A\u0EBB\u0EC9\u0EB2",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M \u0E19.",
        short: "%d %b %H:%M \u0E19."
      },
      pm: "\u0EC1\u0EA5\u0E87"
    }
  };
  var lt = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Nepraeitos patikros: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Negalima i\u0161trinti \u012Fra\u0161\u0173 nes priklausomi %{record} egzistuoja",
            has_one: "Negalima i\u0161trinti \u012Fra\u0161o nes priklausomas %{record} egzistuoja"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sek",
        "Pir",
        "Ant",
        "Tre",
        "Ket",
        "Pen",
        "\u0160e\u0161"
      ],
      abbr_month_names: [
        null,
        "Sau",
        "Vas",
        "Kov",
        "Bal",
        "Geg",
        "Bir",
        "Lie",
        "Rgp",
        "Rgs",
        "Spa",
        "Lap",
        "Grd"
      ],
      day_names: [
        "sekmadienis",
        "pirmadienis",
        "antradienis",
        "tre\u010Diadienis",
        "ketvirtadienis",
        "penktadienis",
        "\u0161e\u0161tadienis"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y m. %B %d d.",
        short: "%b %d"
      },
      month_names: [
        null,
        "sausio",
        "vasario",
        "kovo",
        "baland\u017Eio",
        "gegu\u017E\u0117s",
        "bir\u017Eelio",
        "liepos",
        "rugpj\u016B\u010Dio",
        "rugs\u0117jo",
        "spalio",
        "lapkri\u010Dio",
        "gruod\u017Eio"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "apie %{count} valandas",
          one: "apie %{count} valand\u0105",
          other: "apie %{count} valand\u0173"
        },
        about_x_months: {
          few: "apie %{count} m\u0117nesius",
          one: "apie %{count} m\u0117nes\u012F",
          other: "apie %{count} m\u0117nesi\u0173"
        },
        about_x_years: {
          few: "apie %{count} metus",
          one: "apie %{count} metus",
          other: "apie %{count} met\u0173"
        },
        almost_x_years: {
          few: "beveik %{count} metai",
          one: "beveik %{count} metai",
          other: "beveik %{count} met\u0173"
        },
        half_a_minute: "pus\u0117 minut\u0117s",
        less_than_x_minutes: {
          few: "ma\u017Eiau nei %{count} minut\u0117s",
          one: "ma\u017Eiau nei %{count} minut\u0117",
          other: "ma\u017Eiau nei %{count} minu\u010Di\u0173"
        },
        less_than_x_seconds: {
          few: "ma\u017Eiau nei %{count} sekund\u0117s",
          one: "ma\u017Eiau nei %{count} sekund\u0117",
          other: "ma\u017Eiau nei %{count} sekund\u017Ei\u0173"
        },
        over_x_years: {
          few: "vir\u0161 %{count} met\u0173",
          one: "vir\u0161 %{count} met\u0173",
          other: "vir\u0161 %{count} met\u0173"
        },
        x_days: {
          few: "%{count} dienos",
          one: "%{count} diena",
          other: "%{count} dien\u0173"
        },
        x_minutes: {
          few: "%{count} minut\u0117s",
          one: "%{count} minut\u0117",
          other: "%{count} minu\u010Di\u0173"
        },
        x_months: {
          few: "%{count} m\u0117nesiai",
          one: "%{count} m\u0117nesis",
          other: "%{count} m\u0117nesi\u0173"
        },
        x_seconds: {
          few: "%{count} sekund\u0117s",
          one: "%{count} sekund\u0117",
          other: "%{count} sekund\u017Ei\u0173"
        },
        x_years: {
          few: "%{count} metai",
          one: "%{count} metai",
          other: "%{count} metai"
        }
      },
      prompts: {
        day: "Diena",
        hour: "Valanda",
        minute: "Minut\u0117",
        month: "M\u0117nuo",
        second: "Sekund\u0117s",
        year: "Metai"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "turi b\u016Bti patvirtintas",
        blank: "negali b\u016Bti tu\u0161\u010Dias",
        confirmation: "neteisingai pakartotas",
        empty: "negali b\u016Bti tu\u0161\u010Dias",
        equal_to: "turi b\u016Bti lygus %{count}",
        even: "turi b\u016Bti lyginis skai\u010Dius",
        exclusion: "yra rezervuotas",
        greater_than: "turi b\u016Bti didesnis u\u017E %{count}",
        greater_than_or_equal_to: "turi b\u016Bti didesnis arba lygus %{count}",
        in: "turi b\u016Bti skai\u010Diuje %{count}",
        inclusion: "nenumatyta reik\u0161m\u0117",
        invalid: "neteisingas",
        less_than: "turi b\u016Bti ma\u017Eesnis u\u017E %{count}",
        less_than_or_equal_to: "turi b\u016Bti ma\u017Eesnis arba lygus %{count}",
        model_invalid: "Tikrinimo klaida: %{errors}",
        not_a_number: "ne skai\u010Dius",
        not_an_integer: "privalo b\u016Bti sveikas skai\u010Dius",
        odd: "turi b\u016Bti nelyginis skai\u010Dius",
        other_than: "privalo b\u016Bti kitoks nei %{count}",
        present: "turi b\u016Bti tu\u0161\u010Dias",
        required: "turi egzistuoti",
        taken: "jau u\u017Eimtas",
        too_long: {
          few: "per ilgas (daugiausiai %{count} simboliai)",
          one: "per ilgas (daugiausiai %{count} simbolis)",
          other: "per ilgas (daugiausiai %{count} simboli\u0173)"
        },
        too_short: {
          few: "per trumpas (ma\u017Eiausiai %{count} simboliai)",
          one: "per trumpas (ma\u017Eiausiai %{count} simbolis)",
          other: "per trumpas (ma\u017Eiausiai %{count} simboli\u0173)"
        },
        wrong_length: "neteisingo ilgio (turi b\u016Bti %{count} simboliai)"
      },
      template: {
        body: "\u0160iuose laukuose yra klaid\u0173:",
        header: {
          few: "I\u0161saugant objekt\u0105 %{model} rastos %{count} klaidos",
          one: "I\u0161saugant objekt\u0105 %{model} rasta %{count} klaida",
          other: "I\u0161saugant objekt\u0105 %{model} rasta %{count} klaid\u0173"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Pra\u0161om pasirinkti"
      },
      submit: {
        create: "Sukurti %{model}",
        submit: "I\u0161saugoti %{model}",
        update: "Atnaujinti %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Milijardas",
            million: "Milijonas",
            quadrillion: "Kvadrilijonas",
            thousand: "T\u016Bkstantis",
            trillion: "Trilijonas",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Baitai",
              one: "Baitas",
              other: "Bait\u0173"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " ir ",
        two_words_connector: " ir ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%Y %B %d %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var lv = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "P\u0101rbaude neizdev\u0101s: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Nevar dz\u0113st ierakstu, jo ir atkar\u012Bgi %{record}",
            has_one: "Nevar dz\u0113st ierakstu, jo ir atkar\u012Bgs %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Sv.",
        "P.",
        "O.",
        "T.",
        "C.",
        "Pk.",
        "S."
      ],
      abbr_month_names: [
        null,
        "Janv",
        "Febr",
        "Marts",
        "Apr",
        "Maijs",
        "J\u016Bn",
        "J\u016Bl",
        "Aug",
        "Sept",
        "Okt",
        "Nov",
        "Dec"
      ],
      day_names: [
        "sv\u0113tdiena",
        "pirmdiena",
        "otrdiena",
        "tre\u0161diena",
        "ceturtdiena",
        "piektdiena",
        "sestdiena"
      ],
      formats: {
        default: "%d.%m.%Y.",
        long: "%Y. gada %e. %B",
        short: "%e. %B"
      },
      month_names: [
        null,
        "janv\u0101r\u012B",
        "febru\u0101r\u012B",
        "mart\u0101",
        "apr\u012Bl\u012B",
        "maij\u0101",
        "j\u016Bnij\u0101",
        "j\u016Blij\u0101",
        "august\u0101",
        "septembr\u012B",
        "oktobr\u012B",
        "novembr\u012B",
        "decembr\u012B"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "apm\u0113ram %{count} stunda",
          other: "apm\u0113ram %{count} stundas",
          zero: "apm\u0113ram %{count} stundas"
        },
        about_x_months: {
          one: "apm\u0113ram %{count} m\u0113nesis",
          other: "apm\u0113ram %{count} m\u0113ne\u0161i",
          zero: "apm\u0113ram %{count} m\u0113ne\u0161i"
        },
        about_x_years: {
          one: "apm\u0113ram %{count} gads",
          other: "apm\u0113ram %{count} gadi",
          zero: "apm\u0113ram %{count} gadi"
        },
        almost_x_years: {
          one: "gandr\u012Bz %{count} gads",
          other: "gandr\u012Bz %{count} gadi",
          zero: "gandr\u012Bz %{count} gadi"
        },
        half_a_minute: "pusmin\u016Bte",
        less_than_x_minutes: {
          one: "maz\u0101k par %{count} min\u016Bti",
          other: "maz\u0101k par %{count} min\u016Bt\u0113m",
          zero: "maz\u0101k par %{count} min\u016Bt\u0113m"
        },
        less_than_x_seconds: {
          one: "maz\u0101k par %{count} sekundi",
          other: "maz\u0101k par %{count} sekund\u0113m",
          zero: "maz\u0101k par %{count} sekund\u0113m"
        },
        over_x_years: {
          one: "vair\u0101k k\u0101 %{count} gads",
          other: "vair\u0101k k\u0101 %{count} gadi",
          zero: "vair\u0101k k\u0101 %{count} gadi"
        },
        x_days: {
          one: "%{count} diena",
          other: "%{count} dienas",
          zero: "%{count} dienas"
        },
        x_minutes: {
          one: "%{count} min\u016Bte",
          other: "%{count} min\u016Btes",
          zero: "%{count} min\u016Btes"
        },
        x_months: {
          one: "%{count} m\u0113nesis",
          other: "%{count} m\u0113ne\u0161i",
          zero: "%{count} m\u0113ne\u0161i"
        },
        x_seconds: {
          one: "%{count} sekunde",
          other: "%{count} sekundes",
          zero: "%{count} sekundes"
        }
      },
      prompts: {
        day: "diena",
        hour: "stunda",
        minute: "min\u016Bte",
        month: "m\u0113nesis",
        second: "sekunde",
        year: "gads"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "ir j\u0101piekr\u012Bt",
        blank: "ir j\u0101b\u016Bt aizpild\u012Btam",
        confirmation: "nesakr\u012Bt ar apstiprin\u0101jumu",
        empty: "ir j\u0101b\u016Bt aizpild\u012Btam",
        equal_to: "ir j\u0101b\u016Bt vien\u0101dam ar %{count}",
        even: "ir j\u0101b\u016Bt p\u0101ra skaitlim",
        exclusion: "nav pieejams",
        greater_than: "ir j\u0101b\u016Bt liel\u0101kam par %{count}",
        greater_than_or_equal_to: "ir j\u0101b\u016Bt liel\u0101kam vai vien\u0101dam ar %{count}",
        inclusion: "nav iek\u013Cauts sarakst\u0101",
        invalid: "nav der\u012Bgs",
        less_than: "ir j\u0101b\u016Bt maz\u0101kam par %{count}",
        less_than_or_equal_to: "ir j\u0101b\u016Bt maz\u0101kam vai vien\u0101dam ar %{count}",
        model_invalid: "Valid\u0101cija neizdev\u0101s: %{errors}",
        not_a_number: "nav skaitlis",
        not_an_integer: "ir j\u0101b\u016Bt veselam skaitlim",
        odd: "ir j\u0101b\u016Bt nep\u0101ra skaitlim",
        other_than: "j\u0101b\u016Bt citam nek\u0101 %{count}",
        present: "j\u0101b\u016Bt tuk\u0161am",
        required: "ir j\u0101b\u016Bt",
        taken: "ir jau aiz\u0146emts",
        too_long: {
          one: "ir par garu (maksimums ir %{count} simbols)",
          other: "ir par garu (maksimums ir %{count} simboli)",
          zero: "ir par garu (maksimums ir %{count} simboli)"
        },
        too_short: {
          one: "ir par \u012Bsu (minimums ir %{count} simbols)",
          other: "ir par \u012Bsu (minimums ir %{count} simboli)",
          zero: "ir par \u012Bsu (minimums ir %{count} simboli)"
        },
        wrong_length: {
          one: "ir nepareizs garums (j\u0101b\u016Bt %{count} simbolam)",
          other: "ir nepareizs garums (j\u0101b\u016Bt %{count} simboliem)",
          zero: "ir nepareizs garums (j\u0101b\u016Bt %{count} simboliem)"
        }
      },
      template: {
        body: "Probl\u0113mas ir \u0161ajos ievades laukos:",
        header: {
          one: "D\u0113\u013C %{count} k\u013C\u016Bdas \u0161is %{model} netika saglab\u0101ts",
          other: "D\u0113\u013C %{count} k\u013C\u016Bd\u0101m \u0161is %{model} netika saglab\u0101ts",
          zero: "D\u0113\u013C %{count} k\u013C\u016Bd\u0101m \u0161is %{model} netika saglab\u0101ts"
        }
      }
    },
    helpers: {
      select: {
        prompt: "L\u016Bdzu izv\u0113lies"
      },
      submit: {
        create: "Izveidot %{model}",
        submit: "Saglab\u0101t %{model}",
        update: "Atjaunin\u0101t %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "miljards",
              other: "miljardi",
              zero: "miljardi"
            },
            million: {
              one: "miljons",
              other: "miljoni",
              zero: "miljoni"
            },
            quadrillion: {
              one: "kvadriljons",
              other: "kvadriljoni",
              zero: "kvadriljoni"
            },
            thousand: {
              one: "t\u016Bkstotis",
              other: "t\u016Bksto\u0161i",
              zero: "t\u016Bksto\u0161i"
            },
            trillion: {
              one: "triljons",
              other: "triljoni",
              zero: "triljoni"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "baits",
              other: "baiti",
              zero: "baiti"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " un ",
        two_words_connector: " un ",
        words_connector: ", "
      }
    },
    time: {
      am: "priek\u0161pusdiena",
      formats: {
        default: "%Y. gada %e. %B, %H:%M",
        long: "%Y. gada %e. %B, %H:%M:%S",
        short: "%d.%m.%Y., %H:%M"
      },
      pm: "p\u0113cpusdiena"
    }
  };
  var mg = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Tsy tontosa ny fankatoavana : %{errors}",
          restrict_dependent_destroy: {
            has_many: "Tsy afaka mamafa io andalana io ianao satria misy %{record} betsaka miankina aminy",
            has_one: "Tsy afaka mamafa io andalana io ianao satria misy %{record} iray miankina amin'io"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Alah",
        "Alats",
        "Tal",
        "Alar",
        "Alak",
        "Zom",
        "Asab"
      ],
      abbr_month_names: [
        null,
        "jan.",
        "feb.",
        "mar.",
        "apr.",
        "may",
        "jona",
        "jolay.",
        "aog",
        "sept.",
        "okt.",
        "nov.",
        "des."
      ],
      day_names: [
        "Alahady",
        "Alatsinainy",
        "Talata",
        "Alarobia",
        "Alakamisy",
        "Zoma",
        "Asabotsy"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "janoary",
        "febroary",
        "martsa",
        "aprily",
        "may",
        "jona",
        "jolay",
        "aogositra",
        "septambra",
        "aktobra",
        "novambra",
        "desambra"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "adiny iray eo ho eo",
          other: "adiny %{count} eo ho eo"
        },
        about_x_months: {
          one: "iray volana eo ho eo",
          other: "volana %{count} eo ho eo"
        },
        about_x_years: {
          one: "herintaona eo ho eo",
          other: "taona %{count} eo ho eo"
        },
        almost_x_years: {
          one: "saika herintaona",
          other: "saika %{count} taona"
        },
        half_a_minute: "antsasak'adiny",
        less_than_x_minutes: {
          one: "latsaky ny iray segondra",
          other: "latsaky ny %{count} minitra",
          zero: "latsaky ny iray minitra"
        },
        less_than_x_seconds: {
          one: "latsaky ny iray segondra",
          other: "latsaky ny %{count} segondra",
          zero: "latsaky ny iray segondra"
        },
        over_x_years: {
          one: "Herintaona mahery",
          other: "maherin'ny %{count} taona"
        },
        x_days: {
          one: "%{count} andro",
          other: "%{count} andro"
        },
        x_minutes: {
          one: "%{count} minitra",
          other: "%{count} minitra"
        },
        x_months: {
          one: "%{count} volana",
          other: "%{count} volana"
        },
        x_seconds: {
          one: "%{count} segondra",
          other: "%{count} segondra"
        },
        x_years: {
          one: "%{count} taona",
          other: "%{count} taona"
        }
      },
      prompts: {
        day: "Andro",
        hour: "Ora",
        minute: "Minitra",
        month: "Volana",
        second: "Segondra",
        year: "Taona"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "tsy maintsy ekena",
        blank: "tsy maintsy fenoina",
        confirmation: "tsy mifanaraka amin'ny %{attribute}",
        empty: "tsy maintsy fenoina",
        equal_to: "tsy maintsy mitovy amin'ny %{count}",
        even: "tsy maintsy miankin-droa",
        exclusion: "Tsy misy",
        greater_than: "Tsy mihoatra ny %{count}",
        greater_than_or_equal_to: "tsy maintsy mihoatra na mitovy amin'ny \xE0 %{count}",
        inclusion: "tsy ao anaty lisitra",
        invalid: "tsy ekena",
        less_than: "tsy maintsy kely noho ny %{count}",
        less_than_or_equal_to: "tsy kely na mitovy nohon'ny %{count}",
        model_invalid: "Fangatahana tsy tontosa: %{errors}",
        not_a_number: "tsy isa io",
        not_an_integer: "tsy maintsy isa tsotra",
        odd: "tsy maintsy impair",
        other_than: "tsy maintsy hafa noho ny %{count}",
        present: "tsy maintsy banga",
        required: "tsy maintsy misy",
        taken: "tsy misy",
        too_long: {
          one: "dia lava loatra (tsy mihoatra ny litera iray)",
          other: "dia lava loatra (tsy mihoatra ny litera %{count})"
        },
        too_short: {
          one: "dia fohy loatra (farafahakeliny litera iray)",
          other: "dia fohy loatra (farafahakeliny litera %{count})"
        },
        wrong_length: {
          one: "tsy amin'ny halavany (tokony ho litera iray)",
          other: "tsy amin'ny halavany (tokony ho litera %{count})"
        }
      },
      template: {
        body: "Hamarino ireo saha manaraka azafady : ",
        header: {
          one: "Tsy azo tadidiana ity %{model} : olana %{count}",
          other: "Tsy azo tadidiana ity %{model} : olana %{count}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Misafidiana azafady"
      },
      submit: {
        create: "Mamorona %{model} iray",
        submit: "Tadidiana ity %{model}",
        update: "Ovaina ity %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "Ar"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "tapitrisa",
            million: "hetsy",
            quadrillion: "hetsy tapitrisa",
            thousand: "Arivo",
            trillion: "arivo tapitrisa",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            eb: "Eo",
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            pb: "Po",
            tb: "To"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " et ",
        two_words_connector: " et ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%d %B %Y %Hh %Mmin %Ss",
        long: "%A %d %B %Y %Hh%M",
        short: "%d %b %Hh%M"
      },
      pm: "pm"
    }
  };
  var mk = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0430 \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0458\u0430: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u041D\u0435\u0434",
        "\u041F\u043E\u043D",
        "\u0412\u0442\u043E",
        "\u0421\u0440\u0435",
        "\u0427\u0435\u0442",
        "\u041F\u0435\u0442",
        "\u0421\u0430\u0431"
      ],
      abbr_month_names: [
        null,
        "\u0408\u0430\u043D",
        "\u0424\u0435\u0432",
        "\u041C\u0430\u0440",
        "\u0410\u043F\u0440",
        "\u041C\u0430\u0458",
        "\u0408\u0443\u043D",
        "\u0408\u0443\u043B",
        "\u0410\u0432\u0433",
        "\u0421\u0435\u043F",
        "\u041E\u043A\u0442",
        "\u041D\u043E\u0435",
        "\u0414\u0435\u043A"
      ],
      day_names: [
        "\u041D\u0435\u0434\u0435\u043B\u0430",
        "\u041F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A",
        "\u0412\u0442\u043E\u0440\u043D\u0438\u043A",
        "\u0421\u0440\u0435\u0434\u0430",
        "\u0427\u0435\u0442\u0432\u0440\u0442\u043E\u043A",
        "\u041F\u0435\u0442\u043E\u043A",
        "\u0421\u0430\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%B %e, %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u0408\u0430\u043D\u0443\u0430\u0440\u0438",
        "\u0424\u0435\u0432\u0440\u0443\u0430\u0440\u0438",
        "\u041C\u0430\u0440\u0442",
        "\u0410\u043F\u0440\u0438\u043B",
        "\u041C\u0430\u0458",
        "\u0408\u0443\u043D\u0438",
        "\u0408\u0443\u043B\u0438",
        "\u0410\u0432\u0433\u0443\u0441\u0442",
        "\u0421\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438",
        "\u041E\u043A\u0442\u043E\u043C\u0432\u0440\u0438",
        "\u041D\u043E\u0435\u043C\u0432\u0440\u0438",
        "\u0414\u0435\u043A\u0435\u043C\u0432\u0440\u0438"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u043E\u043A\u043E\u043B\u0443 %{count} \u0447\u0430\u0441",
          other: "\u043E\u043A\u043E\u043B\u0443 %{count} \u0447\u0430\u0441\u0430"
        },
        about_x_months: {
          one: "\u043E\u043A\u043E\u043B\u0443 %{count} \u043C\u0435\u0441\u0435\u0446",
          other: "\u043E\u043A\u043E\u043B\u0443 %{count} \u043C\u0435\u0441\u0435\u0446\u0438"
        },
        about_x_years: {
          one: "\u043E\u043A\u043E\u043B\u0443 %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u043E\u043A\u043E\u043B\u0443 %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        almost_x_years: {
          one: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        half_a_minute: "\u043F\u043E\u043B\u0430 \u043C\u0438\u043D\u0443\u0442\u0430",
        less_than_x_minutes: {
          one: "\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          other: "\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442\u0438"
        },
        less_than_x_seconds: {
          one: "\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        },
        over_x_years: {
          one: "\u043D\u0430\u0434 %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u043D\u0430\u0434 %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        x_days: {
          one: "%{count} \u0434\u0435\u043D",
          other: "%{count} \u0434\u0435\u043D\u043E\u0432\u0438"
        },
        x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0438"
        },
        x_months: {
          one: "%{count} \u043C\u0435\u0441\u0435\u0446",
          other: "%{count} \u043C\u0435\u0441\u0435\u0446\u0438"
        },
        x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        }
      },
      prompts: {
        day: "\u0414\u0435\u043D",
        hour: "\u0427\u0430\u0441",
        minute: "\u041C\u0438\u043D\u0443\u0442\u0430",
        month: "\u041C\u0435\u0441\u0435\u0446",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434\u0438",
        year: "\u0413\u043E\u0434\u0438\u043D\u0430"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0440\u0438\u0444\u0430\u0442\u0435\u043D",
        blank: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0437\u0430\u0434\u0430\u0434\u0435\u043D",
        confirmation: "\u043D\u0435 \u0441\u0435 \u0441\u043E\u0432\u043F\u0430\u0453\u0430 \u0441\u043E \u0441\u0432\u043E\u0458\u0430\u0442\u0430 \u043F\u043E\u0442\u0432\u0440\u0434\u0430",
        empty: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0437\u0430\u0434\u0430\u0434\u0435\u043D",
        equal_to: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0435\u0434\u043D\u0430\u043A\u0432\u043E \u043D\u0430 %{count}",
        even: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0430\u0440\u043D\u043E",
        exclusion: "\u043D\u0435 \u0435 \u0434\u043E\u0441\u0442\u0430\u043F\u043D\u043E",
        greater_than: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0433\u043E\u043B\u0435\u043C\u043E \u043E\u0434 %{count}",
        greater_than_or_equal_to: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0433\u043E\u043B\u0435\u043C\u043E \u0438\u043B\u0438 \u0435\u0434\u043D\u0430\u043A\u0432\u043E \u043D\u0430 %{count}",
        inclusion: "\u043D\u0435 \u0435 \u0432\u043E \u043B\u0438\u0441\u0442\u0430\u0442\u0430",
        invalid: "\u043D\u0435 \u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0435\u043D",
        less_than: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u043C\u0430\u043B\u043E \u043E\u0434 %{count}",
        less_than_or_equal_to: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u043C\u0430\u043B\u043E \u0438\u043B\u0438 \u0435\u0434\u043D\u0430\u043A\u0432\u043E \u043D\u0430 %{count}",
        not_a_number: "\u043D\u0435 \u0435 \u0431\u0440\u043E\u0458 ",
        not_an_integer: "\u043D\u0435 \u0435 \u0446\u0435\u043B \u0431\u0440\u043E\u0458",
        odd: "\u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043D\u0435\u043F\u0430\u0440\u043D\u043E",
        taken: "\u0435 \u0437\u0430\u0444\u0430\u0442\u0435\u043D\u043E",
        too_long: {
          one: "\u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433 (\u043D\u0435 \u043F\u043E\u0432\u0435\u045C\u0435 \u043E\u0434 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440)",
          other: "\u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433 (\u043D\u0435 \u043F\u043E\u0432\u0435\u045C\u0435 \u043E\u0434 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438)"
        },
        too_short: {
          one: "\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043E\u043A (\u043D\u0435 \u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440)",
          other: "\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043E\u043A (\u043D\u0435 \u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438)"
        },
        wrong_length: {
          one: "\u043D\u0435\u0441\u043E\u043E\u0434\u0432\u0435\u0442\u043D\u0430 \u0434\u043E\u043B\u0436\u0438\u043D\u0430 (\u043C\u043E\u0440\u0430 \u0434\u0430 \u0438\u043C\u0430\u0442\u0435 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440)",
          other: "\u043D\u0435\u0441\u043E\u043E\u0434\u0432\u0435\u0442\u043D\u0430 \u0434\u043E\u043B\u0436\u0438\u043D\u0430 (\u043C\u043E\u0440\u0430 \u0434\u0430 \u0438\u043C\u0430\u0442\u0435 %{count} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438)"
        }
      },
      template: {
        body: "\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043F\u0440\u043E\u0432\u0435\u0440\u0435\u0442\u0435 \u0433\u0438 \u0441\u043B\u0435\u0434\u043D\u0438\u0442\u0435 \u043F\u043E\u043B\u0438\u045A\u0430:",
        header: {
          one: "\u041D\u0435 \u0443\u0441\u043F\u0435\u0430\u0432 \u0434\u0430 \u0433\u043E \u0437\u0430\u0447\u0443\u0432\u0430\u043C %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0430.",
          other: "\u041D\u0435 \u0443\u0441\u043F\u0435\u0430\u0432 \u0434\u0430 \u0433\u043E \u0437\u0430\u0447\u0443\u0432\u0430\u043C %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0438."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u041E\u0434\u0431\u0435\u0440\u0435\u0442\u0435"
      },
      submit: {
        create: "\u041A\u0440\u0435\u0438\u0440\u0430 %{model}",
        submit: "\u0417\u0430\u0447\u0443\u0432\u0430\u0458 %{model}",
        update: "\u0418\u0437\u043C\u0435\u043D\u0438 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "MKD"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0438\u043B\u0458\u0430\u0434\u0438",
            million: "\u043C\u0438\u043B\u0458\u043E\u043D\u0438",
            quadrillion: "\u043C\u0438\u043B\u0458\u0430\u0440\u0434\u0438",
            thousand: "\u0442\u0440\u0438\u043B\u0458\u043E\u043D\u0438",
            trillion: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u0458\u043E\u043D\u0438",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0431\u0430\u0458\u0442",
              other: "\u0431\u0430\u0458\u0442\u0438"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0438 ",
        two_words_connector: " \u0438 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0410\u041C",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %Z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u041F\u041C"
    }
  };
  var ml = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "%{record} \u0D06\u0D2F\u0D3F \u0D2C\u0D28\u0D4D\u0D26\u0D02 \u0D09\u0D33\u0D4D\u0D33\u0D24\u0D3F\u0D28\u0D3E\u0D7D \u0D28\u0D40\u0D15\u0D4D\u0D15\u0D02 \u0D1A\u0D46\u0D2F\u0D4D\u0D2F\u0D3E\u0D7B \u0D2A\u0D31\u0D4D\u0D31\u0D3F\u0D32\u0D4D\u0D32",
            has_one: "%{record} \u0D06\u0D2F\u0D3F \u0D2C\u0D28\u0D4D\u0D26\u0D02 \u0D09\u0D33\u0D4D\u0D33\u0D24\u0D3F\u0D28\u0D3E\u0D7D \u0D28\u0D40\u0D15\u0D4D\u0D15\u0D02 \u0D1A\u0D46\u0D2F\u0D4D\u0D2F\u0D3E\u0D7B \u0D2A\u0D31\u0D4D\u0D31\u0D3F\u0D32\u0D4D\u0D32"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0D1E\u0D3E.",
        "\u0D24\u0D3F.",
        "\u0D1A\u0D4A.",
        "\u0D2C\u0D41.",
        "\u0D35\u0D4D\u0D2F\u0D3E.",
        "\u0D35\u0D46.",
        "\u0D36."
      ],
      abbr_month_names: [
        null,
        "\u0D1C\u0D28\u0D41.",
        "\u0D2B\u0D46\u0D2C\u0D4D\u0D30.",
        "\u0D2E\u0D3E\u0D7C.",
        "\u0D0E\u0D2A\u0D4D\u0D30\u0D3F.",
        "\u0D2E\u0D46\u0D2F\u0D4D.",
        "\u0D1C\u0D42\u0D23\u0D4D\u200D.",
        "\u0D1C\u0D42\u0D32\u0D48.",
        "\u0D06\u0D17.",
        "\u0D38\u0D46\u0D2A\u0D4D\u0D24\u0D02.",
        "\u0D12\u0D15\u0D4D\u0D1F\u0D4B.",
        "\u0D28\u0D35\u0D02.",
        "\u0D21\u0D3F\u0D38\u0D02."
      ],
      day_names: [
        "\u0D1E\u0D3E\u0D2F\u0D30\u0D4D\u200D",
        "\u0D24\u0D3F\u0D19\u0D4D\u0D15\u0D33\u0D4D\u200D",
        "\u0D1A\u0D4A\u0D35\u0D4D\u0D35",
        "\u0D2C\u0D41\u0D27\u0D7B",
        "\u0D35\u0D4D\u0D2F\u0D3E\u0D34\u0D02",
        "\u0D35\u0D46\u0D33\u0D4D\u0D33\u0D3F",
        "\u0D36\u0D28\u0D3F"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0D1C\u0D28\u0D41\u0D35\u0D30\u0D3F",
        "\u0D2B\u0D46\u0D2C\u0D4D\u0D30\u0D41\u0D35\u0D30\u0D3F",
        "\u0D2E\u0D3E\u0D7C\u0D1A\u0D4D\u0D1A\u0D4D",
        "\u0D0F\u0D2A\u0D4D\u0D30\u0D3F\u0D7D",
        "\u0D2E\u0D46\u0D2F\u0D4D",
        "\u0D1C\u0D42\u0D23\u0D4D\u200D",
        "\u0D1C\u0D42\u0D32\u0D48",
        "\u0D13\u0D17\u0D38\u0D4D\u0D31\u0D4D\u0D31\u0D4D\u200C",
        "\u0D38\u0D46\u0D2A\u0D4D\u0D31\u0D4D\u0D31\u0D02\u0D2C\u0D7C",
        "\u0D12\u0D15\u0D4D\u0D1F\u0D4B\u0D2C\u0D7C",
        "\u0D28\u0D35\u0D02\u0D2C\u0D7C",
        "\u0D21\u0D3F\u0D38\u0D02\u0D2C\u0D7C"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D2E\u0D23\u0D3F\u0D15\u0D4D\u0D15\u0D42\u0D7C",
          other: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D2E\u0D23\u0D3F\u0D15\u0D4D\u0D15\u0D42\u0D7C"
        },
        about_x_months: {
          one: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D2E\u0D3E\u0D38\u0D02",
          other: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D2E\u0D3E\u0D38\u0D02"
        },
        about_x_years: {
          one: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D35\u0D7C\u0D37\u0D02",
          other: "\u0D0E\u0D15\u0D26\u0D47\u0D36\u0D02 %{count} \u0D35\u0D7C\u0D37\u0D02"
        },
        almost_x_years: {
          one: "\u0D0F\u0D24\u0D3E\u0D23\u0D4D\u0D1F\u0D4D  %{count} \u0D35\u0D7C\u0D37\u0D02",
          other: "\u0D0F\u0D24\u0D3E\u0D23\u0D4D\u0D1F\u0D4D  %{count} \u0D35\u0D7C\u0D37\u0D02"
        },
        half_a_minute: "\u0D05\u0D30 \u0D38\u0D42\u0D15\u0D4D\u0D37\u0D4D\u0D2E",
        less_than_x_minutes: {
          one: "\u0D12\u0D30\u0D41 \u0D2E\u0D3F\u0D28\u0D41\u0D31\u0D4D\u0D31\u0D3F\u0D28\u0D41 \u0D09\u0D33\u0D4D\u0D33\u0D3F\u0D7D",
          other: "%{count} \u0D2E\u0D3F\u0D28\u0D41\u0D31\u0D4D\u0D31\u0D3F\u0D28\u0D41 \u0D09\u0D33\u0D4D\u0D33\u0D3F\u0D7D"
        },
        less_than_x_seconds: {
          one: "\u0D12\u0D30\u0D41 \u0D28\u0D3F\u0D2E\u0D3F\u0D37\u0D24\u0D4D\u0D24\u0D3F\u0D28\u0D41 \u0D09\u0D33\u0D4D\u0D33\u0D3F\u0D7D",
          other: "%{count} \u0D28\u0D3F\u0D2E\u0D3F\u0D37\u0D24\u0D4D\u0D24\u0D3F\u0D28\u0D41 \u0D09\u0D33\u0D4D\u0D33\u0D3F\u0D7D"
        },
        over_x_years: {
          one: "\u0D12\u0D30\u0D41 \u0D35\u0D30\u0D4D\u0D37\u0D24\u0D4D\u0D24\u0D3F\u0D28\u0D41 \u0D2E\u0D47\u0D32\u0D46",
          other: "%{count} \u0D35\u0D30\u0D4D\u0D37\u0D24\u0D4D\u0D24\u0D3F\u0D28\u0D41 \u0D2E\u0D47\u0D32\u0D46"
        },
        x_days: {
          one: "%{count} \u0D26\u0D3F\u0D35\u0D38\u0D02",
          other: "%{count} \u0D26\u0D3F\u0D35\u0D38\u0D19\u0D4D\u0D19\u0D7E"
        },
        x_minutes: {
          one: "%{count} \u0D2E\u0D3F\u0D28\u0D3F\u0D31\u0D4D\u0D31\u0D4D",
          other: "%{count} \u0D2E\u0D3F\u0D28\u0D3F\u0D31\u0D4D\u0D31\u0D4D"
        },
        x_months: {
          one: "%{count} \u0D2E\u0D3E\u0D38\u0D02",
          other: "%{count} \u0D2E\u0D3E\u0D38\u0D02"
        },
        x_seconds: {
          one: "%{count} \u0D28\u0D3F\u0D2E\u0D3F\u0D37\u0D02",
          other: "%{count} \u0D28\u0D3F\u0D2E\u0D3F\u0D37\u0D02"
        }
      },
      prompts: {
        day: "\u0D26\u0D3F\u0D35\u0D38\u0D02",
        hour: "\u0D2E\u0D23\u0D3F\u0D15\u0D4D\u0D15\u0D42\u0D7C",
        minute: "\u0D38\u0D41\u0D15\u0D4D\u0D37\u0D4D\u0D2E",
        month: "\u0D38\u0D41\u0D15\u0D4D\u0D37\u0D4D\u0D2E",
        second: "\u0D28\u0D3F\u0D2E\u0D3F\u0D37\u0D02",
        year: "\u0D35\u0D7C\u0D37\u0D02"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0D38\u0D4D\u0D35\u0D40\u0D15\u0D30\u0D3F\u0D15\u0D47\u0D23\u0D4D\u0D1F\u0D24\u0D4D  \u0D05\u0D24\u0D4D\u0D2F\u0D3E\u0D35\u0D36\u0D4D\u0D2F\u0D02 \u0D06\u0D23\u0D4D",
        blank: "\u0D12\u0D34\u0D3F\u0D35\u0D3E\u0D2F\u0D3F \u0D15\u0D3F\u0D1F\u0D15\u0D4D\u0D15\u0D41\u0D35\u0D3E\u0D7B \u0D2A\u0D3E\u0D1F\u0D41\u0D33\u0D4D\u0D33\u0D24\u0D32\u0D4D\u0D32",
        confirmation: "%{attribute} \u0D06\u0D2F\u0D3F \u0D38\u0D3E\u0D2E\u0D4D\u0D2F\u0D02 \u0D07\u0D32\u0D4D\u0D32",
        empty: "\u0D12\u0D34\u0D3F\u0D35\u0D3E\u0D2F\u0D3F \u0D15\u0D3F\u0D1F\u0D15\u0D4D\u0D15\u0D41\u0D35\u0D3E\u0D7B \u0D2A\u0D3E\u0D1F\u0D41\u0D33\u0D4D\u0D33\u0D24\u0D32\u0D4D\u0D32",
        equal_to: "%{count} \u0D06\u0D2F\u0D3F \u0D38\u0D3E\u0D2E\u0D4D\u0D2F\u0D02 \u0D35\u0D47\u0D23\u0D02",
        even: "\u0D07\u0D30\u0D1F\u0D4D\u0D1F \u0D38\u0D02\u0D16\u0D4D\u0D2F \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        exclusion: "\u0D15\u0D30\u0D41\u0D24\u0D3F\u0D35\u0D46\u0D1A\u0D4D\u0D1A\u0D3F\u0D30\u0D3F\u0D15\u0D41\u0D28\u0D4D\u0D28\u0D24\u0D3E\u0D23\u0D4D",
        greater_than: "%{count} \u0D28\u0D47\u0D15\u0D3E\u0D7E \u0D35\u0D32\u0D41\u0D24\u0D3E\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        greater_than_or_equal_to: "%{count} \u0D28\u0D41 \u0D24\u0D41\u0D32\u0D4D\u0D2F\u0D2E\u0D4B \u0D05\u0D32\u0D4D\u0D32\u0D46\u0D19\u0D4D\u0D15\u0D3F\u0D7D \u0D35\u0D32\u0D41\u0D24\u0D4B \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        inclusion: "\u0D07\u0D24\u0D3F\u0D7D \u0D09\u0D33\u0D4D\u0D1F\u0D4D\u0D2A\u0D46\u0D1F\u0D4D\u0D1F\u0D3F\u0D1F\u0D4D\u0D1F\u0D3F\u0D32\u0D4D\u0D32",
        invalid: "\u0D05\u0D38\u0D3E\u0D27\u0D41\u0D35\u0D3E\u0D23\u0D4D",
        less_than: "%{count} \u0D28\u0D47\u0D15\u0D3E\u0D7E \u0D1A\u0D46\u0D31\u0D41\u0D24\u0D3E\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        less_than_or_equal_to: "%{count} \u0D28\u0D41 \u0D24\u0D41\u0D32\u0D4D\u0D2F\u0D2E\u0D4B \u0D05\u0D32\u0D4D\u0D32\u0D46\u0D19\u0D4D\u0D15\u0D3F\u0D7D \u0D1A\u0D46\u0D31\u0D41\u0D24\u0D4B \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        model_invalid: "\u0D2E\u0D42\u0D32\u0D4D\u0D2F\u0D28\u0D3F\u0D7C\u0D23\u0D4D\u0D23\u0D2F\u0D02 \u0D2A\u0D30\u0D3E\u0D1C\u0D2F\u0D2A\u0D4D\u0D2A\u0D46\u0D1F\u0D4D\u0D1F\u0D41: %{errors}",
        not_a_number: "\u0D12\u0D30\u0D41 \u0D05\u0D15\u0D4D\u0D15\u0D02 \u0D05\u0D32\u0D4D\u0D32",
        not_an_integer: "\u0D12\u0D30\u0D41 \u0D05\u0D15\u0D4D\u0D15\u0D02 \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        odd: "\u0D12\u0D1F\u0D4D\u0D1F\u0D38\u0D28\u0D4D\u0D18\u0D4D\u0D2F \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        other_than: "must be other than %{count}",
        present: "\u0D12\u0D34\u0D3F\u0D35\u0D3E\u0D2F\u0D3F \u0D07\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        required: "\u0D0E\u0D28\u0D4D\u0D24\u0D3E\u0D2F\u0D3E\u0D32\u0D41\u0D02 \u0D09\u0D23\u0D4D\u0D1F\u0D3E\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02",
        taken: "\u0D07\u0D24\u0D3F\u0D28\u0D41 \u0D2E\u0D41\u0D7B\u0D2A\u0D47 \u0D09\u0D2A\u0D2F\u0D4B\u0D17\u0D3F\u0D1A\u0D4D\u0D1A\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D41\u0D28\u0D4D\u0D28\u0D41",
        too_long: {
          one: "\u0D35\u0D33\u0D30\u0D46 \u0D35\u0D32\u0D41\u0D24\u0D3E\u0D23\u0D4D (\u0D2A\u0D30\u0D2E\u0D3E\u0D35\u0D27\u0D3F %{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D02)",
          other: "\u0D35\u0D33\u0D30\u0D46 \u0D35\u0D32\u0D41\u0D24\u0D3E\u0D23\u0D4D (\u0D2A\u0D30\u0D2E\u0D3E\u0D35\u0D27\u0D3F %{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D19\u0D4D\u0D19\u0D7E)"
        },
        too_short: {
          one: "\u0D35\u0D33\u0D30\u0D46 \u0D1A\u0D46\u0D31\u0D41\u0D24\u0D3E\u0D23\u0D4D (\u0D0F\u0D31\u0D4D\u0D31\u0D35\u0D41\u0D02 \u0D15\u0D41\u0D31\u0D1E\u0D4D\u0D1E\u0D24\u0D4D\u200C  %{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D02)",
          other: "\u0D35\u0D33\u0D30\u0D46 \u0D1A\u0D46\u0D31\u0D41\u0D24\u0D3E\u0D23\u0D4D (\u0D0F\u0D31\u0D4D\u0D31\u0D35\u0D41\u0D02 \u0D15\u0D41\u0D31\u0D1E\u0D4D\u0D1E\u0D24\u0D4D\u200C %{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D19\u0D4D\u0D19\u0D7E)"
        },
        wrong_length: {
          one: "\u0D24\u0D46\u0D31\u0D4D\u0D31\u0D3E\u0D2F \u0D28\u0D40\u0D33\u0D02 \u0D06\u0D23\u0D4D  (%{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D02 \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02)",
          other: "\u0D24\u0D46\u0D31\u0D4D\u0D31\u0D3E\u0D2F \u0D28\u0D40\u0D33\u0D02 \u0D06\u0D23\u0D4D  (%{count} \u0D2A\u0D4D\u0D30\u0D24\u0D40\u0D15\u0D19\u0D4D\u0D19\u0D7E \u0D06\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D23\u0D02)"
        }
      },
      template: {
        body: "\u0D24\u0D3E\u0D34\u0D46 \u0D2A\u0D31\u0D1E\u0D4D\u0D1E\u0D35\u0D2F\u0D3F\u0D7D \u0D24\u0D46\u0D31\u0D4D\u0D31\u0D41\u0D15\u0D7E \u0D09\u0D23\u0D4D\u0D1F\u0D4D:",
        header: {
          one: "%{model} \u0D38\u0D47\u0D35\u0D4D \u0D1A\u0D46\u0D2F\u0D4D\u0D2F\u0D41\u0D28\u0D24\u0D4D\u0D24\u0D3F\u0D7D \u0D28\u0D3F\u0D28\u0D4D\u0D28\u0D41\u0D02 \u0D12\u0D30\u0D41 \u0D24\u0D46\u0D31\u0D4D\u0D31\u0D4D \u0D35\u0D3F\u0D32\u0D15\u0D4D\u0D15\u0D3F\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D41\u0D28\u0D4D\u0D28\u0D41",
          other: "%{model} \u0D38\u0D47\u0D35\u0D4D \u0D1A\u0D46\u0D2F\u0D4D\u0D2F\u0D41\u0D28\u0D24\u0D4D\u0D24\u0D3F\u0D7D \u0D28\u0D3F\u0D28\u0D4D\u0D28\u0D41\u0D02 %{count} \u0D24\u0D46\u0D31\u0D4D\u0D31\u0D41\u0D15\u0D7E \u0D35\u0D3F\u0D32\u0D15\u0D4D\u0D15\u0D3F\u0D2F\u0D3F\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D41\u0D28\u0D4D\u0D28\u0D41"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0D26\u0D2F\u0D35\u0D3E\u0D2F\u0D3F \u0D24\u0D3F\u0D30\u0D1E\u0D4D\u0D1E\u0D46\u0D1F\u0D41\u0D15\u0D4D\u0D15\u0D41\u0D15"
      },
      submit: {
        create: "%{model} \u0D38\u0D43\u0D37\u0D4D\u0D1F\u0D3F\u0D15\u0D4D\u0D15\u0D41\u0D15",
        submit: "%{model} \u0D38\u0D47\u0D35\u0D4D \u0D1A\u0D46\u0D2F\u0D4D\u0D2F\u0D41\u0D15",
        update: "%{model} \u0D24\u0D3F\u0D30\u0D41\u0D24\u0D4D\u0D24\u0D41\u0D15\u0D4D\u0D15"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0D28\u0D42\u0D31\u0D41\u0D15\u0D47\u0D3E\u0D1F\u0D3F",
            million: "\u0D26\u0D36\u0D32\u0D15\u0D4D\u0D37\u0D02",
            quadrillion: "\u0D15\u0D4D\u0D35\u0D3E\u0D21\u0D4D\u0D30\u0D3F\u0D32\u0D4D\u0D2F\u0D7A",
            thousand: "\u0D06\u0D2F\u0D3F\u0D30\u0D02",
            trillion: "\u0D1F\u0D4D\u0D30\u0D3F\u0D32\u0D4D\u0D2F\u0D7A",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0D2C\u0D48\u0D31\u0D4D\u0D31\u0D4D",
              other: "\u0D2C\u0D48\u0D31\u0D4D\u0D31\u0D41\u0D15\u0D7E"
            },
            gb: "\u0D1C\u0D3F.\u0D2C\u0D3F",
            kb: "\u0D15\u0D46.\u0D2C\u0D3F.",
            mb: "\u0D0E\u0D02.\u0D2C\u0D3F.",
            tb: "\u0D1F\u0D3F.\u0D2C\u0D3F"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0D12\u0D2A\u0D4D\u0D2A\u0D02 ",
        two_words_connector: " \u0D12\u0D2A\u0D4D\u0D2A\u0D02 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0D30\u0D3E\u0D35\u0D3F\u0D32\u0D46",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%Y, %B %d %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0D35\u0D48\u0D15\u0D3F\u0D1F\u0D4D\u0D1F\u0D4D"
    }
  };
  var mn = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0428\u0430\u043B\u0433\u0430\u043B\u0442 \u0430\u043C\u0436\u0438\u043B\u0442\u0433\u04AF\u0439: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u041D\u044F",
        "\u0414\u0430",
        "\u041C\u044F",
        "\u041B\u0445",
        "\u041F\u04AF",
        "\u0411\u0430",
        "\u0411\u044F"
      ],
      abbr_month_names: [
        null,
        "1 \u0441\u0430\u0440",
        "2 \u0441\u0430\u0440",
        "3 \u0441\u0430\u0440",
        "4 \u0441\u0430\u0440",
        "5 \u0441\u0430\u0440",
        "6 \u0441\u0430\u0440",
        "7 \u0441\u0430\u0440",
        "8 \u0441\u0430\u0440",
        "9 \u0441\u0430\u0440",
        "10 \u0441\u0430\u0440",
        "11 \u0441\u0430\u0440",
        "12 \u0441\u0430\u0440"
      ],
      day_names: [
        "\u041D\u044F\u043C",
        "\u0414\u0430\u0432\u0430\u0430",
        "\u041C\u044F\u0433\u043C\u0430\u0440",
        "\u041B\u0445\u0430\u0433\u0432\u0430",
        "\u041F\u04AF\u0440\u044D\u0432",
        "\u0411\u0430\u0430\u0441\u0430\u043D",
        "\u0411\u044F\u043C\u0431\u0430"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y %B %d",
        short: "%y-%m-%d"
      },
      month_names: [
        null,
        "1 \u0441\u0430\u0440",
        "2 \u0441\u0430\u0440",
        "3 \u0441\u0430\u0440",
        "4 \u0441\u0430\u0440",
        "5 \u0441\u0430\u0440",
        "6 \u0441\u0430\u0440",
        "7 \u0441\u0430\u0440",
        "8 \u0441\u0430\u0440",
        "9 \u0441\u0430\u0440",
        "10 \u0441\u0430\u0440",
        "11 \u0441\u0430\u0440",
        "12 \u0441\u0430\u0440"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "%{count} \u0446\u0430\u0433 \u043E\u0440\u0447\u0438\u043C",
          other: "%{count} \u0446\u0430\u0433 \u043E\u0440\u0447\u0438\u043C"
        },
        about_x_months: {
          one: "%{count} \u0441\u0430\u0440 \u043E\u0440\u0447\u0438\u043C",
          other: "%{count} \u0441\u0430\u0440 \u043E\u0440\u0447\u0438\u043C"
        },
        about_x_years: {
          one: "%{count} \u0436\u0438\u043B \u043E\u0440\u0447\u0438\u043C",
          other: "%{count} \u0436\u0438\u043B \u043E\u0440\u0447\u0438\u043C"
        },
        almost_x_years: {
          one: "\u0431\u0430\u0440\u0430\u0433 %{count} \u0436\u0438\u043B",
          other: "\u0431\u0430\u0440\u0430\u0433 %{count} \u0436\u0438\u043B"
        },
        half_a_minute: "\u0445\u0430\u0433\u0430\u0441 \u043C\u0438\u043D\u0443\u0442",
        less_than_x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430\u0430\u0441 \u0431\u0430\u0433\u0430",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430\u0430\u0441 \u0431\u0430\u0433\u0430"
        },
        less_than_x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044D\u044D\u0441 \u0431\u0430\u0433\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044D\u044D\u0441 \u0431\u0430\u0433\u0430"
        },
        over_x_years: {
          one: "%{count} \u0436\u0438\u043B\u044D\u044D\u0441 \u0438\u043B\u04AF\u04AF",
          other: "%{count} \u0436\u0438\u043B\u044D\u044D\u0441 \u0438\u043B\u04AF\u04AF"
        },
        x_days: {
          one: "%{count} \u04E9\u0434\u04E9\u0440",
          other: "%{count} \u04E9\u0434\u04E9\u0440"
        },
        x_minutes: {
          one: "%{count} \u043C\u0438\u043D\u0443\u0442",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442"
        },
        x_months: {
          one: "%{count} \u0441\u0430\u0440",
          other: "%{count} \u0441\u0430\u0440"
        },
        x_seconds: {
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434"
        }
      },
      prompts: {
        day: "\u04E8\u0434\u04E9\u0440",
        hour: "\u0426\u0430\u0433",
        minute: "\u041C\u0438\u043D\u0443\u0442",
        month: "\u0421\u0430\u0440",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434",
        year: "\u0416\u0438\u043B"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0445\u04AF\u043B\u044D\u044D\u043D \u0437\u04E9\u0432\u0448\u04E9\u04E9\u0440\u04E9\u0433\u0434\u0441\u04E9\u043D \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        blank: "\u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u0436 \u0431\u043E\u043B\u043E\u0445\u0433\u04AF\u0439",
        confirmation: "\u0430\u0434\u0438\u043B\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430",
        empty: "\u0431\u0430\u0439\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u0436 \u0431\u043E\u043B\u043E\u0445\u0433\u04AF\u0439",
        equal_to: "%{count}-\u0442\u044D\u0439 \u0442\u044D\u043D\u0446\u04AF\u04AF \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        even: "\u0442\u044D\u0433\u0448 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        exclusion: "\u0431\u043E\u043B \u0430\u0448\u0438\u0433\u043B\u0430\u0445\u0430\u0434 \u0445\u043E\u0440\u0438\u043E\u0442\u043E\u0439",
        greater_than: "%{count}-\u0441 \u0438\u0445 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        greater_than_or_equal_to: "%{count}-\u0441 \u0438\u0445 \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0442\u044D\u043D\u0446\u04AF\u04AF \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        inclusion: "\u0436\u0430\u0433\u0441\u0430\u0430\u043B\u0442\u0430\u043D\u0434 \u0430\u043B\u0433\u0430 \u0431\u0430\u0439\u043D\u0430",
        invalid: "\u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430",
        less_than: "%{count}-\u0441 \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        less_than_or_equal_to: "%{count}-\u0441 \u0431\u0430\u0433\u0430 \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0442\u044D\u043D\u0446\u04AF\u04AF \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        not_a_number: "\u0442\u043E\u043E \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430",
        not_an_integer: "\u0431\u04AF\u0445\u044D\u043B \u0442\u043E\u043E \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        odd: "\u0441\u043E\u043D\u0433\u043E\u0439 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439",
        taken: "\u0430\u043B\u044C \u0445\u044D\u0434\u0438\u0439\u043D \u0430\u0432\u0447\u0438\u0445\u0441\u0430\u043D \u0431\u0430\u0439\u043D\u0430",
        too_long: {
          one: "\u0443\u0440\u0442 \u0431\u0430\u0439\u043D\u0430 (\u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0443\u0440\u0442\u0434\u0430\u0430 %{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442)",
          other: "\u0443\u0440\u0442 \u0431\u0430\u0439\u043D\u0430 (\u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0443\u0440\u0442\u0434\u0430\u0430 %{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442)"
        },
        too_short: {
          one: "\u0431\u043E\u0433\u0438\u043D\u043E \u0431\u0430\u0439\u043D\u0430 (\u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 %{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442)",
          other: "\u0431\u043E\u0433\u0438\u043D\u043E \u0431\u0430\u0439\u043D\u0430 (\u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 %{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442)"
        },
        wrong_length: {
          one: "\u0443\u0440\u0442 \u043D\u044C \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430 (%{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439)",
          other: "\u0443\u0440\u0442 \u043D\u044C \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430 (%{count} \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439)"
        }
      },
      template: {
        body: "\u0414\u0430\u0440\u0430\u0430\u0445 \u0442\u0430\u043B\u0431\u0430\u0440\u0443\u0443\u0434 \u0434\u044D\u044D\u0440 \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u043B\u0430\u0430:",
        header: {
          one: "%{count} \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u0441\u0430\u043D \u0442\u0443\u043B %{model} \u0445\u0430\u0434\u0433\u0430\u043B\u0430\u0433\u0434\u0430\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430",
          other: "%{count} \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u0441\u0430\u043D \u0442\u0443\u043B %{model} \u0445\u0430\u0434\u0433\u0430\u043B\u0430\u0433\u0434\u0430\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0421\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443"
      },
      submit: {
        create: "\u04AE\u04AF\u0441\u0433\u044D\u0445",
        submit: "\u0425\u0430\u0434\u0433\u0430\u043B\u0430\u0445",
        update: "\u0428\u0438\u043D\u044D\u0447\u043B\u044D\u0445"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0442\u04E9\u0433."
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0422\u044D\u0440\u0431\u0443\u043C",
            million: "\u0421\u0430\u044F",
            quadrillion: "\u0422\u0443\u043D\u0430\u043C\u0430\u043B",
            thousand: "\u041C\u044F\u043D\u0433\u0430",
            trillion: "\u0418\u0445 \u043D\u0430\u044F\u0434",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0411\u0430\u0439\u0442",
              other: "\u0411\u0430\u0439\u0442"
            },
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0431\u043E\u043B\u043E\u043D ",
        two_words_connector: " \u0431\u043E\u043B\u043E\u043D ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u04E9\u0433\u043B\u04E9\u04E9",
      formats: {
        default: "%Y-%m-%d %H:%M",
        long: "%Y %B %d, %H:%M:%S",
        short: "%y-%m-%d"
      },
      pm: "\u043E\u0440\u043E\u0439"
    }
  };
  var mr_IN = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u092A\u094D\u0930\u092E\u093E\u0923\u0940\u0915\u0930\u0923 \u0905\u092F\u0936\u0938\u094D\u0935\u0940: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0905\u0935\u0932\u0902\u092C\u0942\u0928 %{record} \u0905\u0938\u094D\u0924\u093F\u0924\u094D\u0935\u093E\u0924 \u0905\u0938\u0932\u094D\u092F\u093E\u0928\u0947 \u0930\u0947\u0915\u0949\u0930\u094D\u0921 \u0939\u091F\u0935\u0942 \u0936\u0915\u0924 \u0928\u093E\u0939\u0940",
            has_one: "\u0905\u0935\u0932\u0902\u092C\u0942\u0928 %{record} \u0905\u0938\u094D\u0924\u093F\u0924\u094D\u0935\u093E\u0924 \u0905\u0938\u0932\u094D\u092F\u093E\u0928\u0947 \u0930\u0947\u0915\u0949\u0930\u094D\u0921 \u0939\u091F\u0935\u0942 \u0936\u0915\u0924 \u0928\u093E\u0939\u0940"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0938\u094B\u092E",
        "\u092E\u0902\u0917\u0933",
        "\u092C\u0941\u0927",
        "\u0917\u0941\u0930\u0941",
        "\u0936\u0941\u0915\u094D\u0930",
        "\u0936\u0928\u093F",
        "\u0930\u0935\u093F"
      ],
      abbr_month_names: [
        null,
        "\u091C\u093E\u0928\u0947",
        "\u092B\u0947\u092C\u094D\u0930\u0941",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u090F\u092A\u094D\u0930\u093F",
        "\u092E\u0947",
        "\u091C\u0942\u0928",
        "\u091C\u0941\u0932\u0948",
        "\u0911\u0917",
        "\u0938\u0947\u092A\u094D\u091F\u0947\u0902",
        "\u0911\u0915\u094D\u091F\u094B\u092C\u0930",
        "\u0928\u094B\u0935\u094D\u0939\u0947\u0902",
        "\u0921\u093F\u0938\u0947"
      ],
      day_names: [
        "\u0938\u094B\u092E\u0935\u093E\u0930",
        "\u092E\u0902\u0917\u0933\u0935\u093E\u0930",
        "\u092C\u0941\u0927\u0935\u093E\u0930",
        "\u0917\u0941\u0930\u0941\u0935\u093E\u0930",
        "\u0936\u0941\u0915\u094D\u0930\u0935\u093E\u0930",
        "\u0936\u0928\u093F\u0935\u093E\u0930",
        "\u0930\u0935\u093F\u0935\u093E\u0930"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u091C\u093E\u0928\u0947\u0935\u093E\u0930\u0940",
        "\u092B\u0947\u092C\u094D\u0930\u0941\u0935\u093E\u0930\u0940",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u090F\u092A\u094D\u0930\u093F\u0932",
        "\u092E\u0947",
        "\u091C\u0942\u0928",
        "\u091C\u0941\u0932\u0948",
        "\u0911\u0917\u0938\u094D\u091F",
        "\u0938\u092A\u094D\u091F\u0947\u0902\u092C\u0930",
        "\u0911\u0915\u094D\u091F\u094B\u092C\u0930",
        "\u0928\u094B\u0935\u094D\u0939\u0947\u0902\u092C\u0930",
        "\u0921\u093F\u0938\u0947\u0902\u092C\u0930"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0938\u0941\u092E\u093E\u0930\u0947 \u090F\u0915 \u0924\u093E\u0938",
          other: "\u0938\u0941\u092E\u093E\u0930\u0947 %{count} \u0924\u093E\u0938"
        },
        about_x_months: {
          one: "\u0938\u0941\u092E\u093E\u0930\u0947 %{count} \u092E\u0939\u0940\u0928\u093E",
          other: "\u0938\u0941\u092E\u093E\u0930\u0947 %{count} \u092E\u0939\u093F\u0928\u093E"
        },
        about_x_years: {
          one: "\u0938\u0941\u092E\u093E\u0930\u0947 %{count} \u0935\u0930\u094D\u0937",
          other: "\u0938\u0941\u092E\u093E\u0930\u0947 %{count} \u0935\u0930\u094D\u0937"
        },
        almost_x_years: {
          one: "\u091C\u0935\u0933\u091C\u0935\u0933 \u090F\u0915 \u0935\u0930\u094D\u0937",
          other: "\u091C\u0935\u0933\u091C\u0935\u0933 %{count} \u0935\u0930\u094D\u0937"
        },
        half_a_minute: "\u0905\u0930\u094D\u0927\u093E \u092E\u093F\u0928\u093F\u091F",
        less_than_x_minutes: {
          one: "\u090F\u0915\u093E \u092E\u093F\u0928\u093F\u091F\u093E\u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940",
          other: "%{count} \u092E\u093F\u0928\u093F\u091F\u093E\u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940"
        },
        less_than_x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0902\u0926 \u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940",
          other: "%{count} \u0938\u0947\u0915\u0902\u0926 \u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940"
        },
        over_x_years: {
          one: "\u090F\u0915\u093E \u0935\u0930\u094D\u0937\u093E\u092A\u0947\u0915\u094D\u0937\u093E \u091C\u093E\u0938\u094D\u0924 \u0915\u093E\u0933",
          other: "%{count} \u0935\u0930\u094D\u0937\u093E\u092A\u0947\u0915\u094D\u0937\u093E \u091C\u093E\u0938\u094D\u0924 \u0915\u093E\u0933"
        },
        x_days: {
          one: "\u090F\u0915 \u0926\u093F\u0935\u0938",
          other: "%{count} \u0926\u093F\u0935\u0938"
        },
        x_minutes: {
          one: "\u090F\u0915 \u092E\u093F\u0928\u093F\u091F",
          other: "%{count} \u092E\u093F\u0928\u093F\u091F"
        },
        x_months: {
          one: "\u090F\u0915 \u092E\u0939\u093F\u0928\u093E",
          other: "%{count} \u092E\u0939\u093F\u0928\u093E"
        },
        x_seconds: {
          one: "\u090F\u0915 \u0938\u0947\u0915\u0902\u0926",
          other: "%{count} \u0938\u0947\u0915\u0902\u0926"
        }
      },
      prompts: {
        day: "\u0926\u093F\u0935\u0938",
        hour: "\u0924\u093E\u0938",
        minute: "\u092E\u093F\u0928\u093F\u091F",
        month: "\u092E\u0939\u093F\u0928\u093E",
        second: "\u0938\u0947\u0915\u0902\u0926",
        year: "\u0935\u0930\u094D\u0937"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u092E\u093E\u0928\u094D\u092F \u0915\u0947\u0932\u0947 \u092A\u093E\u0939\u093F\u091C\u0947",
        blank: "\u0930\u093F\u0915\u094D\u0924 \u0920\u0947\u0935\u0924\u093E \u092F\u0947\u0923\u093E\u0930 \u0928\u093E\u0939\u0940",
        confirmation: "%{attribute} \u091C\u0941\u0933\u0924 \u0928\u093E\u0939\u0940",
        empty: "\u0930\u093F\u0915\u094D\u0924 \u0905\u0938\u0942 \u0936\u0915\u0924 \u0928\u093E\u0939\u0940",
        equal_to: "%{count} \u0938\u092E\u093E\u0928 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915",
        even: "\u0938\u092E\u093E\u0902\u0915 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        exclusion: "\u0930\u093E\u0916\u0940\u0935 \u0906\u0939\u0947",
        greater_than: "%{count} \u092A\u0947\u0915\u094D\u0937\u093E \u091C\u093E\u0938\u094D\u0924 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        greater_than_or_equal_to: "%{count} \u092A\u0947\u0915\u094D\u0937\u093E \u092E\u094B\u0920\u0947 \u0915\u093F\u0902\u0935\u093E \u0938\u092E\u093E\u0928 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        inclusion: "\u092F\u093E\u0926\u0940\u0924 \u0938\u092E\u093E\u0935\u093F\u0937\u094D\u091F \u0928\u093E\u0939\u0940",
        invalid: "\u0905\u0935\u0948\u0927 \u0906\u0939\u0947",
        less_than: "%{count} \u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915",
        less_than_or_equal_to: "%{count} \u092A\u0947\u0915\u094D\u0937\u093E \u0915\u092E\u0940 \u0915\u093F\u0902\u0935\u093E \u0938\u092E\u093E\u0928 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        not_a_number: "\u0915\u094D\u0930\u092E\u093E\u0902\u0915 \u0928\u093E\u0939\u0940",
        not_an_integer: "\u092A\u0942\u0930\u094D\u0923\u093E\u0902\u0915 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        odd: "\u0935\u093F\u0937\u092E \u0938\u0902\u0916\u094D\u092F\u093E \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        other_than: "%{count} \u092A\u0947\u0915\u094D\u0937\u093E \u0907\u0924\u0930 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        present: "\u0930\u093F\u0915\u094D\u0924 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947",
        taken: "\u092F\u093E\u092A\u0942\u0930\u094D\u0935\u0940\u091A \u0918\u0947\u0924\u0932\u0947 \u0917\u0947\u0932\u0947 \u0906\u0939\u0947",
        too_long: {
          one: "\u0916\u0942\u092A \u0932\u093E\u0902\u092C \u0906\u0939\u0947 (\u091C\u093E\u0938\u094D\u0924\u0940\u0924 \u091C\u093E\u0938\u094D\u0924 \u090F\u0915 \u0935\u0930\u094D\u0923 \u092A\u0930\u0935\u093E\u0928\u0917\u0940 \u0906\u0939\u0947)",
          other: "\u0916\u0942\u092A \u0932\u093E\u0902\u092C \u0906\u0939\u0947 (\u091C\u093E\u0938\u094D\u0924\u0940\u0924 \u091C\u093E\u0938\u094D\u0924 %{count} \u0935\u0930\u094D\u0923 \u092A\u0930\u0935\u093E\u0928\u0917\u0940 \u0906\u0939\u0947)"
        },
        too_short: {
          one: "\u0916\u0942\u092A \u0932\u0939\u093E\u0928 \u0906\u0939\u0947 (\u0915\u093F\u092E\u093E\u0928 \u090F\u0915 \u0935\u0930\u094D\u0923 \u092A\u0930\u0935\u093E\u0928\u0917\u0940 \u0906\u0939\u0947)",
          other: "\u0916\u0942\u092A \u0932\u0939\u093E\u0928 \u0906\u0939\u0947 (\u0915\u093F\u092E\u093E\u0928 %{count} \u0935\u0930\u094D\u0923 \u092A\u0930\u0935\u093E\u0928\u0917\u0940 \u0906\u0939\u0947)"
        },
        wrong_length: {
          one: "\u0932\u093E\u0902\u092C\u0940 \u091A\u0941\u0915 \u0906\u0939\u0947 (\u090F\u0915 \u0935\u0930\u094D\u0923 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947)",
          other: "\u0932\u093E\u0902\u092C\u0940 \u091A\u0941\u0915 \u0906\u0939\u0947 (%{count} \u0935\u0930\u094D\u0923 \u0905\u0938\u0923\u0947 \u0906\u0935\u0936\u094D\u092F\u0915 \u0906\u0939\u0947)"
        }
      },
      template: {
        body: "\u0916\u093E\u0932\u0940\u0932 \u092B\u0940\u0932\u094D\u0921 \u0938\u0939 \u0938\u092E\u0938\u094D\u092F\u093E \u0939\u094B\u0924\u0947:",
        header: {
          one: "\u090F\u0915 \u091A\u0942\u0915 \u0939\u094D\u092F\u093E %{model} \u0932\u093E \u091C\u0924\u0928 \u0915\u0930\u0923\u094D\u092F\u093E\u092A\u093E\u0938\u0942\u0928 \u092A\u094D\u0930\u0924\u093F\u092C\u0902\u0927\u093F\u0924 \u0915\u0930\u0924 \u0906\u0939\u0947",
          other: "%{count} \u091A\u0941\u0915\u093E \u0939\u094D\u092F\u093E %{model} \u0932\u093E \u091C\u0924\u0928 \u0915\u0930\u0923\u094D\u092F\u093E\u092A\u093E\u0938\u0942\u0928 \u092A\u094D\u0930\u0924\u093F\u092C\u0902\u0927\u093F\u0924 \u0915\u0930\u0924 \u0906\u0939\u0947"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0915\u0943\u092A\u092F\u093E \u0928\u093F\u0935\u0921\u093E"
      },
      submit: {
        create: "%{model} \u0928\u093F\u0930\u094D\u092E\u093E\u0923 \u0915\u0930\u093E",
        submit: "%{model} \u091C\u0924\u0928 \u0915\u0930\u093E",
        update: "%{model} \u0905\u0926\u094D\u092F\u0924\u0928\u093F\u0924 \u0915\u0930\u093E"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0905\u092C\u094D\u091C",
            million: "\u0926\u0936\u0932\u0915\u094D\u0937",
            quadrillion: "\u090F\u0915\u093E\u0935\u0930 \u0967\u096B \u0936\u0942\u0928\u094D\u092F \u0907\u0924\u0915\u0940 \u0938\u0902\u0916\u094D\u092F\u093E",
            thousand: "\u0939\u091C\u093E\u0930",
            trillion: "\u090F\u0915\u093E\u0935\u0930 \u0967\u0968 \u0936\u0942\u0928\u094D\u092F\u0947 \u0907\u0924\u0915\u0940 \u0938\u0902\u0916\u094D\u092F\u093E",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0906\u0923\u093F ",
        two_words_connector: " \u0906\u0923\u093F ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u092E.\u092A\u0942.",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u092E.\u0928\u0902."
    }
  };
  var ms = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Pengesahan gagal: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "Ahd",
        "Isn",
        "Sel",
        "Rab",
        "Kha",
        "Jum",
        "Sab"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mac",
        "Apr",
        "Mei",
        "Jun",
        "Jul",
        "Ogo",
        "Sep",
        "Okt",
        "Nov",
        "Dis"
      ],
      day_names: [
        "Ahad",
        "Isnin",
        "Selasa",
        "Rabu",
        "Khamis",
        "Jumaat",
        "Sabtu"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Januari",
        "Febuari",
        "Mac",
        "April",
        "Mei",
        "Jun",
        "Julai",
        "Ogos",
        "September",
        "Oktober",
        "November",
        "Disember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "lebih kurang %{count} jam",
          other: "lebih kurang %{count} jam"
        },
        about_x_months: {
          one: "lebih kurang %{count} bulan",
          other: "lebih kurang %{count} bulan"
        },
        about_x_years: {
          one: "lebih kurang %{count} tahun",
          other: "lebih kurang %{count} tahun"
        },
        almost_x_years: {
          one: "hampir %{count} tahun",
          other: "hampir %{count} tahun"
        },
        half_a_minute: "setengah minit",
        less_than_x_minutes: {
          one: "kurang dari satu minit",
          other: "kurang dari %{count} minit"
        },
        less_than_x_seconds: {
          one: "kurang dari satu saat",
          other: "kurang dari %{count} saat"
        },
        over_x_years: {
          one: "lebih %{count} tahun",
          other: "lebih %{count} tahun"
        },
        x_days: {
          one: "%{count} hari",
          other: "%{count} hari"
        },
        x_minutes: {
          one: "%{count} minit",
          other: "%{count} minit"
        },
        x_months: {
          one: "%{count} bulan",
          other: "%{count} bulan"
        },
        x_seconds: {
          one: "%{count} saat",
          other: "%{count} saat"
        }
      },
      prompts: {
        day: "Hari",
        hour: "Jam",
        minute: "Minit",
        month: "Bulan",
        second: "Saat",
        year: "Tahun"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "wajib diterima",
        blank: "tidak boleh dikosongkan",
        confirmation: "tidak sama dengan penegasan",
        empty: "tidak boleh dikosongkan",
        equal_to: "mesti sama dengan %{count}",
        even: "mesti genap",
        exclusion: "telah terpelihara",
        greater_than: "mesti lebih dari %{count}",
        greater_than_or_equal_to: "mesti melibihi atau sama dengan %{count}",
        inclusion: "tidak termasuk dalam senarai",
        invalid: "adalah tidak laku",
        less_than: "mesti kurang daripada %{count}",
        less_than_or_equal_to: "mesti kurang daripada atat sama dengan %{count}",
        not_a_number: "bukan nombor",
        not_an_integer: "mestilah integer",
        odd: "mesti ganjil",
        taken: "telah digunakan",
        too_long: {
          one: "terlalu panjang (maksima adalah %{count} karakter)",
          other: "terlalu panjang (maksima adalah %{count} karakter)"
        },
        too_short: {
          one: "terlalu pendek (minima adalah %{count} karakter)",
          other: "terlalu pendek (minima adalah %{count} karakter)"
        },
        wrong_length: {
          one: "mempunyai panjang yang salah (sepatutnya %{count} karakter sahaja)",
          other: "mempunyai panjang yang salah(sepatutnya %{count} karakter sahaja)"
        }
      },
      template: {
        body: "Terdapat masalah dengan medan data tersebut:",
        header: {
          one: "%{count} ralat menhalang  %{model} ini dari disimpan",
          other: "%{count} ralat menhalang %{model} ini dari disimpan"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Sila pilih"
      },
      submit: {
        create: "Cipta %{model}",
        submit: "Simpan %{model}",
        update: "Kemaskini %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "RM"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Ribu Juta",
            million: "Juta",
            quadrillion: "Juta-juta",
            thousand: "Ribu",
            trillion: "Trilion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bait",
              other: "Bait"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", dan ",
        two_words_connector: " dan ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var nb = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Det oppstod feil: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan ikke slette registreringen, fordi %{record} avhenger av denne.",
            has_one: "Kan ikke slette registreringen, fordi %{record} avhenger av denne."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "s\xF8n",
        "man",
        "tir",
        "ons",
        "tor",
        "fre",
        "l\xF8r"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "mai",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "des"
      ],
      day_names: [
        "s\xF8ndag",
        "mandag",
        "tirsdag",
        "onsdag",
        "torsdag",
        "fredag",
        "l\xF8rdag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "januar",
        "februar",
        "mars",
        "april",
        "mai",
        "juni",
        "juli",
        "august",
        "september",
        "oktober",
        "november",
        "desember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "rundt %{count} time",
          other: "rundt %{count} timer"
        },
        about_x_months: {
          one: "rundt %{count} m\xE5ned",
          other: "rundt %{count} m\xE5neder"
        },
        about_x_years: {
          one: "rundt %{count} \xE5r",
          other: "rundt %{count} \xE5r"
        },
        almost_x_years: {
          one: "nesten %{count} \xE5r",
          other: "nesten %{count} \xE5r"
        },
        half_a_minute: "et halvt minutt",
        less_than_x_minutes: {
          one: "mindre enn %{count} minutt",
          other: "mindre enn %{count} minutter"
        },
        less_than_x_seconds: {
          one: "mindre enn %{count} sekund",
          other: "mindre enn %{count} sekunder"
        },
        over_x_years: {
          one: "over %{count} \xE5r",
          other: "over %{count} \xE5r"
        },
        x_days: {
          one: "%{count} dag",
          other: "%{count} dager"
        },
        x_minutes: {
          one: "%{count} minutt",
          other: "%{count} minutter"
        },
        x_months: {
          one: "%{count} m\xE5ned",
          other: "%{count} m\xE5neder"
        },
        x_seconds: {
          one: "%{count} sekund",
          other: "%{count} sekunder"
        },
        x_years: {
          one: "%{count} \xE5r",
          other: "%{count} \xE5r"
        }
      },
      prompts: {
        day: "dag",
        hour: "time",
        minute: "minutt",
        month: "m\xE5ned",
        second: "sekund",
        year: "\xE5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "m\xE5 v\xE6re akseptert",
        blank: "kan ikke v\xE6re tom",
        confirmation: "er ikke lik %{attribute}",
        empty: "kan ikke v\xE6re tom",
        equal_to: "m\xE5 v\xE6re lik %{count}",
        even: "m\xE5 v\xE6re partall",
        exclusion: "er reservert",
        greater_than: "m\xE5 v\xE6re st\xF8rre enn %{count}",
        greater_than_or_equal_to: "m\xE5 v\xE6re st\xF8rre enn eller lik %{count}",
        inclusion: "er ikke inkludert i listen",
        invalid: "er ugyldig",
        less_than: "m\xE5 v\xE6re mindre enn %{count}",
        less_than_or_equal_to: "m\xE5 v\xE6re mindre enn eller lik %{count}",
        model_invalid: "Det oppstod feil: %{errors}",
        not_a_number: "er ikke et tall",
        not_an_integer: "er ikke et heltall",
        odd: "m\xE5 v\xE6re oddetall",
        other_than: "kan ikke v\xE6re n\xF8yaktig %{count}",
        present: "m\xE5 v\xE6re tom",
        required: "m\xE5 eksistere",
        taken: "er allerede i bruk",
        too_long: {
          one: "er for lang (maksimalt %{count} tegn)",
          other: "er for lang (maksimalt %{count} tegn)"
        },
        too_short: {
          one: "er for kort (minst %{count} tegn)",
          other: "er for kort (minst %{count} tegn)"
        },
        wrong_length: {
          one: "har feil lengde (m\xE5 v\xE6re %{count} tegn)",
          other: "har feil lengde (m\xE5 v\xE6re %{count} tegn)"
        }
      },
      template: {
        body: "Det oppstod problemer med f\xF8lgende felt:",
        header: {
          one: "Kunne ikke lagre %{model} p\xE5 grunn av \xE9n feil.",
          other: "Kunne ikke lagre %{model} p\xE5 grunn av %{count} feil."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Vennligst velg"
      },
      submit: {
        create: "Lag %{model}",
        submit: "Lagre %{model}",
        update: "Oppdater %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kr"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: true
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "milliard",
              other: "milliarder"
            },
            million: {
              one: "million",
              other: "millioner"
            },
            quadrillion: {
              one: "billiard",
              other: "billiarder"
            },
            thousand: "tusen",
            trillion: {
              one: "billion",
              other: "billioner"
            },
            unit: ""
          }
        },
        format: {
          delimiter: " ",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "kB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " og ",
        two_words_connector: " og ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %e. %B %Y, %H:%M",
        long: "%A, %e. %B %Y, %H:%M",
        short: "%e. %B, %H:%M"
      },
      pm: "pm"
    }
  };
  var ne = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u092E\u093E\u0928\u094D\u092F \u092D\u090F\u0928: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0930\u0947\u0915\u0930\u094D\u0921 \u092E\u0947\u091F\u093E\u0909\u0928 \u0938\u0915\u094D\u0926\u0948\u0928 \u0915\u093F\u0928\u092D\u0928\u0947 \u0927\u0947\u0930\u0948 \u0928\u093F\u0930\u094D\u092D\u0930 %{record} \u0905\u0935\u0938\u094D\u0925\u093F\u0924 \u091B\u0928",
            has_one: "\u0930\u0947\u0915\u0930\u094D\u0921 \u092E\u0947\u091F\u093E\u0909\u0928 \u0938\u0915\u094D\u0926\u0948\u0928 \u0915\u093F\u0928\u092D\u0928\u0947 \u090F\u0909\u091F\u093E \u0928\u093F\u0930\u094D\u092D\u0930 %{record} \u0905\u0935\u0938\u094D\u0925\u093F\u0924 \u091B"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0906\u0908\u0924",
        "\u0938\u094B\u092E",
        "\u092E\u0902\u0917\u0932",
        "\u092C\u0941\u0927",
        "\u092C\u093F\u0939\u0940",
        "\u0936\u0941\u0915\u094D\u0930",
        "\u0936\u0928\u093F"
      ],
      abbr_month_names: [
        null,
        "\u091C\u0928.",
        "\u092B\u0947\u092C\u094D\u0930\u0941.",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u0905\u092A\u094D\u0930\u093F\u0932",
        "\u092E\u0908",
        "\u091C\u0941\u0928",
        "\u091C\u0941\u0932\u093E\u0908",
        "\u0905\u0917\u0937\u094D\u091F",
        "\u0938\u0947\u092A\u094D\u091F.",
        "\u0905\u0915\u094D\u091F\u094B.",
        "\u0928\u094B\u092D.",
        "\u0921\u093F\u0938\u0947."
      ],
      day_names: [
        "\u0906\u0908\u0924\u092C\u093E\u0930",
        "\u0938\u094B\u092E\u092C\u093E\u0930",
        "\u092E\u0902\u0917\u0932\u092C\u093E\u0930",
        "\u092C\u0941\u0927\u092C\u093E\u0930",
        "\u092C\u093F\u0939\u0940\u092C\u093E\u0930",
        "\u0936\u0941\u0915\u094D\u0930\u092C\u093E\u0930",
        "\u0936\u0928\u093F\u092C\u093E\u0930"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u091C\u0928\u0935\u0930\u0940",
        "\u092B\u0947\u092C\u094D\u0930\u0941\u0935\u0930\u0940",
        "\u092E\u093E\u0930\u094D\u091A",
        "\u0905\u092A\u094D\u0930\u093F\u0932",
        "\u092E\u0908",
        "\u091C\u0941\u0928",
        "\u091C\u0941\u0932\u093E\u0908",
        "\u0905\u0917\u0937\u094D\u091F",
        "\u0938\u0947\u092A\u094D\u091F\u0947\u092E\u094D\u092C\u093E\u0930",
        "\u0905\u0915\u094D\u091F\u094B\u092C\u0930",
        "\u0928\u094B\u092D\u0947\u092E\u094D\u092C\u0930",
        "\u0921\u093F\u0938\u0947\u092E\u094D\u092C\u0930"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0932\u0917\u092D\u0917 %{count} \u0918\u0923\u094D\u091F\u093E",
          other: "\u0932\u0917\u092D\u0917 %{count} \u0918\u0923\u094D\u091F\u093E"
        },
        about_x_months: {
          one: "\u0932\u0917\u092D\u0917 %{count} \u092E\u0939\u093F\u0928\u093E",
          other: "\u0932\u0917\u092D\u0917 %{count} \u092E\u0939\u093F\u0928\u093E"
        },
        about_x_years: {
          one: "\u0932\u0917\u092D\u0917 %{count} \u092C\u0930\u094D\u0937",
          other: "\u0932\u0917\u092D\u0917 %{count} \u092C\u0930\u094D\u0937"
        },
        almost_x_years: {
          one: "\u091D\u0923\u094D\u0921\u0948 %{count} \u092C\u0930\u094D\u0937",
          other: "\u091D\u0923\u094D\u0921\u0948 %{count} \u092C\u0930\u094D\u0937"
        },
        half_a_minute: "\u0906\u0927\u093E \u092E\u093F\u0928\u0947\u091F",
        less_than_x_minutes: {
          one: "%{count} \u092E\u093F\u0928\u0947\u091F\u092D\u0928\u094D\u0926\u093E \u0915\u092E\u094D\u0924\u093F",
          other: "%{count} \u092E\u093F\u0928\u0947\u091F\u092D\u0928\u094D\u0926\u093E \u0915\u092E\u094D\u0924\u093F"
        },
        less_than_x_seconds: {
          one: "%{count} \u0938\u0947\u0915\u0947\u0923\u094D\u0921\u092D\u0928\u094D\u0926\u093E \u0915\u092E\u094D\u0924\u093F",
          other: "%{count} \u0938\u0947\u0915\u0947\u0923\u094D\u0921\u092D\u0928\u094D\u0926\u093E \u0915\u092E\u094D\u0924\u093F"
        },
        over_x_years: {
          one: "%{count} \u092C\u0930\u094D\u0937\u092D\u0928\u094D\u0926\u093E \u092C\u0922\u0940",
          other: "%{count} \u092C\u0930\u094D\u0937\u092D\u0928\u094D\u0926\u093E \u092C\u0947\u0938\u0940"
        },
        x_days: {
          one: "%{count} \u0926\u093F\u0928",
          other: "%{count} \u0926\u093F\u0928"
        },
        x_minutes: {
          one: "%{count} \u092E\u093F\u0928\u0947\u091F",
          other: "%{count} \u092E\u093F\u0928\u0947\u091F"
        },
        x_months: {
          one: "%{count} \u092E\u0939\u093F\u0928\u093E",
          other: "%{count} \u092E\u0939\u093F\u0928\u093E"
        },
        x_seconds: {
          one: "%{count} \u0938\u0947\u0915\u0947\u0923\u094D\u0921",
          other: "%{count} \u0938\u0947\u0915\u0947\u0923\u094D\u0921"
        }
      },
      prompts: {
        day: "\u0926\u093F\u0928",
        hour: "\u0918\u0923\u094D\u091F\u093E",
        minute: "\u092E\u093F\u0928\u0947\u091F",
        month: "\u092E\u0939\u093F\u0928\u093E",
        second: "\u0938\u0947\u0915\u0947\u0923\u094D\u0921",
        year: "\u092C\u0930\u094D\u0937"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0938\u094D\u0935\u0940\u0915\u093E\u0930 \u0917\u0930\u093F\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        blank: "\u0916\u093E\u0932\u0940 \u0939\u0941\u0928 \u0938\u0915\u094D\u0926\u0948\u0928",
        confirmation: "\u092A\u0941\u0937\u094D\u091F\u093F\u0915\u0930\u0923\u0938\u0901\u0917 \u092E\u0947\u0932 \u0916\u093E\u0901\u0926\u0948\u0928",
        empty: "\u0930\u093F\u0924\u094D\u0924\u094B \u0939\u0941\u0928 \u0938\u0915\u094D\u0926\u0948\u0928",
        equal_to: "%{count} \u0938\u0901\u0917 \u092C\u0930\u093E\u092C\u0930 \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        even: "\u091C\u094B\u0930 \u0938\u0902\u0916\u094D\u092F\u093E \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        exclusion: "\u092A\u094D\u0930\u092F\u094B\u0917\u0915\u094B \u0932\u093E\u0917\u0940 \u0938\u0902\u0930\u0915\u094D\u0937\u093F\u0924 \u091B",
        greater_than: "%{count} \u092D\u0928\u094D\u0926\u093E \u092C\u0947\u0938\u0940 \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        greater_than_or_equal_to: "%{count} \u0938\u0901\u0917 \u092C\u0930\u093E\u092C\u0930 \u0905\u0925\u0935\u093E \u092C\u0947\u0938\u0940 \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        inclusion: "\u0938\u0941\u091A\u0940\u092E\u093E \u0938\u093E\u092E\u0947\u0932 \u0917\u0930\u093F\u090F\u0915\u094B \u091B\u0948\u0928",
        invalid: "\u0905\u092E\u093E\u0928\u094D\u092F \u091B",
        less_than: "%{count} \u092D\u0928\u094D\u0926\u093E \u0915\u092E \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        less_than_or_equal_to: "%{count} \u0938\u0901\u0917 \u092C\u0930\u093E\u092C\u0930 \u0905\u0925\u0935\u093E \u0915\u092E \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        not_a_number: "\u0905\u0902\u0915 \u0939\u094B\u0908\u0928",
        not_an_integer: "\u092A\u0941\u0930\u094D\u0923\u093E\u0915\u0902 \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        odd: "\u092C\u093F\u091C\u094B\u0930 \u0938\u0902\u0916\u094D\u092F\u093E \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B",
        taken: "\u092A\u0939\u093F\u0932\u094D\u092F\u0948 \u092A\u094D\u0930\u092F\u094B\u0917 \u0917\u0930\u0940\u090F\u0915\u094B \u091B",
        too_long: {
          one: "\u0927\u0947\u0930\u0948 \u0932\u093E\u092E\u094B \u091B (\u0905\u0927\u093F\u0915\u094D\u0924\u092E %{count} character \u0939\u094B)",
          other: "\u0927\u0947\u0930\u0948 \u0932\u093E\u092E\u094B \u091B (\u0905\u0927\u093F\u0915\u094D\u0924\u092E %{count} characters \u0939\u094B)"
        },
        too_short: {
          one: "\u0927\u0947\u0930\u0948 \u091B\u094B\u091F\u094B \u091B (\u0928\u094D\u092F\u0941\u0928\u0924\u094D\u0924\u092E %{count} character \u0939\u094B)",
          other: "\u0927\u0947\u0930\u0948 \u091B\u094B\u091F\u094B \u091B (\u0928\u094D\u092F\u0941\u0928\u0924\u094D\u0924\u092E %{count} characters \u0939\u094B)"
        },
        wrong_length: {
          one: "\u0917\u0932\u0924 \u0932\u092E\u094D\u092C\u093E\u0908 \u0939\u094B (%{count} character \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B)",
          other: "\u0917\u0932\u0924 \u0932\u092E\u094D\u092C\u093E\u0908 \u0939\u094B (%{count} characters \u0939\u0941\u0928\u0941\u092A\u0930\u094D\u0928\u0947\u091B)"
        }
      },
      template: {
        body: "\u0924\u094D\u092F\u0939\u093E\u0901 \u0928\u093F\u092E\u094D\u0928 \u0915\u094D\u0937\u0947\u0924\u094D\u0930\u0939\u0930\u0941\u092E\u093E \u0938\u092E\u0938\u094D\u092F\u093E \u0926\u0947\u0916\u093F\u092F\u094B:",
        header: {
          one: "%{count} \u0917\u0932\u094D\u0924\u0940\u0932\u0947 \u092F\u0938 %{model} \u0932\u093E\u0908 \u0938\u0941\u0930\u0915\u094D\u0937\u093F\u0924 \u0917\u0930\u094D\u0928\u092C\u093E\u091F \u0930\u094B\u0915\u094D\u092F\u094B",
          other: "%{count} \u0917\u0932\u094D\u0924\u0940\u0932\u0947 \u092F\u0938 %{model} \u0932\u093E\u0908 \u0938\u0941\u0930\u0915\u094D\u0937\u093F\u0924 \u0917\u0930\u094D\u0928\u092C\u093E\u091F \u0930\u094B\u0915\u094D\u092F\u094B"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0915\u0943\u092A\u092F\u093E \u091B\u093E\u0928\u094D\u0928\u0941\u0939\u094B\u0938\u094D"
      },
      submit: {
        create: "\u0928\u092F\u093E\u0901 %{model} \u092C\u0928\u093E\u0909",
        submit: "%{model} \u0938\u0941\u0930\u0915\u094D\u0937\u093F\u0924 \u0917\u0930",
        update: "%{model} \u0938\u093E\u092E\u092F\u093F\u0915 \u092C\u0928\u093E\u0909"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0930\u0942"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0905\u0930\u094D\u092C",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "\u0939\u091C\u093E\u0930",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "\u091C\u093F.\u092C\u0940.",
            kb: "\u0915\u0947.\u092C\u0940.",
            mb: "\u090F\u092E.\u092C\u0940",
            tb: "\u091F\u093F.\u092C\u0940"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0930 ",
        two_words_connector: " \u0930 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u092C\u093F\u0939\u093E\u0928",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u092C\u0947\u0932\u0941\u0915\u093E"
    }
  };
  var nl = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validatie mislukt: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan item niet verwijderen omdat afhankelijke %{record} bestaan",
            has_one: "Kan item niet verwijderen omdat %{record} afhankelijk is"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "zo",
        "ma",
        "di",
        "wo",
        "do",
        "vr",
        "za"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mrt",
        "apr",
        "mei",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "zondag",
        "maandag",
        "dinsdag",
        "woensdag",
        "donderdag",
        "vrijdag",
        "zaterdag"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "januari",
        "februari",
        "maart",
        "april",
        "mei",
        "juni",
        "juli",
        "augustus",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ongeveer een uur",
          other: "ongeveer %{count} uur"
        },
        about_x_months: {
          one: "ongeveer een maand",
          other: "ongeveer %{count} maanden"
        },
        about_x_years: {
          one: "ongeveer een jaar",
          other: "ongeveer %{count} jaar"
        },
        almost_x_years: {
          one: "bijna een jaar",
          other: "bijna %{count} jaar"
        },
        half_a_minute: "een halve minuut",
        less_than_x_minutes: {
          one: "minder dan een minuut",
          other: "minder dan %{count} minuten"
        },
        less_than_x_seconds: {
          one: "minder dan een seconde",
          other: "minder dan %{count} seconden"
        },
        over_x_years: {
          one: "meer dan een jaar",
          other: "meer dan %{count} jaar"
        },
        x_days: {
          one: "%{count} dag",
          other: "%{count} dagen"
        },
        x_minutes: {
          one: "%{count} minuut",
          other: "%{count} minuten"
        },
        x_months: {
          one: "%{count} maand",
          other: "%{count} maanden"
        },
        x_seconds: {
          one: "%{count} seconde",
          other: "%{count} seconden"
        },
        x_years: {
          one: "%{count} jaar",
          other: "%{count} jaar"
        }
      },
      prompts: {
        day: "dag",
        hour: "uur",
        minute: "minuut",
        month: "maand",
        second: "seconde",
        year: "jaar"
      }
    },
    devise: {
      failure: {
        expired: "Je account is verlopen. Neem contact op met de site beheerder.",
        session_limited: "Je login is in een andere browser gebruikt. Log hier opnieuw in."
      },
      invalid_captcha: "De captcha invoer was ongeldig.",
      invalid_security_question: "Het antwoord op de beveiligingsvraag was niet correct.",
      paranoid_verification_code: {
        show: {
          submit: "Verstuur",
          submit_verification_code: "Verstuur verificatie code",
          verification_code: "Verificatie code"
        },
        updated: "Verificatiecode geaccepteerd"
      },
      paranoid_verify: {
        code_required: "Voer de aangeleverde code in"
      },
      password_expired: {
        change_required: "Het wachtwoord is verlopen. Vernieuw je wachtwoord.",
        show: {
          change_my_password: "Verander mijn wachtwoord",
          current_password: "Huidig wachtwoord",
          new_password: "Nieuw wachtwoord",
          new_password_confirmation: "Bevestig het nieuwe wachtwoord",
          renew_your_password: "Vernieuw je wachtwoord"
        },
        updated: "Het nieuwe wachtwoord is opgeslagen."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "moet worden geaccepteerd",
        blank: "moet opgegeven zijn",
        confirmation: "komt niet overeen met %{attribute}",
        empty: "moet opgegeven zijn",
        equal_to: "moet gelijk zijn aan %{count}",
        equal_to_current_password: "moet verschillen van het huidige wachtwoord.",
        equal_to_email: "moet anders zijn dan de e-mail",
        even: "moet even zijn",
        exclusion: "is gereserveerd",
        greater_than: "moet groter zijn dan %{count}",
        greater_than_or_equal_to: "moet groter dan of gelijk zijn aan %{count}",
        inclusion: "is niet in de lijst opgenomen",
        invalid: "is ongeldig",
        less_than: "moet minder zijn dan %{count}",
        less_than_or_equal_to: "moet minder dan of gelijk zijn aan %{count}",
        model_invalid: "Validatie mislukt: %{errors}",
        not_a_number: "is geen getal",
        not_an_integer: "moet een geheel getal zijn",
        odd: "moet oneven zijn",
        other_than: "moet anders zijn dan %{count}",
        password_complexity: {
          digit: {
            one: "moet minimaal 1 cijfer bevatten",
            other: "moet minimaal %{count} cijfers bevatten"
          },
          lower: {
            one: "moet minimaal 1 kleine letter bevatten",
            other: "moet minimaal %{count} kleine letters bevatten"
          },
          symbol: {
            one: "moet minimaal 1 leesteken of symbool bevatten",
            other: "moet minimaal %{count} leestekens of symbolen bevatten"
          },
          upper: {
            one: "moet minimaal 1 hoofdletter bevatten",
            other: "moet minimaal %{count} hoofdletters bevatten"
          }
        },
        present: "moet leeg zijn",
        required: "moet bestaan",
        taken: "is al in gebruik",
        taken_in_past: "is eerder gebruikt.",
        too_long: {
          one: "is te lang (maximaal %{count} teken)",
          other: "is te lang (maximaal %{count} tekens)"
        },
        too_short: {
          one: "is te kort (minimaal %{count} teken)",
          other: "is te kort (minimaal %{count} tekens)"
        },
        wrong_length: {
          one: "heeft onjuiste lengte (moet %{count} teken lang zijn)",
          other: "heeft onjuiste lengte (moet %{count} tekens lang zijn)"
        }
      },
      template: {
        body: "Er zijn problemen met de volgende velden:",
        header: {
          one: "%{model} niet opgeslagen: %{count} fout gevonden",
          other: "%{model} niet opgeslagen: %{count} fouten gevonden"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Maak een keuze"
      },
      submit: {
        create: "%{model} toevoegen",
        submit: "%{model} opslaan",
        update: "%{model} bijwerken"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miljard",
            million: "miljoen",
            quadrillion: "biljard",
            thousand: "duizend",
            trillion: "biljoen",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "byte",
              other: "bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " en ",
        two_words_connector: " en ",
        words_connector: ", "
      }
    },
    time: {
      am: "'s ochtends",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %Z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "'s middags"
    }
  };
  var nn = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Valideringa mislukka: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan ikkje sletta registreringa, fordi avhengige %{record} finst.",
            has_one: "Kan ikkje sletta registreringa, fordi 1 avhengig %{record} finst."
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "sun",
        "m\xE5n",
        "tys",
        "ons",
        "tor",
        "fre",
        "lau"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "mai",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "des"
      ],
      day_names: [
        "sundag",
        "m\xE5ndag",
        "tysdag",
        "onsdag",
        "torsdag",
        "fredag",
        "laurdag"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "januar",
        "februar",
        "mars",
        "april",
        "mai",
        "juni",
        "juli",
        "august",
        "september",
        "oktober",
        "november",
        "desember"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "rundt %{count} time",
          other: "rundt %{count} timar"
        },
        about_x_months: {
          one: "rundt %{count} m\xE5nad",
          other: "rundt %{count} m\xE5nader"
        },
        about_x_years: {
          one: "rundt %{count} \xE5r",
          other: "rundt %{count} \xE5r"
        },
        almost_x_years: "nesten %{count} \xE5r",
        half_a_minute: "eit halvt minutt",
        less_than_x_minutes: {
          one: "mindre enn %{count} minutt",
          other: "mindre enn %{count} minutt"
        },
        less_than_x_seconds: {
          one: "mindre enn %{count} sekund",
          other: "mindre enn %{count} sekund"
        },
        over_x_years: {
          one: "over %{count} \xE5r",
          other: "over %{count} \xE5r"
        },
        x_days: {
          one: "%{count} dag",
          other: "%{count} dagar"
        },
        x_minutes: {
          one: "%{count} minutt",
          other: "%{count} minutt"
        },
        x_months: {
          one: "%{count} m\xE5nad",
          other: "%{count} m\xE5nader"
        },
        x_seconds: {
          one: "%{count} sekund",
          other: "%{count} sekund"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Time",
        minute: "Minutt",
        month: "M\xE5nad",
        second: "Sekund",
        year: "\xC5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "m\xE5 vera akseptert",
        blank: "kan ikkje vera blank",
        confirmation: "er ikkje lik %{attribute}",
        empty: "kan ikkje vera tom",
        equal_to: "m\xE5 vera lik %{count}",
        even: "m\xE5 vera partal",
        exclusion: "er reservert",
        greater_than: "m\xE5 vera st\xF8rre enn %{count}",
        greater_than_or_equal_to: "m\xE5 vera st\xF8rre enn eller lik %{count}",
        inclusion: "er ikkje inkludert i lista",
        invalid: "er ugyldig",
        less_than: "m\xE5 vera mindre enn %{count}",
        less_than_or_equal_to: "m\xE5 vera mindre enn eller lik %{count}",
        model_invalid: "Valideringa mislukka: %{errors}",
        not_a_number: "er ikkje eit tal",
        not_an_integer: "er ikkje eit heiltal",
        odd: "m\xE5 vera oddetal",
        other_than: "m\xE5 vera noko anna enn %{count}",
        present: "m\xE5 vera blank",
        required: "m\xE5 eksistera",
        taken: "er allereie i bruk",
        too_long: "er for lang (maksimum %{count} teikn)",
        too_short: "er for kort (minimum %{count} teikn)",
        wrong_length: "har feil lengde (maksimum %{count} teikn)"
      },
      template: {
        body: "det oppstod problem i f\xF8lgjande felt:",
        header: "kunne ikkje lagra %{model} grunna %{count} feil."
      }
    },
    helpers: {
      select: {
        prompt: "Gjer eit val"
      },
      submit: {
        create: "Lag %{model}",
        submit: "Lagre %{model}",
        update: "Oppdater %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kr"
        }
      },
      format: {
        delimiter: ",",
        precision: 2,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "milliard",
              other: "milliardar"
            },
            million: {
              one: "million",
              other: "millionar"
            },
            quadrillion: {
              one: "billiard",
              other: "billiardar"
            },
            thousand: "tusen",
            trillion: {
              one: "billion",
              other: "billionar"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "kB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " og ",
        two_words_connector: " og ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %e. %B %Y, %H:%M",
        long: "%A, %e. %B %Y, %H:%M",
        short: "%e. %B, %H:%M"
      },
      pm: "pm"
    }
  };
  var oc = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "La validacion a fracassat\u202F:\u202F%{errors}",
          restrict_dependent_destroy: {
            has_many: "Pod\xE8tz pas suprimir l\u2019enregistrament perque i a %{record} depend\xE9ncias",
            has_one: "Pod\xE8tz pas suprimir l\u2019enregistrament perque i a una depend\xE9ncia"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dg",
        "dl",
        "dm",
        "dc",
        "dj",
        "dv",
        "ds"
      ],
      abbr_month_names: [
        null,
        "gen",
        "feb",
        "mar\xE7",
        "abr",
        "mai",
        "junh",
        "jul",
        "ago",
        "set",
        "oct",
        "nov",
        "dec"
      ],
      day_names: [
        "dimenge",
        "diluns",
        "dimars",
        "dim\xE8cres",
        "dij\xF2us",
        "divendres",
        "dissabte"
      ],
      formats: {
        default: "%e/%m/%Y",
        long: "Lo %e %B de %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "de geni\xE8r",
        "de febri\xE8r",
        "de mar\xE7",
        "d\u2019abrial",
        "de mai",
        "de junh",
        "de julhet",
        "d\u2019agost",
        "de setembre",
        "d\u2019oct\xF2bre",
        "de novembre",
        "de decembre"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "Fa una ora",
          other: "Fa %{count} oras"
        },
        about_x_months: {
          one: "Fa un mes",
          other: "Fa %{count} meses"
        },
        about_x_years: {
          one: "Fa un an",
          other: "Fa %{count} ans"
        },
        almost_x_years: {
          one: "quasi un an",
          other: "quasi %{count} ans"
        },
        half_a_minute: "mi\xE8ja minuta",
        less_than_x_minutes: {
          one: "mens d\u2019una minuta",
          other: "mens de %{count} minutas"
        },
        less_than_x_seconds: {
          one: "mens d\u2019una segonda",
          other: "mens de %{count} segondas"
        },
        over_x_years: {
          one: "mai d\u2019un an",
          other: "mai de %{count} ans"
        },
        x_days: {
          one: "un jorn",
          other: "%{count} jorns"
        },
        x_minutes: {
          one: "una minuta",
          other: "%{count} minutas"
        },
        x_months: {
          one: "un mes",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "una segonda",
          other: "%{count} segondas"
        },
        x_years: {
          one: "un an",
          other: "%{count} ans"
        }
      },
      prompts: {
        day: "jorn",
        hour: "ora",
        minute: "minuta",
        month: "mes",
        second: "segonda",
        year: "an"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "deu \xE8sser acceptat",
        blank: "deu \xE8sser garnit",
        confirmation: "correspond pas a %{attribute}",
        empty: "p\xF2t pas \xE8sser void",
        equal_to: "deu \xE8sser egal a %{count}",
        even: "deu \xE8sser parelh",
        exclusion: "es reservat",
        greater_than: "deu \xE8sser superior a %{count}",
        greater_than_or_equal_to: "deu \xE8sser mai grand o egal a %{count}",
        inclusion: "es pas incl\xFAs dins la lista",
        invalid: "es pas valid",
        less_than: "deu \xE8sser inferior a %{count}",
        less_than_or_equal_to: "deu \xE8sser inferior o egal a %{count}",
        model_invalid: "Validacion fracassada\u202F:\u202F%{errors}",
        not_a_number: "es pas un nombre",
        not_an_integer: "deu \xE8sser un nombre enti\xE8r",
        odd: "deu \xE8sser un nombre impar",
        other_than: "deu \xE8sser diferent de %{count}",
        present: "deu \xE8sser void",
        required: "deu existir",
        taken: "es pas disponible",
        too_long: {
          one: "es tr\xF2p long (pas mai d\u2019un caract\xE8r)",
          other: "es tr\xF2p long (%{count} caract\xE8rs al maximum)"
        },
        too_short: {
          one: "es tr\xF2p cort (almens un caract\xE8r)",
          other: "es tr\xF2p cort (almens %{count} caract\xE8rs)"
        },
        wrong_length: {
          one: "a pas la bona longor (un caract\xE8r solament)",
          other: "a pas la bona longor (%{count} caract\xE8rs exactament)"
        }
      },
      template: {
        body: "I a agut de probl\xE8mas amb los camps seguents\u202F:\u202F",
        header: {
          one: "Impossible d\u2019enregistrar aqueste/a %{model} perque i a %{count} error",
          other: "Impossible d\u2019enregistrar aqueste/a %{model} perque i a %{count} errors"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Merc\xE9s de seleccionar"
      },
      submit: {
        create: "Crear %{model}",
        submit: "Salvar %{model}",
        update: "Actualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C0: "A",
          \u00C1: "A",
          \u00C7: "C",
          \u00C8: "E",
          \u00C9: "E",
          \u00CB: "E",
          \u00CD: "I",
          \u00CF: "I",
          \u00D2: "O",
          \u00D3: "O",
          \u00DA: "U",
          \u00DC: "U",
          \u00E0: "a",
          \u00E1: "a",
          \u00E7: "c",
          \u00E8: "e",
          \u00E9: "e",
          \u00EB: "e",
          \u00ED: "i",
          \u00EF: "i",
          \u00F2: "o",
          \u00F3: "o",
          \u00FA: "u",
          \u00FC: "u"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miliard",
            million: "milion",
            quadrillion: "milion de miliards",
            thousand: "mila",
            trillion: "bilion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "octet",
              other: "octets"
            },
            gb: "Go",
            kb: "ko",
            mb: "Mo",
            tb: "To"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "Lo %e %b de %Y a %Ho%M %Ss",
        long: "Lo %a %e %b de %Y a %Ho%M",
        short: "%e %b %Ho%M"
      },
      pm: "pm"
    }
  };
  var or = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0B38\u0B20\u0B3F\u0B15\u0B4D \u0B28\u0B41\u0B39: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0B30\u0B2C\u0B3F",
        "\u0B38\u0B4B\u0B2E",
        "\u0B2E\u0B02\u0B17\u0B33",
        "\u0B2C\u0B41\u0B27",
        "\u0B17\u0B41\u0B30\u0B41",
        "\u0B36\u0B41\u0B15\u0B4D\u0B30",
        "\u0B36\u0B28\u0B3F"
      ],
      abbr_month_names: [
        null,
        "\u0B1C\u0B3E\u0B28\u0B41",
        "\u0B2B\u0B47\u0B2C\u0B30\u0B41",
        "\u0B2E\u0B3E\u0B30",
        "\u0B0F\u0B2A\u0B4D\u0B30",
        "\u0B2E\u0B3E\u0B08",
        "\u0B1C\u0B41\u0B28\u0B4D",
        "\u0B1C\u0B41\u0B32\u0B4D",
        "\u0B05\u0B17\u0B38\u0B4D\u0B1F",
        "\u0B38\u0B47\u0B2A\u0B4D\u0B1F",
        "\u0B05\u0B15\u0B4D\u0B1F",
        "\u0B28\u0B4B\u0B2D",
        "\u0B21\u0B3F\u0B38\u0B4D"
      ],
      day_names: [
        "\u0B30\u0B2C\u0B3F\u0B2C\u0B3E\u0B30",
        "\u0B38\u0B4B\u0B2E\u0B2C\u0B3E\u0B30",
        "\u0B2E\u0B17\u0B02\u0B33\u0B2C\u0B3E\u0B30",
        "\u0B2C\u0B41\u0B27\u0B2C\u0B3E\u0B30",
        "\u0B17\u0B41\u0B30\u0B41\u0B2C\u0B3E\u0B30",
        "\u0B36\u0B41\u0B15\u0B4D\u0B30\u0B2C\u0B3E\u0B30",
        "\u0B36\u0B28\u0B3F\u0B2C\u0B3E\u0B30"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%B %d, %Y",
        short: "%b %d"
      },
      month_names: [
        null,
        "\u0B1C\u0B3E\u0B28\u0B41\u0B5F\u0B3E\u0B30\u0B40",
        "\u0B2B\u0B47\u0B2C\u0B43\u0B5F\u0B3E\u0B30\u0B40",
        "\u0B2E\u0B3E\u0B30\u0B4D\u0B1A\u0B3C",
        "\u0B0F\u0B2A\u0B4D\u0B30\u0B32",
        "\u0B2E\u0B3E\u0B08",
        "\u0B1C\u0B41\u0B28\u0B4D",
        "\u0B1C\u0B41\u0B32\u0B3E\u0B5F",
        "\u0B05\u0B17\u0B37\u0B4D\u0B24",
        "\u0B38\u0B47\u0B2A\u0B4D\u0B1F\u0B2E\u0B4D\u0B2C\u0B30\u0B4D",
        "\u0B05\u0B15\u0B4D\u0B1F\u0B4B\u0B2C\u0B30\u0B4D",
        "\u0B28\u0B4B\u0B2D\u0B47\u0B2E\u0B4D\u0B2C\u0B30",
        "\u0B21\u0B3F\u0B38\u0B2E\u0B4D\u0B2C\u0B30"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} \u0B18\u0B23\u0B4D\u0B24",
          other: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} \u0B18\u0B23\u0B4D\u0B24"
        },
        about_x_months: {
          one: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} \u0B2E\u0B3E\u0B38",
          other: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} \u0B2E\u0B3E\u0B38"
        },
        about_x_years: {
          one: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} year",
          other: "\u0B2A\u0B3E\u0B16\u0B3E\u0B2A\u0B3E\u0B16\u0B3F %{count} years"
        },
        almost_x_years: {
          one: "\u0B05\u0B33\u0B4D\u0B2A \u0B09\u0B23 %{count} \u0B2C\u0B30\u0B4D\u0B37",
          other: "\u0B05\u0B33\u0B4D\u0B2A \u0B09\u0B23 %{count} \u0B2C\u0B30\u0B4D\u0B37"
        },
        half_a_minute: "\u0B26\u0B47\u0B22 \u0B2E\u0B3F\u0B28\u0B1F\u0B4D",
        less_than_x_minutes: {
          one: "%{count} \u0B2E\u0B3F\u0B28\u0B1F \u0B2C\u0B3E\u0B15",
          other: "%{count} \u0B2E\u0B3F\u0B28\u0B1F \u0B2C\u0B3E\u0B15"
        },
        less_than_x_seconds: {
          one: "%{count} \u0B38\u0B47\u0B15\u0B23\u0B4D\u0B22 \u0B2C\u0B3E\u0B15",
          other: "%{count} \u0B38\u0B47\u0B15\u0B23\u0B4D\u0B22 \u0B2C\u0B3E\u0B15"
        },
        over_x_years: {
          one: "%{count} \u0B2C\u0B30\u0B4D\u0B37\u0B30\u0B41 \u0B05\u0B27\u0B3F\u0B15",
          other: "%{count} \u0B2C\u0B30\u0B4D\u0B37\u0B30\u0B41 \u0B05\u0B27\u0B3F\u0B15"
        },
        x_days: {
          one: "%{count}  \u0B26\u0B3F\u0B28",
          other: "%{count} \u0B26\u0B3F\u0B28"
        },
        x_minutes: {
          one: "%{count} \u0B2E\u0B3F\u0B28\u0B1F",
          other: "%{count} \u0B2E\u0B3F\u0B28\u0B1F"
        },
        x_months: {
          one: "%{count} \u0B2E\u0B3E\u0B38",
          other: "%{count} \u0B2E\u0B3E\u0B38"
        },
        x_seconds: {
          one: "%{count} \u0B38\u0B47\u0B15\u0B23\u0B4D\u0B22",
          other: "%{count} \u0B38\u0B47\u0B15\u0B23\u0B4D\u0B22"
        }
      },
      prompts: {
        day: "\u0B26\u0B3F\u0B28",
        hour: "\u0B18\u0B23\u0B4D\u0B24",
        minute: "\u0B2E\u0B3F\u0B28\u0B1F",
        month: "\u0B2E\u0B3E\u0B38",
        second: "\u0B38\u0B47\u0B15\u0B23\u0B4D\u0B22",
        year: "\u0B2C\u0B30\u0B4D\u0B37"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0B17\u0B4D\u0B30\u0B39\u0B23 \u0B15\u0B30\u0B3F\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        blank: "\u0B16\u0B3E\u0B32\u0B3F \u0B39\u0B47\u0B07 \u0B2A\u0B3E\u0B30\u0B40\u0B2C\u0B28",
        confirmation: "\u0B2A\u0B4D\u0B30\u0B2E\u0B3E\u0B23 \u0B39\u0B47\u0B07\u0B28\u0B3F",
        empty: "\u0B16\u0B3E\u0B32\u0B3F \u0B39\u0B47\u0B07\u0B2A\u0B3E\u0B30\u0B3F\u0B2C\u0B28\u0B3F",
        equal_to: "%{count} \u0B15\u0B41 \u0B38\u0B2E\u0B3E\u0B28",
        even: "\u0B2F\u0B41\u0B17\u0B4D\u0B2E \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        exclusion: "\u0B38\u0B41\u0B30\u0B16\u0B3F\u0B24 \u0B05\u0B1F\u0B47",
        greater_than: "%{count} \u0B30\u0B41 \u0B2C\u0B21 \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        greater_than_or_equal_to: "%{count} \u0B30\u0B41 \u0B2C\u0B21 \u0B15\u0B3F\u0B2E\u0B4D\u0B2C\u0B3E \u0B38\u0B2E\u0B3E\u0B28 \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        inclusion: "\u0B38\u0B41\u0B1A\u0B40 \u0B30\u0B47 \u0B05\u0B28\u0B4D\u0B24\u0B30\u0B4D\u0B2D\u0B41\u0B15\u0B4D\u0B24 \u0B28\u0B41\u0B39\u0B47\u0B01",
        invalid: "\u0B20\u0B3F\u0B15\u0B4D \u0B28\u0B41\u0B39\u0B47\u0B01",
        less_than: "%{count} \u0B30\u0B41 \u0B1B\u0B4B\u0B1F",
        less_than_or_equal_to: "%{count} \u0B30\u0B41 \u0B1B\u0B4B\u0B1F \u0B15\u0B3F\u0B2E\u0B4D\u0B2C\u0B3E \u0B38\u0B2E\u0B3E\u0B28 \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        not_a_number: "\u0B38\u0B02\u0B16\u0B4D\u0B2F \u0B28\u0B41\u0B39\u0B47\u0B01",
        not_an_integer: "\u0B17\u0B23\u0B28 \u0B38\u0B02\u0B16\u0B4D\u0B2F\u0B3E \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        odd: "\u0B05\u0B2F\u0B41\u0B17\u0B4D\u0B2E \u0B39\u0B47\u0B2C\u0B3E\u0B30 \u0B05\u0B1B\u0B3F",
        taken: "\u0B17\u0B4D\u0B30\u0B39\u0B23  \u0B15\u0B30\u0B3E \u0B2F\u0B3E\u0B07\u0B1B\u0B3F",
        too_long: "\u0B26\u0B3F\u0B30\u0B4D\u0B18\u0B24\u0B2E \u0B05\u0B1F\u0B47(\u0B05\u0B24\u0B4D\u0B5F\u0B27\u0B40\u0B15 %{count} \u0B05\u0B16\u0B4D\u0B2F\u0B30)",
        too_short: "\u0B05\u0B24\u0B3F \u0B38\u0B02\u0B16\u0B3F\u0B2A\u0B4D\u0B24 \u0B05\u0B1F\u0B47 (\u0B05\u0B24\u0B4D\u0B2F\u0B33\u0B4D\u0B2A %{count} \u0B05\u0B16\u0B4D\u0B2F\u0B30 \u0B05\u0B1F\u0B47)",
        wrong_length: "\u0B32\u0B2E\u0B4D\u0B2C\u0B3E \u0B2D\u0B41\u0B32 \u0B05\u0B1F\u0B47 (%{count} \u0B05\u0B16\u0B4D\u0B2F\u0B30 \u0B39\u0B47\u0B2C\u0B3E \u0B09\u0B1A\u0B3F\u0B24\u0B4D)"
      },
      template: {
        body: "\u0B28\u0B3F\u0B2E\u0B4D\u0B28 \u0B1C\u0B3E\u0B17\u0B3E \u0B30\u0B47 \u0B05\u0B38\u0B41\u0B2C\u0B3F\u0B27\u0B3E \u0B39\u0B47\u0B07\u0B1B\u0B3F:",
        header: {
          one: "%{count} \u0B2D\u0B41\u0B32 \u0B2F\u0B17\u0B41\u0B01 \u0B28\u0B3F\u0B2E\u0B4D\u0B28 %{model} \u0B38\u0B41\u0B30\u0B16\u0B3F\u0B24 \u0B39\u0B47\u0B07\u0B2A\u0B3E\u0B30\u0B3F \u0B28\u0B25\u0B3F\u0B32\u0B3E",
          other: "%{count} \u0B2D\u0B41\u0B32 \u0B2F\u0B17\u0B41\u0B01 \u0B0F\u0B39\u0B3F %{model} \u0B38\u0B41\u0B30\u0B16\u0B3F\u0B24 \u0B39\u0B47\u0B07\u0B2A\u0B3E\u0B30\u0B3F \u0B28\u0B25\u0B3F\u0B32\u0B3E"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0B2A\u0B38\u0B28\u0B4D\u0B26 \u0B15\u0B30"
      },
      submit: {
        create: "%{model} \u0B2C\u0B28\u0B3E\u0B05",
        submit: "%{model} \u0B38\u0B41\u0B30\u0B16\u0B3F\u0B24 \u0B15\u0B30",
        update: "%{model} \u0B05\u0B3E\u0B27\u0B42\u0B28\u0B3F\u0B15\u0B30\u0B23 \u0B15\u0B30"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: "\u0B2E\u0B3F\u0B25\u0B4D\u0B2F\u0B3E",
        strip_insignificant_zeros: "\u0B2E\u0B3F\u0B25\u0B4D\u0B2F\u0B3E"
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0B2C\u0B3F\u0B32\u0B3F\u0B5F\u0B28\u0B4D",
            million: "\u0B2E\u0B3F\u0B32\u0B3F\u0B5F\u0B28\u0B4D",
            quadrillion: "\u0B39\u0B1C\u0B3E\u0B30 \u0B2C\u0B3F\u0B32\u0B3F\u0B5F\u0B28\u0B4D",
            thousand: "\u0B39\u0B1C\u0B3E\u0B30",
            trillion: "\u0B1F\u0B4D\u0B30\u0B3F\u0B32\u0B3F\u0B5F\u0B28\u0B4D",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0B0F\u0B2C\u0B02 ",
        two_words_connector: " \u0B0F\u0B2C\u0B02 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0B2A\u0B41\u0B30\u0B4D\u0B35\u0B3E\u0B39\u0B4D\u0B28",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%B %d, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0B05\u0B2A\u0B30\u0B3E\u0B39\u0B4D\u0B28"
    }
  };
  var pa = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0A2A\u0A30\u0A2E\u0A3E\u0A23 \u0A5E\u0A47\u0A32 \u0A39\u0A4B\u0A07\u0A06: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0A2E\u0A3F\u0A1F\u0A3E \u0A28\u0A39\u0A40\u0A02 \u0A38\u0A15\u0A26\u0A47 \u0A15\u0A3F\u0A09\u0A02\u0A15\u0A3F \u0A28\u0A3F\u0A30\u0A2D\u0A30 %{record} \u0A2E\u0A4C\u0A1C\u0A42\u0A26 \u0A39\u0A28",
            has_one: "\u0A2E\u0A3F\u0A1F\u0A3E \u0A28\u0A39\u0A40\u0A02 \u0A38\u0A15\u0A26\u0A47 \u0A15\u0A3F\u0A09\u0A02\u0A15\u0A3F \u0A07\u0A71\u0A15 \u0A28\u0A3F\u0A30\u0A2D\u0A30 %{record} \u0A2E\u0A4C\u0A1C\u0A42\u0A26 \u0A39\u0A48"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0A05\u0A48\u0A24",
        "\u0A38\u0A4B\u0A2E",
        "\u0A2E\u0A70\u0A17\u0A32",
        "\u0A2C\u0A71\u0A41\u0A27",
        "\u0A35\u0A40\u0A30",
        "\u0A36\u0A41\u0A71\u0A15\u0A30",
        "\u0A38\u0A3C\u0A28\u0A3F\u0A71\u0A1A\u0A30"
      ],
      abbr_month_names: [
        null,
        "\u0A1C\u0A28",
        "\u0A5E\u0A30",
        "\u0A2E\u0A3E\u0A30\u0A1A",
        "\u0A05\u0A2A\u0A4D\u0A30\u0A48",
        "\u0A2E\u0A08",
        "\u0A1C\u0A42\u0A28",
        "\u0A1C\u0A41\u0A32\u0A3E",
        "\u0A05\u0A17",
        "\u0A38\u0A24\u0A70",
        "\u0A05\u0A15\u0A24\u0A42",
        "\u0A28\u0A35\u0A70",
        "\u0A26\u0A38\u0A70"
      ],
      day_names: [
        "\u0A10\u0A24\u0A35\u0A3E\u0A30",
        "\u0A38\u0A4B\u0A2E\u0A35\u0A3E\u0A30",
        "\u0A2E\u0A70\u0A17\u0A32\u0A35\u0A3E\u0A30",
        "\u0A2C\u0A41\u0A71\u0A27\u0A35\u0A3E\u0A30",
        "\u0A35\u0A40\u0A30\u0A35\u0A3E\u0A30",
        "\u0A36\u0A41\u0A71\u0A15\u0A30\u0A35\u0A3E\u0A30",
        "\u0A36\u0A28\u0A3F\u0A71\u0A1A\u0A30\u0A35\u0A3E\u0A30"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0A1C\u0A28\u0A35\u0A30\u0A40",
        "\u0A5E\u0A30\u0A35\u0A30\u0A40",
        "\u0A2E\u0A3E\u0A30\u0A1A",
        "\u0A05\u0A2A\u0A4D\u0A30\u0A48\u0A32",
        "\u0A2E\u0A08",
        "\u0A1C\u0A42\u0A28",
        "\u0A1C\u0A41\u0A32\u0A3E\u0A08",
        "\u0A05\u0A17\u0A38\u0A24",
        "\u0A38\u0A24\u0A70\u0A2C\u0A30",
        "\u0A05\u0A15\u0A24\u0A42\u0A2C\u0A30",
        "\u0A28\u0A35\u0A70\u0A2C\u0A30",
        "\u0A26\u0A38\u0A70\u0A2C\u0A30"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A18\u0A70\u0A1F\u0A3E",
          other: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A18\u0A70\u0A1F\u0A47"
        },
        about_x_months: {
          one: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A2E\u0A39\u0A40\u0A28\u0A3E",
          other: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A2E\u0A39\u0A40\u0A28\u0A47"
        },
        about_x_years: {
          one: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A38\u0A3E\u0A32",
          other: "\u0A32\u0A17\u0A2D\u0A17 %{count} \u0A38\u0A3E\u0A32"
        },
        almost_x_years: {
          one: "\u0A24\u0A15\u0A30\u0A40\u0A2C\u0A28 %{count} \u0A38\u0A3E\u0A32",
          other: "\u0A24\u0A15\u0A30\u0A40\u0A2C\u0A28 %{count} \u0A38\u0A3E\u0A32"
        },
        half_a_minute: "\u0A05\u0A71\u0A27\u0A3E \u0A2E\u0A3F\u0A70\u0A1F",
        less_than_x_minutes: {
          one: "%{count} \u0A2E\u0A3F\u0A70\u0A1F \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F",
          other: "%{count} \u0A2E\u0A3F\u0A70\u0A1F\u0A3E\u0A02 \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F"
        },
        less_than_x_seconds: {
          one: "%{count} \u0A38\u0A15\u0A3F\u0A70\u0A1F \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F",
          other: "%{count} \u0A38\u0A15\u0A3F\u0A70\u0A1F\u0A3E\u0A02 \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F"
        },
        over_x_years: {
          one: "%{count} \u0A38\u0A3E\u0A32 \u0A24\u0A4B\u0A02 \u0A35\u0A71\u0A27",
          other: "%{count} \u0A38\u0A3E\u0A32\u0A3E\u0A02 \u0A24\u0A4B\u0A02 \u0A35\u0A71\u0A27"
        },
        x_days: {
          one: "%{count} \u0A26\u0A3F\u0A28",
          other: "%{count} \u0A26\u0A3F\u0A28"
        },
        x_minutes: {
          one: "%{count} \u0A2E\u0A3F\u0A70\u0A1F",
          other: "%{count} \u0A2E\u0A3F\u0A70\u0A1F"
        },
        x_months: {
          one: "%{count} \u0A2E\u0A39\u0A40\u0A28\u0A3E",
          other: "%{count} \u0A2E\u0A39\u0A40\u0A28\u0A47"
        },
        x_seconds: {
          one: "%{count} \u0A38\u0A15\u0A3F\u0A70\u0A1F",
          other: "%{count} \u0A38\u0A15\u0A3F\u0A70\u0A1F"
        }
      },
      prompts: {
        day: "\u0A26\u0A3F\u0A28",
        hour: "\u0A18\u0A70\u0A1F\u0A3E",
        minute: "\u0A2E\u0A3F\u0A70\u0A1F",
        month: "\u0A2E\u0A39\u0A40\u0A28\u0A3E",
        second: "\u0A38\u0A15\u0A3F\u0A70\u0A1F",
        year: "\u0A38\u0A3E\u0A32"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0A1C\u0A30\u0A42\u0A30 \u0A2E\u0A70\u0A1C\u0A42\u0A30 \u0A39\u0A4B\u0A35\u0A47",
        blank: "\u0A16\u0A3E\u0A32\u0A40 \u0A28\u0A39\u0A40\u0A02 \u0A39\u0A4B \u0A38\u0A15\u0A26\u0A3E",
        confirmation: "%{attribute} \u0A28\u0A39\u0A40\u0A02 \u0A30\u0A32\u0A26\u0A47",
        empty: "\u0A16\u0A3E\u0A32\u0A40 \u0A28\u0A39\u0A40\u0A02 \u0A39\u0A4B \u0A38\u0A15\u0A26\u0A3E",
        equal_to: "%{count} \u0A26\u0A47 \u0A2C\u0A30\u0A3E\u0A2C\u0A30 \u0A39\u0A4B\u0A23\u0A3E \u0A1A\u0A3E\u0A39\u0A40\u0A26\u0A3E \u0A39\u0A48",
        even: "\u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48 \u0A15\u0A47 \u0A1C\u0A4B\u0A1F\u0A3E \u0A39\u0A4B\u0A35\u0A47",
        exclusion: "\u0A2E\u0A71\u0A32\u0A3F\u0A06 \u0A39\u0A4B\u0A07\u0A06 \u0A39\u0A48",
        greater_than: "%{count} \u0A24\u0A4B\u0A02 \u0A35\u0A27\u0A47\u0A30\u0A47 \u0A39\u0A4B\u0A23\u0A3E \u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48",
        greater_than_or_equal_to: "%{count} \u0A24\u0A4B\u0A02 \u0A35\u0A27\u0A47\u0A30\u0A47 \u0A1C\u0A3E\u0A02 \u0A2C\u0A30\u0A3E\u0A2C\u0A30 \u0A39\u0A4B\u0A23\u0A3E \u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48",
        inclusion: "\u0A07\u0A38 \u0A32\u0A3F\u0A38\u0A1F \u0A35\u0A3F\u0A71\u0A1A \u0A36\u0A3E\u0A2E\u0A3F\u0A32 \u0A28\u0A39\u0A40\u0A02 \u0A39\u0A48",
        invalid: "\u0A28\u0A3E-\u0A2E\u0A70\u0A1C\u0A42\u0A30\u0A36\u0A41\u0A26\u0A3E \u0A39\u0A48",
        less_than: "%{count} \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F \u0A39\u0A4B\u0A23\u0A3E \u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48",
        less_than_or_equal_to: "%{count} \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F \u0A1C\u0A3E\u0A02 \u0A2C\u0A30\u0A3E\u0A2C\u0A30 \u0A39\u0A4B\u0A23\u0A3E \u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48",
        not_a_number: "\u0A38\u0A70\u0A16\u0A3F\u0A06 \u0A28\u0A39\u0A40\u0A02 \u0A39\u0A48",
        not_an_integer: "\u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48 \u0A15\u0A47 \u0A2A\u0A42\u0A30\u0A28 \u0A05\u0A70\u0A15 \u0A39\u0A4B\u0A35\u0A47",
        odd: "\u0A1C\u0A30\u0A42\u0A30\u0A40 \u0A39\u0A48 \u0A15\u0A47 \u0A15\u0A33\u0A40 \u0A39\u0A4B\u0A35\u0A47",
        other_than: "%{count} \u0A26\u0A40 \u0A1C\u0A17\u0A4D\u0A39\u0A3E \u0A39\u0A4B\u0A30 \u0A39\u0A4B\u0A23\u0A40 \u0A1A\u0A3E\u0A39\u0A40\u0A26\u0A40 \u0A39\u0A48",
        present: "\u0A1C\u0A30\u0A42\u0A30 \u0A16\u0A3E\u0A32\u0A40 \u0A39\u0A4B\u0A35\u0A47",
        taken: "\u0A2A\u0A39\u0A3F\u0A32\u0A3E\u0A02 \u0A39\u0A40 \u0A2E\u0A71\u0A32\u0A3F\u0A06 \u0A39\u0A4B\u0A07\u0A06 \u0A39\u0A48",
        too_long: {
          one: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A5B\u0A3F\u0A06\u0A26\u0A3E \u0A39\u0A48 (\u0A35\u0A71\u0A27 \u0A24\u0A4B\u0A02 \u0A35\u0A71\u0A27 %{count} \u0A05\u0A71\u0A16\u0A30)",
          other: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A5B\u0A3F\u0A06\u0A26\u0A3E \u0A39\u0A48 (\u0A35\u0A71\u0A27 \u0A24\u0A4B\u0A02 \u0A35\u0A71\u0A27 %{count} \u0A05\u0A71\u0A16\u0A30)"
        },
        too_short: {
          one: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A18\u0A71\u0A1F \u0A39\u0A48 (\u0A18\u0A71\u0A1F \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F %{count} \u0A05\u0A71\u0A16\u0A30)",
          other: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A18\u0A71\u0A1F \u0A39\u0A48 (\u0A18\u0A71\u0A1F \u0A24\u0A4B\u0A02 \u0A18\u0A71\u0A1F %{count} \u0A05\u0A71\u0A16\u0A30)"
        },
        wrong_length: {
          one: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A17\u0A32\u0A24 \u0A39\u0A48 (%{count} \u0A05\u0A71\u0A16\u0A30 \u0A39\u0A4B\u0A23\u0A40 \u0A1A\u0A3E\u0A39\u0A40\u0A26\u0A40 \u0A39\u0A48)",
          other: "\u0A32\u0A70\u0A2C\u0A3E\u0A08 \u0A17\u0A32\u0A24 \u0A39\u0A48 (%{count} \u0A05\u0A71\u0A16\u0A30 \u0A39\u0A4B\u0A23\u0A40 \u0A1A\u0A3E\u0A39\u0A40\u0A26\u0A40 \u0A39\u0A48)"
        }
      },
      template: {
        body: "\u0A39\u0A47\u0A20\u0A32\u0A47 \u0A16\u0A47\u0A24\u0A30\u0A3E\u0A02 \u0A35\u0A3F\u0A71\u0A1A \u0A17\u0A32\u0A24\u0A40\u0A06\u0A02 \u0A39\u0A28:",
        header: {
          one: "%{count} \u0A17\u0A32\u0A24\u0A40 \u0A15\u0A30\u0A15\u0A47 \u0A07\u0A39 %{model} \u0A38\u0A70\u0A2D\u0A3E\u0A32\u0A3F\u0A3C\u0A06 \u0A28\u0A39\u0A40\u0A02 \u0A17\u0A3F\u0A06",
          other: "%{count} \u0A17\u0A32\u0A24\u0A40\u0A06\u0A02 \u0A15\u0A30\u0A15\u0A47 \u0A07\u0A39 %{model} \u0A38\u0A70\u0A2D\u0A3E\u0A32\u0A3F\u0A3C\u0A06 \u0A28\u0A39\u0A40\u0A02 \u0A17\u0A3F\u0A06"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0A15\u0A3F\u0A30\u0A2A\u0A3E \u0A15\u0A30\u0A15\u0A47 \u0A1A\u0A41\u0A23\u0A4B"
      },
      submit: {
        create: "%{model} \u0A2C\u0A23\u0A3E\u0A13",
        submit: "%{model} \u0A2C\u0A1A\u0A3E\u0A13",
        update: "%{model} \u0A2C\u0A26\u0A32\u0A4B"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0A2C\u0A3F\u0A32\u0A40\u0A05\u0A28",
            million: "\u0A2E\u0A3F\u0A32\u0A40\u0A05\u0A28",
            quadrillion: "\u0A15\u0A4D\u0A35\u0A3E\u0A21\u0A30\u0A3F\u0A32\u0A40\u0A05\u0A28",
            thousand: "\u0A39\u0A5B\u0A3E\u0A30",
            trillion: "\u0A1F\u0A4D\u0A30\u0A3F\u0A32\u0A40\u0A05\u0A28",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0A2C\u0A3E\u0A08\u0A1F",
              other: "\u0A2C\u0A3E\u0A08\u0A1F"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0A05\u0A24\u0A47 ",
        two_words_connector: " \u0A05\u0A24\u0A47 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0A38\u0A35\u0A47\u0A30",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0A36\u0A3E\u0A2E"
    }
  };
  var pap_AW = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validashon a faya: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No por kita e registro ak\xED pasobra otro %{record} ta depend\xE9 di dje",
            has_one: "No por kita e registro ak\xED pasobra un otro %{record} ta depend\xE9 di dje"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dum",
        "lun",
        "mar",
        "ras",
        "wep",
        "bi\xE8",
        "sab"
      ],
      abbr_month_names: [
        null,
        "yan",
        "feb",
        "mar",
        "apr",
        "mei",
        "y\xFCn",
        "y\xFCl",
        "oug",
        "s\xE8p",
        "\xF2kt",
        "nov",
        "des"
      ],
      day_names: [
        "djadumingu",
        "djaluna",
        "djamars",
        "dj\xE1rason",
        "djaweps",
        "djabi\xE8rn\xE8",
        "djasabra"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%B di %d, %Y",
        short: "%b di %d"
      },
      month_names: [
        null,
        "yan\xFCari",
        "febr\xFCari",
        "mart",
        "aprel",
        "mei",
        "y\xFCni",
        "y\xFCli",
        "oug\xF9st\xF9s",
        "s\xE8pt\xE8mber",
        "\xF2ktober",
        "nov\xE8mber",
        "des\xE8mber"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "mas o m\xE9nos %{count} ora",
          other: "mas o m\xE9nos %{count} ora"
        },
        about_x_months: {
          one: "mas o m\xE9nos %{count} luna",
          other: "mas o m\xE9nos %{count} luna"
        },
        about_x_years: {
          one: "mas o m\xE9nos %{count} a\xF1a",
          other: "mas o m\xE9nos %{count} a\xF1a"
        },
        almost_x_years: {
          one: "kasi %{count} a\xF1a",
          other: "kasi %{count} a\xF1a"
        },
        half_a_minute: "mei min\xFCt",
        less_than_x_minutes: {
          one: "m\xE9nos ku %{count} min\xFCt",
          other: "m\xE9nos ku %{count} min\xFCt"
        },
        less_than_x_seconds: {
          one: "m\xE9nos ku %{count} sek\xF2nde",
          other: "m\xE9nos ku %{count} sek\xF2nde"
        },
        over_x_years: {
          one: "mas ku %{count} a\xF1a",
          other: "mas ku %{count} a\xF1a"
        },
        x_days: {
          one: "%{count} dia",
          other: "%{count} dia"
        },
        x_minutes: {
          one: "%{count} min\xFCt",
          other: "%{count} min\xFCt"
        },
        x_months: {
          one: "%{count} luna",
          other: "%{count} luna"
        },
        x_seconds: {
          one: "%{count} sek\xF2nde",
          other: "%{count} sek\xF2nde"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Dia",
        hour: "Ora",
        minute: "Min\xFCt",
        month: "Luna",
        second: "Sek\xF2nde",
        year: "A\xF1a"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mester asept'\xE9",
        blank: "no por keda sin yen'\xE9",
        confirmation: "no ta meskos %{attribute}",
        empty: "no por keda bash\xED",
        equal_to: "mester ta meskos ku %{count}",
        even: "mester ta par",
        exclusion: "ta reserv\xE1",
        greater_than: "mester ta mas grandi ku %{count}",
        greater_than_or_equal_to: "mester ta mes \xF2f mas grandi ku %{count}",
        inclusion: "no ta apares\xE9 den e lista",
        invalid: "no ta b\xE1lido",
        less_than: "mester ta m\xE9nos ku %{count}",
        less_than_or_equal_to: "mester ta m\xE9nos \xF2f mes tantu ku %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "no ta un number",
        not_an_integer: "mester ta un number hint\xE9",
        odd: "mester ta impar",
        other_than: "no por ta %{count}",
        present: "mester keda bash\xED",
        required: "must exist",
        taken: "ta us\xE1 kaba",
        too_long: {
          one: "ta muchu largu (m\xE1ksimo ta %{count} karakter)",
          other: "ta muchu largu (m\xE1ksimo ta %{count} karakter)"
        },
        too_short: {
          one: "ta muchu k\xF2rtiku (m\xEDnimo ta %{count} karakter)",
          other: "ta muchu k\xF2rtiku (m\xEDnimo ta %{count} karakter)"
        },
        wrong_length: {
          one: "su largura no ta korekto (mester ta %{count} karakter)",
          other: "su largura no ta korekto (mester ta %{count} karakter)"
        }
      },
      template: {
        body: "E siguiente r\xFAbrikanan ta duna problema:",
        header: {
          one: "%{count} fout a pone ku no por a warda e %{model} ak\xED",
          other: "%{count} fout a pone ku no por a save e %{model} ak\xED"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por fabor skohe"
      },
      submit: {
        create: "Krea %{model}",
        submit: "Warda %{model}",
        update: "Aktualis\xE1 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "ANG"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "bion",
            million: "mion",
            quadrillion: "kuatrion",
            thousand: "mil",
            trillion: "trion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: "b\xE8rdat",
          strip_insignificant_zeros: "b\xE8rdat"
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bait",
              other: "Bait"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", i ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H.%M.%S %z",
        long: "%d %B %Y %H.%M",
        short: "%d %b %H.%M"
      },
      pm: "pm"
    }
  };
  var pap_CW = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validashon a faya: %{errors}",
          restrict_dependent_destroy: {
            has_many: "No por kita e registro ak\xED pasobra otro %{record} ta depend\xE9 di dje",
            has_one: "No por kita e registro ak\xED pasobra un otro %{record} ta depend\xE9 di dje"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dum",
        "lun",
        "mar",
        "ras",
        "wep",
        "bi\xE8",
        "sab"
      ],
      abbr_month_names: [
        null,
        "yan",
        "feb",
        "mar",
        "apr",
        "mei",
        "y\xFCn",
        "y\xFCl",
        "oug",
        "s\xE8p",
        "\xF2kt",
        "nov",
        "des"
      ],
      day_names: [
        "djadumingu",
        "djaluna",
        "djamars",
        "dj\xE1rason",
        "djaweps",
        "djabi\xE8rn\xE8",
        "djasabra"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%B di %d, %Y",
        short: "%b di %d"
      },
      month_names: [
        null,
        "yan\xFCari",
        "febr\xFCari",
        "mart",
        "aprel",
        "mei",
        "y\xFCni",
        "y\xFCli",
        "oug\xF9st\xF9s",
        "s\xE8pt\xE8mber",
        "\xF2ktober",
        "nov\xE8mber",
        "des\xE8mber"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "mas o m\xE9nos %{count} ora",
          other: "mas o m\xE9nos %{count} ora"
        },
        about_x_months: {
          one: "mas o m\xE9nos %{count} luna",
          other: "mas o m\xE9nos %{count} luna"
        },
        about_x_years: {
          one: "mas o m\xE9nos %{count} a\xF1a",
          other: "mas o m\xE9nos %{count} a\xF1a"
        },
        almost_x_years: {
          one: "kasi %{count} a\xF1a",
          other: "kasi %{count} a\xF1a"
        },
        half_a_minute: "mei min\xFCt",
        less_than_x_minutes: {
          one: "m\xE9nos ku %{count} min\xFCt",
          other: "m\xE9nos ku %{count} min\xFCt"
        },
        less_than_x_seconds: {
          one: "m\xE9nos ku %{count} sek\xF2nde",
          other: "m\xE9nos ku %{count} sek\xF2nde"
        },
        over_x_years: {
          one: "mas ku %{count} a\xF1a",
          other: "mas ku %{count} a\xF1a"
        },
        x_days: {
          one: "%{count} dia",
          other: "%{count} dia"
        },
        x_minutes: {
          one: "%{count} min\xFCt",
          other: "%{count} min\xFCt"
        },
        x_months: {
          one: "%{count} luna",
          other: "%{count} luna"
        },
        x_seconds: {
          one: "%{count} sek\xF2nde",
          other: "%{count} sek\xF2nde"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Dia",
        hour: "Ora",
        minute: "Min\xFCt",
        month: "Luna",
        second: "Sek\xF2nde",
        year: "A\xF1a"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mester asept'\xE9",
        blank: "no por keda sin yen'\xE9",
        confirmation: "no ta meskos %{attribute}",
        empty: "no por keda bash\xED",
        equal_to: "mester ta meskos ku %{count}",
        even: "mester ta par",
        exclusion: "ta reserv\xE1",
        greater_than: "mester ta mas grandi ku %{count}",
        greater_than_or_equal_to: "mester ta mes \xF2f mas grandi ku %{count}",
        inclusion: "no ta apares\xE9 den e lista",
        invalid: "no ta b\xE1lido",
        less_than: "mester ta m\xE9nos ku %{count}",
        less_than_or_equal_to: "mester ta m\xE9nos \xF2f mes tantu ku %{count}",
        model_invalid: "Validation failed: %{errors}",
        not_a_number: "no ta un number",
        not_an_integer: "mester ta un number hint\xE9",
        odd: "mester ta impar",
        other_than: "no por ta %{count}",
        present: "mester keda bash\xED",
        required: "must exist",
        taken: "ta us\xE1 kaba",
        too_long: {
          one: "ta muchu largu (m\xE1ksimo ta %{count} karakter)",
          other: "ta muchu largu (m\xE1ksimo ta %{count} karakter)"
        },
        too_short: {
          one: "ta muchu k\xF2rtiku (m\xEDnimo ta %{count} karakter)",
          other: "ta muchu k\xF2rtiku (m\xEDnimo ta %{count} karakter)"
        },
        wrong_length: {
          one: "su largura no ta korekto (mester ta %{count} karakter)",
          other: "su largura no ta korekto (mester ta %{count} karakter)"
        }
      },
      template: {
        body: "E siguiente r\xFAbrikanan ta duna problema:",
        header: {
          one: "%{count} fout a pone ku no por a warda e %{model} ak\xED",
          other: "%{count} fout a pone ku no por a save e %{model} ak\xED"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por fabor skohe"
      },
      submit: {
        create: "Krea %{model}",
        submit: "Warda %{model}",
        update: "Aktualis\xE1 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "ANG"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "bion",
            million: "mion",
            quadrillion: "kuatrion",
            thousand: "mil",
            trillion: "trion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: "b\xE8rdat",
          strip_insignificant_zeros: "b\xE8rdat"
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bait",
              other: "Bait"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", i ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H.%M.%S %z",
        long: "%d %B %Y %H.%M",
        short: "%d %b %H.%M"
      },
      pm: "pm"
    }
  };
  var pl = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Znaleziono b\u0142\u0119dy: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Nie mo\u017Cna usun\u0105\u0107, gdy\u017C istniej\u0105 zale\u017Cne od niego %{record}",
            has_one: "Nie mo\u017Cna usun\u0105\u0107, gdy\u017C istnieje zale\u017Cny od niego %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "nie",
        "pon",
        "wto",
        "\u015Bro",
        "czw",
        "pi\u0105",
        "sob"
      ],
      abbr_month_names: [
        null,
        "sty",
        "lut",
        "mar",
        "kwi",
        "maj",
        "cze",
        "lip",
        "sie",
        "wrz",
        "pa\u017A",
        "lis",
        "gru"
      ],
      day_names: [
        "niedziela",
        "poniedzia\u0142ek",
        "wtorek",
        "\u015Broda",
        "czwartek",
        "pi\u0105tek",
        "sobota"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "stycznia",
        "lutego",
        "marca",
        "kwietnia",
        "maja",
        "czerwca",
        "lipca",
        "sierpnia",
        "wrze\u015Bnia",
        "pa\u017Adziernika",
        "listopada",
        "grudnia"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "oko\u0142o %{count} godziny",
          many: "oko\u0142o %{count} godzin",
          one: "oko\u0142o godziny",
          other: "oko\u0142o %{count} godzin"
        },
        about_x_months: {
          few: "oko\u0142o %{count} miesi\u0105ce",
          many: "oko\u0142o %{count} miesi\u0119cy",
          one: "oko\u0142o miesi\u0105ca",
          other: "oko\u0142o %{count} miesi\u0119cy"
        },
        about_x_years: {
          few: "oko\u0142o %{count} lata",
          many: "oko\u0142o %{count} lat",
          one: "oko\u0142o rok",
          other: "oko\u0142o %{count} lat"
        },
        almost_x_years: {
          few: "prawie %{count} lata",
          many: "prawie %{count} lat",
          one: "prawie rok",
          other: "prawie %{count} lat"
        },
        half_a_minute: "p\xF3\u0142 minuty",
        less_than_x_minutes: {
          few: "mniej ni\u017C %{count} minuty",
          many: "mniej ni\u017C %{count} minut",
          one: "mniej ni\u017C minut\u0119",
          other: "mniej ni\u017C %{count} minut"
        },
        less_than_x_seconds: {
          few: "mniej ni\u017C %{count} sekundy",
          many: "mniej ni\u017C %{count} sekund",
          one: "mniej ni\u017C sekund\u0119",
          other: "mniej ni\u017C %{count} sekund"
        },
        over_x_years: {
          few: "ponad %{count} lata",
          many: "ponad %{count} lat",
          one: "ponad rok",
          other: "ponad %{count} lat"
        },
        x_days: {
          few: "%{count} dni",
          many: "%{count} dni",
          one: "%{count} dzie\u0144",
          other: "%{count} dni"
        },
        x_minutes: {
          few: "%{count} minuty",
          many: "%{count} minut",
          one: "%{count} minuta",
          other: "%{count} minut"
        },
        x_months: {
          few: "%{count} miesi\u0105ce",
          many: "%{count} miesi\u0119cy",
          one: "%{count} miesi\u0105c",
          other: "%{count} miesi\u0119cy"
        },
        x_seconds: {
          few: "%{count} sekundy",
          many: "%{count} sekund",
          one: "%{count} sekunda",
          other: "%{count} sekund"
        }
      },
      prompts: {
        day: "Dzie\u0144",
        hour: "Godzina",
        minute: "Minuta",
        month: "Miesi\u0105c",
        second: "Sekundy",
        year: "Rok"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "musi zosta\u0107 zaakceptowane",
        blank: "nie mo\u017Ce by\u0107 puste",
        confirmation: "musi by\u0107 taki sam jak w %{attribute}",
        empty: "nie mo\u017Ce by\u0107 puste",
        equal_to: "musi by\u0107 r\xF3wne %{count}",
        even: "musi by\u0107 parzyste",
        exclusion: "jest zarezerwowane",
        greater_than: "musi by\u0107 wi\u0119ksze od %{count}",
        greater_than_or_equal_to: "musi by\u0107 wi\u0119ksze lub r\xF3wne %{count}",
        inclusion: "nie znajduje si\u0119 na li\u015Bcie dopuszczalnych warto\u015Bci",
        invalid: "jest nieprawid\u0142owe",
        less_than: "musi by\u0107 mniejsze od %{count}",
        less_than_or_equal_to: "musi by\u0107 mniejsze lub r\xF3wne %{count}",
        not_a_number: "nie jest liczb\u0105",
        not_an_integer: "musi by\u0107 liczb\u0105 ca\u0142kowit\u0105",
        odd: "musi by\u0107 nieparzyste",
        other_than: "musi by\u0107 inne ni\u017C %{count}",
        present: "musi by\u0107 puste",
        required: "musi istnie\u0107",
        taken: "zosta\u0142o ju\u017C zaj\u0119te",
        too_long: {
          few: "jest za d\u0142ugie (maksymalnie %{count} znaki)",
          many: "jest za d\u0142ugie (maksymalnie %{count} znak\xF3w)",
          one: "jest za d\u0142ugie (maksymalnie jeden znak)",
          other: "jest za d\u0142ugie (maksymalnie %{count} znak\xF3w)"
        },
        too_short: {
          few: "jest za kr\xF3tkie (przynajmniej %{count} znaki)",
          many: "jest za kr\xF3tkie (przynajmniej %{count} znak\xF3w)",
          one: "jest za kr\xF3tkie (przynajmniej jeden znak)",
          other: "jest za kr\xF3tkie (przynajmniej %{count} znak\xF3w)"
        },
        wrong_length: {
          few: "ma nieprawid\u0142ow\u0105 d\u0142ugo\u015B\u0107 (powinna wynosi\u0107 %{count} znaki)",
          many: "ma nieprawid\u0142ow\u0105 d\u0142ugo\u015B\u0107 (powinna wynosi\u0107 %{count} znak\xF3w)",
          one: "ma nieprawid\u0142ow\u0105 d\u0142ugo\u015B\u0107 (powinna wynosi\u0107 jeden znak)",
          other: "ma nieprawid\u0142ow\u0105 d\u0142ugo\u015B\u0107 (powinna wynosi\u0107 %{count} znak\xF3w)"
        }
      },
      template: {
        body: "B\u0142\u0119dy dotycz\u0105 nast\u0119puj\u0105cych p\xF3l:",
        header: {
          few: "%{model} nie zosta\u0142 zachowany z powodu %{count} b\u0142\u0119d\xF3w",
          many: "%{model} nie zosta\u0142 zachowany z powodu %{count} b\u0142\u0119d\xF3w",
          one: "%{model} nie zosta\u0142 zachowany z powodu jednego b\u0142\u0119du",
          other: "%{model} nie zosta\u0142 zachowany z powodu %{count} b\u0142\u0119d\xF3w"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Prosz\u0119 wybra\u0107"
      },
      submit: {
        create: "Utw\xF3rz %{model}",
        submit: "Wy\u015Blij %{model}",
        update: "Aktualizuj %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "many",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00D3: "O",
          \u00F3: "o",
          \u0104: "A",
          \u0105: "a",
          \u0106: "C",
          \u0107: "c",
          \u0118: "E",
          \u0119: "e",
          \u0141: "L",
          \u0142: "l",
          \u0143: "N",
          \u0144: "n",
          \u015A: "S",
          \u015B: "s",
          \u0179: "Z",
          \u017A: "z",
          \u017B: "Z",
          \u017C: "z"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: true,
          unit: "z\u0142"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliard",
            million: "Milion",
            quadrillion: "Biliard",
            thousand: "Tysi\u0105c",
            trillion: "Bilion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "bajty",
              many: "bajt\xF3w",
              one: "bajt",
              other: "bajty"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " oraz ",
        two_words_connector: " i ",
        words_connector: ", "
      }
    },
    time: {
      am: "przed po\u0142udniem",
      formats: {
        default: "%a, %-d %b %Y %H:%M:%S %z",
        long: "%-d %B %Y %H:%M",
        short: "%-d %b %H:%M"
      },
      pm: "po po\u0142udniu"
    }
  };
  var pt = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "A valida\xE7\xE3o falhou: %{errors}",
          restrict_dependent_destroy: {
            has_many: "N\xE3o pode ser eliminado por existirem depend\xEAncias de %{record}",
            has_one: "N\xE3o pode ser eliminado por existir uma depend\xEAncia de %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "seg",
        "ter",
        "qua",
        "qui",
        "sex",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "jan",
        "fev",
        "mar",
        "abr",
        "mai",
        "jun",
        "jul",
        "ago",
        "set",
        "out",
        "nov",
        "dez"
      ],
      day_names: [
        "domingo",
        "segunda-feira",
        "ter\xE7a-feira",
        "quarta-feira",
        "quinta-feira",
        "sexta-feira",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%d de %B de %Y",
        short: "%d de %B"
      },
      month_names: [
        null,
        "janeiro",
        "fevereiro",
        "mar\xE7o",
        "abril",
        "maio",
        "junho",
        "julho",
        "agosto",
        "setembro",
        "outubro",
        "novembro",
        "dezembro"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "aproximadamente %{count} hora",
          other: "aproximadamente %{count} horas"
        },
        about_x_months: {
          one: "aproximadamente %{count} m\xEAs",
          other: "aproximadamente %{count} meses"
        },
        about_x_years: {
          one: "aproximadamente %{count} ano",
          other: "aproximadamente %{count} anos"
        },
        almost_x_years: {
          one: "quase %{count} ano",
          other: "quase %{count} anos"
        },
        half_a_minute: "meio minuto",
        less_than_x_minutes: {
          one: "menos de um minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "mais de %{count} ano",
          other: "mais de %{count} anos"
        },
        x_days: {
          one: "%{count} dia",
          other: "%{count} dias"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} m\xEAs",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} ano",
          other: "%{count} anos"
        }
      },
      prompts: {
        day: "Dia",
        hour: "Hora",
        minute: "Minuto",
        month: "M\xEAs",
        second: "Segundo",
        year: "Ano"
      }
    },
    devise: {
      failure: {
        expired: "Sua conta expirou por inatividade. Por favor contate o administrador do site.",
        session_limited: "Seu login foi utilizado em outro local. Fa\xE7a o login novamente para continuar."
      },
      invalid_captcha: "O captcha est\xE1 errado.",
      invalid_security_question: "A resposta da pergunta de seguran\xE7a est\xE1 errada.",
      paranoid_verification_code: {
        show: {
          submit: "Enviar",
          submit_verification_code: "Enviar c\xF3digo de verifica\xE7\xE3o",
          verification_code: "C\xF3digo de verifica\xE7\xE3o"
        },
        updated: "C\xF3digo de verifica\xE7\xE3o aceito"
      },
      paranoid_verify: {
        code_required: "Por favor entre o c\xF3digo que a equipe de suporte enviou"
      },
      password_expired: {
        change_required: "Sua senha expirou. Renove sua senha por favor.",
        show: {
          change_my_password: "Mudar minha senha",
          current_password: "Senha atual",
          new_password: "Senha nova",
          new_password_confirmation: "Confirmar senha nova",
          renew_your_password: "Renove sua senha"
        },
        updated: "A nova senha foi salva."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "tem de ser aceite",
        blank: "n\xE3o pode estar em branco",
        confirmation: "n\xE3o coincide com a confirma\xE7\xE3o",
        empty: "n\xE3o pode estar vazio",
        equal_to: "tem de ser igual a %{count}",
        equal_to_current_password: "deve ser diferente da senha atual.",
        equal_to_email: "deve ser diferente do e-mail.",
        even: "tem de ser par",
        exclusion: "\xE9 reservado",
        greater_than: "tem de ser maior que %{count}",
        greater_than_or_equal_to: "tem de ser maior ou igual a %{count}",
        in: "deve estar em %{count}",
        inclusion: "n\xE3o est\xE1 inclu\xEDdo na lista",
        invalid: "\xE9 inv\xE1lido",
        less_than: "tem de ser menor que %{count}",
        less_than_or_equal_to: "tem de ser menor ou igual a %{count}",
        model_invalid: "A valida\xE7\xE3o falhou: %{errors}",
        not_a_number: "n\xE3o \xE9 um n\xFAmero",
        not_an_integer: "tem de ser um inteiro",
        odd: "tem de ser \xEDmpar",
        other_than: "tem de ser diferente de %{count}",
        password_complexity: {
          digit: {
            one: "deve conter ao menos um d\xEDgito",
            other: "deve conter ao menos %{count} d\xEDgitos"
          },
          lower: {
            one: "deve conter ao menos uma letra min\xFAscula",
            other: "deve conter ao menos %{count} letras min\xFAsculas"
          },
          symbol: {
            one: "deve conter ao menos um s\xEDmbolo",
            other: "deve conter ao menos %{count} s\xEDmbolos"
          },
          upper: {
            one: "deve conter ao menos uma letra mai\xFAscula",
            other: "deve conter ao menos %{count} letras mai\xFAsculas"
          }
        },
        present: "n\xE3o pode estar em branco",
        required: "\xE9 obrigat\xF3rio",
        taken: "n\xE3o est\xE1 dispon\xEDvel",
        taken_in_past: "foi usada anteriormente.",
        too_long: "\xE9 demasiado grande (o m\xE1ximo \xE9 de %{count} caracteres)",
        too_short: "\xE9 demasiado pequeno (o m\xEDnimo \xE9 de %{count} caracteres)",
        wrong_length: "comprimento errado (deve ter %{count} caracteres)"
      },
      template: {
        body: "Por favor, verifique os seguintes campos:",
        header: {
          one: "%{count} erro impediu guardar este %{model}",
          other: "%{count} erros impediram guardar este %{model}"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor seleccione"
      },
      submit: {
        create: "Criar %{model}",
        submit: "Gravar %{model}",
        update: "Atualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00AA: "a",
          \u00BA: "o",
          \u00C0: "A",
          \u00C1: "A",
          \u00C3: "A",
          \u00C6: "Ae",
          \u00C9: "E",
          \u00CA: "E",
          \u00CD: "I",
          \u00D3: "O",
          \u00D5: "O",
          \u00DA: "U",
          \u00E0: "a",
          \u00E1: "a",
          \u00E2: "a",
          \u00E3: "a",
          \u00E6: "ae",
          \u00E7: "c",
          \u00E9: "e",
          \u00EA: "e",
          \u00ED: "i",
          \u00F3: "o",
          \u00F5: "o",
          \u00FA: "u"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "mil milh\xF5es",
              other: "mil milh\xF5es"
            },
            million: {
              one: "milh\xE3o",
              other: "milh\xF5es"
            },
            quadrillion: {
              one: "mil bili\xF5es",
              other: "mil bili\xF5es"
            },
            thousand: "mil",
            trillion: {
              one: "bili\xE3o",
              other: "bili\xF5es"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%A, %d de %B de %Y, %H:%Mh",
        long: "%A, %d de %B de %Y, %H:%Mh",
        short: "%d/%m, %H:%M hs"
      },
      pm: "pm"
    }
  };
  var pt_BR = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "A valida\xE7\xE3o falhou: %{errors}",
          restrict_dependent_destroy: {
            has_many: "N\xE3o \xE9 poss\xEDvel excluir o registro pois existem %{record} dependentes",
            has_one: "N\xE3o \xE9 poss\xEDvel excluir o registro pois existe um %{record} dependente"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "seg",
        "ter",
        "qua",
        "qui",
        "sex",
        "s\xE1b"
      ],
      abbr_month_names: [
        null,
        "jan",
        "fev",
        "mar",
        "abr",
        "mai",
        "jun",
        "jul",
        "ago",
        "set",
        "out",
        "nov",
        "dez"
      ],
      day_names: [
        "domingo",
        "segunda-feira",
        "ter\xE7a-feira",
        "quarta-feira",
        "quinta-feira",
        "sexta-feira",
        "s\xE1bado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%d de %B de %Y",
        short: "%d de %B"
      },
      month_names: [
        null,
        "janeiro",
        "fevereiro",
        "mar\xE7o",
        "abril",
        "maio",
        "junho",
        "julho",
        "agosto",
        "setembro",
        "outubro",
        "novembro",
        "dezembro"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "aproximadamente %{count} hora",
          other: "aproximadamente %{count} horas"
        },
        about_x_months: {
          one: "aproximadamente %{count} m\xEAs",
          other: "aproximadamente %{count} meses"
        },
        about_x_years: {
          one: "aproximadamente %{count} ano",
          other: "aproximadamente %{count} anos"
        },
        almost_x_years: {
          one: "quase %{count} ano",
          other: "quase %{count} anos"
        },
        half_a_minute: "meio minuto",
        less_than_x_minutes: {
          one: "menos de um minuto",
          other: "menos de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "menos de %{count} segundo",
          other: "menos de %{count} segundos"
        },
        over_x_years: {
          one: "mais de %{count} ano",
          other: "mais de %{count} anos"
        },
        x_days: {
          one: "%{count} dia",
          other: "%{count} dias"
        },
        x_minutes: {
          one: "%{count} minuto",
          other: "%{count} minutos"
        },
        x_months: {
          one: "%{count} m\xEAs",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "%{count} segundo",
          other: "%{count} segundos"
        },
        x_years: {
          one: "%{count} ano",
          other: "%{count} anos"
        }
      },
      prompts: {
        day: "Dia",
        hour: "Hora",
        minute: "Minuto",
        month: "M\xEAs",
        second: "Segundo",
        year: "Ano"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "deve ser aceito",
        blank: "n\xE3o pode ficar em branco",
        confirmation: "n\xE3o \xE9 igual a %{attribute}",
        empty: "n\xE3o pode ficar vazio",
        equal_to: "deve ser igual a %{count}",
        even: "deve ser par",
        exclusion: "n\xE3o est\xE1 dispon\xEDvel",
        greater_than: "deve ser maior que %{count}",
        greater_than_or_equal_to: "deve ser maior ou igual a %{count}",
        in: "deve estar em %{count}",
        inclusion: "n\xE3o est\xE1 inclu\xEDdo na lista",
        invalid: "n\xE3o \xE9 v\xE1lido",
        less_than: "deve ser menor que %{count}",
        less_than_or_equal_to: "deve ser menor ou igual a %{count}",
        model_invalid: "A valida\xE7\xE3o falhou: %{errors}",
        not_a_number: "n\xE3o \xE9 um n\xFAmero",
        not_an_integer: "n\xE3o \xE9 um n\xFAmero inteiro",
        odd: "deve ser \xEDmpar",
        other_than: "deve ser diferente de %{count}",
        present: "deve ficar em branco",
        required: "\xE9 obrigat\xF3rio(a)",
        taken: "j\xE1 est\xE1 em uso",
        too_long: {
          one: "\xE9 muito longo (m\xE1ximo: %{count} caracter)",
          other: "\xE9 muito longo (m\xE1ximo: %{count} caracteres)"
        },
        too_short: {
          one: "\xE9 muito curto (m\xEDnimo: %{count} caracter)",
          other: "\xE9 muito curto (m\xEDnimo: %{count} caracteres)"
        },
        wrong_length: {
          one: "n\xE3o possui o tamanho esperado (%{count} caracter)",
          other: "n\xE3o possui o tamanho esperado (%{count} caracteres)"
        }
      },
      template: {
        body: "Por favor, verifique o(s) seguinte(s) campo(s):",
        header: {
          one: "N\xE3o foi poss\xEDvel gravar %{model}: %{count} erro",
          other: "N\xE3o foi poss\xEDvel gravar %{model}: %{count} erros"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Por favor selecione"
      },
      submit: {
        create: "Criar %{model}",
        submit: "Salvar %{model}",
        update: "Atualizar %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u %n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "R$"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "bilh\xE3o",
              other: "bilh\xF5es"
            },
            million: {
              one: "milh\xE3o",
              other: "milh\xF5es"
            },
            quadrillion: {
              one: "quatrilh\xE3o",
              other: "quatrilh\xF5es"
            },
            thousand: "mil",
            trillion: {
              one: "trilh\xE3o",
              other: "trilh\xF5es"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ".",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: "."
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %B de %Y, %H:%M:%S %z",
        long: "%d de %B de %Y, %H:%M",
        short: "%d de %B, %H:%M"
      },
      pm: "pm"
    }
  };
  var rm = {
    date: {
      abbr_day_names: [
        "du",
        "gli",
        "ma",
        "me",
        "gie",
        "ve",
        "so"
      ],
      abbr_month_names: [
        null,
        "schan",
        "favr",
        "mars",
        "avr",
        "matg",
        "zercl",
        "fan",
        "avust",
        "sett",
        "oct",
        "nov",
        "dec"
      ],
      day_names: [
        "dumengia",
        "glindesdi",
        "mardi",
        "mesemna",
        "gievgia",
        "venderdi",
        "sonda"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e. %B %Y",
        short: "%e. %b"
      },
      month_names: [
        null,
        "schaner",
        "favrer",
        "mars",
        "avrigl",
        "matg",
        "zercladur",
        "fanadur",
        "avust",
        "settember",
        "october",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "circa %{count} uras",
          many: "circa %{count} uras",
          one: "circa in'ura",
          other: "circa %{count} uras",
          two: "circa %{count} uras",
          zero: "circa %{count} uras"
        },
        about_x_months: {
          few: "circa %{count} mais",
          many: "circa %{count} mais",
          one: "circa in mais",
          other: "circa %{count} mais",
          two: "circa %{count} mais",
          zero: "circa %{count} mais"
        },
        about_x_years: {
          few: "circa %{count} onns",
          many: "circa %{count} onns",
          one: "circa in onn",
          other: "circa %{count} onns",
          two: "circa %{count} onns",
          zero: "circa %{count} onns"
        },
        half_a_minute: "ina mesa minuta",
        less_than_x_minutes: {
          few: "main che %{count} minutas",
          many: "main che %{count} minutas",
          one: "main ch\u2019ina minuta",
          other: "main che %{count} minutas",
          two: "main che %{count} minutas",
          zero: "main che %{count} minutas"
        },
        less_than_x_seconds: {
          few: "main che %{count} secundas",
          many: "main che %{count} secundas",
          one: "main ch\u2019ina secunda",
          other: "main che %{count} secundas",
          two: "main che %{count} secundas",
          zero: "main che %{count} secundas"
        },
        over_x_years: {
          few: "dapli che %{count} onns",
          many: "dapli che %{count} onns",
          one: "dapli ch'in onn",
          other: "dapli che %{count} onns",
          two: "dapli che %{count} onns",
          zero: "dapli che %{count} onns"
        },
        x_days: {
          few: "%{count} dis",
          many: "%{count} dis",
          one: "in di",
          other: "%{count} dis",
          two: "%{count} dis",
          zero: "%{count} dis"
        },
        x_minutes: {
          few: "%{count} minutas",
          many: "%{count} minutas",
          one: "%{count} minuta",
          other: "%{count} minutas",
          two: "%{count} minutas",
          zero: "%{count} minutas"
        },
        x_months: {
          few: "%{count} mais",
          many: "%{count} mais",
          one: "in mais",
          other: "%{count} mais",
          two: "%{count} mais",
          zero: "%{count} mais"
        },
        x_seconds: {
          few: "%{count} secundas",
          many: "%{count} secundas",
          one: "ina secunda",
          other: "%{count} secundas",
          two: "%{count} secundas",
          zero: "%{count} secundas"
        }
      },
      prompts: {
        day: "dis",
        hour: "uras",
        minute: "minutas",
        month: "mais",
        second: "secundas",
        year: "onns"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "sto vegnir accept\xE0",
        blank: "sto vegnir emplen\xEC ora",
        confirmation: "na correspunda betg al champ da conferma",
        empty: "sto vegnir emplen\xEC ora",
        equal_to: "sto esser exact %{count}",
        even: "sto esser p\xE8r",
        exclusion: "na stat betg a disposiziun",
        greater_than: "sto esser pli grond che %{count}",
        greater_than_or_equal_to: "sto esser pli grond u medem sco %{count}",
        inclusion: "n'\xE8 betg sin la glista",
        invalid: "n'\xE8 betg valid",
        less_than: "sto esser pli pitschen che %{count}",
        less_than_or_equal_to: "sto esser pli pitschen u medem sco %{count}",
        not_a_number: "\xE8 betg in dumber",
        odd: "sto esser sp\xE8r",
        taken: "\xE8 gia occup\xE0",
        too_long: "\xE8 memia lung (betg dapli che %{count} caracters)",
        too_short: "\xE8 memia curt (betg pli pauc che %{count} caracters)",
        wrong_length: "ha la fallida lunghezza (sto avair %{count} caracters)"
      },
      template: {
        body: "Faschai usch\xE8 bain e controllai ils suandants champs:",
        header: {
          few: "Betg pussaivel da memorisar quest %{model}: %{count} errurs.",
          many: "Betg pussaivel da memorisar quest %{model}: %{count} errurs.",
          one: "Betg pussaivel da memorisar quest %{model}: %{count} errur.",
          other: "Betg pussaivel da memorisar quest %{model}: %{count} errurs.",
          two: "Betg pussaivel da memorisar quest %{model}: %{count} errurs.",
          zero: "Betg pussaivel da memorisar quest %{model}: %{count} errurs."
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: "'",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "CHF"
        }
      },
      format: {
        delimiter: "'",
        precision: 2,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "bytes",
              many: "bytes",
              one: "byte",
              other: "bytes",
              two: "bytes",
              zero: "bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "avantmezdi",
      formats: {
        default: "%A, %d. %B %Y, %H:%M Uhr",
        long: "%A, %d. %B %Y, %H:%M Uhr",
        short: "%d. %B, %H:%M Uhr"
      },
      pm: "suentermezdi"
    }
  };
  var ro = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validare nereu\u015Fit\u0103 %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "dum",
        "lun",
        "mar",
        "mie",
        "joi",
        "vin",
        "s\xE2m"
      ],
      abbr_month_names: [
        null,
        "ian",
        "feb",
        "mar",
        "apr",
        "mai",
        "iun",
        "iul",
        "aug",
        "sep",
        "oct",
        "noi",
        "dec"
      ],
      day_names: [
        "duminic\u0103",
        "luni",
        "mar\u021Bi",
        "miercuri",
        "joi",
        "vineri",
        "s\xE2mb\u0103t\u0103"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "ianuarie",
        "februarie",
        "martie",
        "aprilie",
        "mai",
        "iunie",
        "iulie",
        "august",
        "septembrie",
        "octombrie",
        "noiembrie",
        "decembrie"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "aproximativ %{count} ore",
          one: "aproximativ o or\u0103",
          other: "aproximativ %{count} ore"
        },
        about_x_months: {
          few: "aproximativ %{count} luni",
          one: "aproximativ o lun\u0103",
          other: "aproximativ %{count} luni"
        },
        about_x_years: {
          few: "aproximativ %{count} ani",
          one: "aproximativ un an",
          other: "aproximativ %{count} ani"
        },
        almost_x_years: {
          few: "aproape %{count} ani",
          one: "aproape %{count} an",
          other: "aproape %{count} ani"
        },
        half_a_minute: "jum\u0103tate de minut",
        less_than_x_minutes: {
          few: "mai pu\u021Bin de %{count} minute",
          one: "mai pu\u021Bin de un minut",
          other: "mai pu\u021Bin de %{count} minute"
        },
        less_than_x_seconds: {
          few: "mai pu\u021Bin de %{count} secunde",
          one: "mai pu\u021Bin de o secund\u0103",
          other: "mai pu\u021Bin de %{count} secunde"
        },
        over_x_years: {
          few: "mai mult de %{count} ani",
          one: "mai mult de un an",
          other: "mai mult de %{count} ani"
        },
        x_days: {
          few: "%{count} zile",
          one: "%{count} zi",
          other: "%{count} zile"
        },
        x_minutes: {
          few: "%{count} minute",
          one: "%{count} minut",
          other: "%{count} minute"
        },
        x_months: {
          few: "%{count} luni",
          one: "%{count} lun\u0103",
          other: "%{count} luni"
        },
        x_seconds: {
          few: "%{count} secunde",
          one: "%{count} secund\u0103",
          other: "%{count} secunde"
        }
      },
      prompts: {
        day: "ziua",
        hour: "ora",
        minute: "minutul",
        month: "luna",
        second: "secunda",
        year: "anul"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "trebuie dat acceptul",
        blank: "nu poate fi necompletat",
        confirmation: "nu este confirmat",
        empty: "nu poate fi necompletat",
        equal_to: "trebuie s\u0103 fie egal cu %{count}",
        even: "trebuie s\u0103 fie impar",
        exclusion: "este rezervat",
        greater_than: "trebuie s\u0103 fie mai mare dec\xE2t %{count}",
        greater_than_or_equal_to: "trebuie s\u0103 fie mai mare sau egal cu %{count}",
        inclusion: "nu este inclus \xEEn list\u0103",
        invalid: "este invalid",
        less_than: "trebuie s\u0103 fie mai mic dec\xE2t %{count}",
        less_than_or_equal_to: "trebuie s\u0103 fie mai mic sau egal cu %{count}",
        not_a_number: "nu este un num\u0103r",
        not_an_integer: "trebuie s\u0103 fie un mum\u0103r \xEEntreg",
        odd: "trebuie s\u0103 fie par",
        taken: "este deja folosit",
        too_long: "este prea lung (se pot folosi maximum %{count} caractere)",
        too_short: "este prea scurt (minimum de caractere este %{count})",
        wrong_length: "nu are lungimea corect\u0103 (trebuie s\u0103 aib\u0103 %{count} caractere)"
      },
      template: {
        body: "\xCEncearc\u0103 s\u0103 corectezi urmatoarele c\xE2mpuri:",
        header: {
          few: "Nu am putut salva acest %{model}: %{count} erori.",
          one: "Nu am putut salva acest %{model}: o eroare",
          other: "Nu am putut salva acest %{model}: %{count} erori."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Alege\u021Bi"
      },
      submit: {
        create: "Creare %{model}",
        submit: "Salvare %{model}",
        update: "Modificare %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C2: "A",
          \u00CE: "I",
          \u00E2: "a",
          \u00EE: "i",
          \u0102: "A",
          \u0103: "a",
          \u0218: "S",
          \u0219: "s",
          \u021A: "T",
          \u021B: "t"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "RON"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "miliard",
            million: "milion",
            quadrillion: "quadrilion",
            thousand: "mie",
            trillion: "trilion",
            unit: ""
          }
        },
        format: {
          delimiter: ",",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Bytes",
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ","
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0219i ",
        two_words_connector: " \u0219i ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var ru = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0412\u043E\u0437\u043D\u0438\u043A\u043B\u0438 \u043E\u0448\u0438\u0431\u043A\u0438: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u0437\u0430\u043F\u0438\u0441\u044C, \u0442\u0430\u043A \u043A\u0430\u043A \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0442 \u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0441\u0442\u0438: %{record}",
            has_one: "\u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u0437\u0430\u043F\u0438\u0441\u044C, \u0442\u0430\u043A \u043A\u0430\u043A \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0441\u0442\u044C: %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0412\u0441",
        "\u041F\u043D",
        "\u0412\u0442",
        "\u0421\u0440",
        "\u0427\u0442",
        "\u041F\u0442",
        "\u0421\u0431"
      ],
      abbr_month_names: [
        null,
        "\u044F\u043D\u0432.",
        "\u0444\u0435\u0432\u0440.",
        "\u043C\u0430\u0440\u0442\u0430",
        "\u0430\u043F\u0440.",
        "\u043C\u0430\u044F",
        "\u0438\u044E\u043D\u044F",
        "\u0438\u044E\u043B\u044F",
        "\u0430\u0432\u0433.",
        "\u0441\u0435\u043D\u0442.",
        "\u043E\u043A\u0442.",
        "\u043D\u043E\u044F\u0431.",
        "\u0434\u0435\u043A."
      ],
      day_names: [
        "\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435",
        "\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A",
        "\u0432\u0442\u043E\u0440\u043D\u0438\u043A",
        "\u0441\u0440\u0435\u0434\u0430",
        "\u0447\u0435\u0442\u0432\u0435\u0440\u0433",
        "\u043F\u044F\u0442\u043D\u0438\u0446\u0430",
        "\u0441\u0443\u0431\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "\u044F\u043D\u0432\u0430\u0440\u044F",
        "\u0444\u0435\u0432\u0440\u0430\u043B\u044F",
        "\u043C\u0430\u0440\u0442\u0430",
        "\u0430\u043F\u0440\u0435\u043B\u044F",
        "\u043C\u0430\u044F",
        "\u0438\u044E\u043D\u044F",
        "\u0438\u044E\u043B\u044F",
        "\u0430\u0432\u0433\u0443\u0441\u0442\u0430",
        "\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044F",
        "\u043E\u043A\u0442\u044F\u0431\u0440\u044F",
        "\u043D\u043E\u044F\u0431\u0440\u044F",
        "\u0434\u0435\u043A\u0430\u0431\u0440\u044F"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441\u043E\u0432",
          many: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441\u043E\u0432",
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441\u0430",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u0447\u0430\u0441\u043E\u0432"
        },
        about_x_months: {
          few: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u044F\u0446\u0435\u0432",
          many: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u044F\u0446\u0435\u0432",
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u044F\u0446\u0430",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u043C\u0435\u0441\u044F\u0446\u0435\u0432"
        },
        about_x_years: {
          few: "\u043E\u043A\u043E\u043B\u043E %{count} \u043B\u0435\u0442",
          many: "\u043E\u043A\u043E\u043B\u043E %{count} \u043B\u0435\u0442",
          one: "\u043E\u043A\u043E\u043B\u043E %{count} \u0433\u043E\u0434\u0430",
          other: "\u043E\u043A\u043E\u043B\u043E %{count} \u043B\u0435\u0442"
        },
        almost_x_years: {
          few: "\u043F\u043E\u0447\u0442\u0438 %{count} \u0433\u043E\u0434\u0430",
          many: "\u043F\u043E\u0447\u0442\u0438 %{count} \u043B\u0435\u0442",
          one: "\u043F\u043E\u0447\u0442\u0438 %{count} \u0433\u043E\u0434",
          other: "\u043F\u043E\u0447\u0442\u0438 %{count} \u043B\u0435\u0442"
        },
        half_a_minute: "\u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B",
        less_than_x_minutes: {
          few: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u043C\u0438\u043D\u0443\u0442",
          many: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u043C\u0438\u043D\u0443\u0442",
          one: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u043C\u0438\u043D\u0443\u0442\u044B",
          other: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u043C\u0438\u043D\u0443\u0442"
        },
        less_than_x_seconds: {
          few: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          many: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
          other: "\u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434"
        },
        over_x_years: {
          few: "\u0431\u043E\u043B\u044C\u0448\u0435 %{count} \u043B\u0435\u0442",
          many: "\u0431\u043E\u043B\u044C\u0448\u0435 %{count} \u043B\u0435\u0442",
          one: "\u0431\u043E\u043B\u044C\u0448\u0435 %{count} \u0433\u043E\u0434\u0430",
          other: "\u0431\u043E\u043B\u044C\u0448\u0435 %{count} \u043B\u0435\u0442"
        },
        x_days: {
          few: "%{count} \u0434\u043D\u044F",
          many: "%{count} \u0434\u043D\u0435\u0439",
          one: "%{count} \u0434\u0435\u043D\u044C",
          other: "%{count} \u0434\u043D\u0435\u0439"
        },
        x_minutes: {
          few: "%{count} \u043C\u0438\u043D\u0443\u0442\u044B",
          many: "%{count} \u043C\u0438\u043D\u0443\u0442",
          one: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442"
        },
        x_months: {
          few: "%{count} \u043C\u0435\u0441\u044F\u0446\u0430",
          many: "%{count} \u043C\u0435\u0441\u044F\u0446\u0435\u0432",
          one: "%{count} \u043C\u0435\u0441\u044F\u0446",
          other: "%{count} \u043C\u0435\u0441\u044F\u0446\u0435\u0432"
        },
        x_seconds: {
          few: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u044B",
          many: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434"
        },
        x_years: {
          few: "%{count} \u0433\u043E\u0434\u0430",
          many: "%{count} \u043B\u0435\u0442",
          one: "%{count} \u0433\u043E\u0434",
          other: "%{count} \u043B\u0435\u0442"
        }
      },
      prompts: {
        day: "\u0414\u0435\u043D\u044C",
        hour: "\u0427\u0430\u0441",
        minute: "\u041C\u0438\u043D\u0443\u0442\u0430",
        month: "\u041C\u0435\u0441\u044F\u0446",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434\u0430",
        year: "\u0413\u043E\u0434"
      }
    },
    devise: {
      failure: {
        expired: "\u0412\u0430\u0448 \u0430\u043A\u043A\u0430\u0443\u043D\u0442 \u0443\u0441\u0442\u0430\u0440\u0435\u043B \u0438\u0437-\u0437\u0430 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044F\u0436\u0438\u0442\u0435\u0441\u044C \u0441 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u043E\u043C.",
        session_limited: "\u0412\u0430\u0448\u0438 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B \u0432\u0445\u043E\u0434\u0430 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442\u0441\u044F \u0432 \u0434\u0440\u0443\u0433\u043E\u043C \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0443\u0439\u0442\u0435\u0441\u044C \u0441\u043D\u043E\u0432\u0430, \u0447\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C \u0432 \u044D\u0442\u043E\u043C \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435."
      },
      invalid_captcha: "\u0412\u0432\u0435\u0434\u0435\u043D \u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043A\u043E\u0434 \u043A\u0430\u043F\u0447\u0438.",
      invalid_security_question: "\u041E\u0442\u0432\u0435\u0442 \u043D\u0430 \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u044B\u0439 \u0432\u043E\u043F\u0440\u043E\u0441 \u0431\u044B\u043B \u043D\u0435\u0432\u0435\u0440\u043D\u044B\u043C.",
      paranoid_verification_code: {
        show: {
          submit: "\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C",
          submit_verification_code: "\u0412\u0432\u043E\u0434 \u043A\u043E\u0434\u0430 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F",
          verification_code: "\u041A\u043E\u0434 \u043F\u043E\u0434\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F"
        },
        updated: "\u041A\u043E\u0434 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F \u043F\u0440\u0438\u043D\u044F\u0442"
      },
      paranoid_verify: {
        code_required: "\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043A\u043E\u0434, \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0439 \u043E\u0442 \u043D\u0430\u0448\u0435\u0439 \u043A\u043E\u043C\u0430\u043D\u0434\u044B \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438"
      },
      password_expired: {
        change_required: "\u0412\u0430\u0448 \u043F\u0430\u0440\u043E\u043B\u044C \u0443\u0441\u0442\u0430\u0440\u0435\u043B. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u043D\u043E\u0432\u044B\u0439.",
        show: {
          change_my_password: "\u041F\u043E\u043C\u0435\u043D\u044F\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044C",
          current_password: "\u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password: "\u041D\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password_confirmation: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043D\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          renew_your_password: "\u0421\u043C\u0435\u043D\u0430 \u043F\u0430\u0440\u043E\u043B\u044F"
        },
        updated: "\u0412\u0430\u0448 \u043D\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u043D\u0443\u0436\u043D\u043E \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C",
        blank: "\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        confirmation: "\u043D\u0435 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0435\u0442 \u0441\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\u043C \u043F\u043E\u043B\u044F %{attribute}",
        empty: "\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        equal_to: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u043B\u0438\u0448\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435, \u0440\u0430\u0432\u043D\u043E\u0435 %{count}",
        equal_to_current_password: "\u0434\u043E\u043B\u0436\u0435\u043D \u043E\u0442\u043B\u0438\u0447\u0430\u0442\u044C\u0441\u044F \u043E\u0442 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u043F\u0430\u0440\u043E\u043B\u044F.",
        equal_to_email: "\u0434\u043E\u043B\u0436\u043D\u043E \u043E\u0442\u043B\u0438\u0447\u0430\u0442\u044C\u0441\u044F \u043E\u0442 \u0430\u0434\u0440\u0435\u0441\u0430 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B.",
        even: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u043B\u0438\u0448\u044C \u0447\u0435\u0442\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
        exclusion: "\u0438\u043C\u0435\u0435\u0442 \u0437\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
        greater_than: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0431\u043E\u043B\u044C\u0448\u0435\u0435 %{count}",
        greater_than_or_equal_to: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0431\u043E\u043B\u044C\u0448\u0435\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E\u0435 %{count}",
        in: "\u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0432 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u0435 %{count}",
        inclusion: "\u0438\u043C\u0435\u0435\u0442 \u043D\u0435\u043F\u0440\u0435\u0434\u0443\u0441\u043C\u043E\u0442\u0440\u0435\u043D\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
        invalid: "\u0438\u043C\u0435\u0435\u0442 \u043D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
        less_than: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043C\u0435\u043D\u044C\u0448\u0435\u0435 \u0447\u0435\u043C %{count}",
        less_than_or_equal_to: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043C\u0435\u043D\u044C\u0448\u0435\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E\u0435 %{count}",
        model_invalid: "\u0412\u043E\u0437\u043D\u0438\u043A\u043B\u0438 \u043E\u0448\u0438\u0431\u043A\u0438: %{errors}",
        not_a_number: "\u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0447\u0438\u0441\u043B\u043E\u043C",
        not_an_integer: "\u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0446\u0435\u043B\u044B\u043C \u0447\u0438\u0441\u043B\u043E\u043C",
        odd: "\u043C\u043E\u0436\u0435\u0442 \u0438\u043C\u0435\u0442\u044C \u043B\u0438\u0448\u044C \u043D\u0435\u0447\u0435\u0442\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
        other_than: "\u0434\u043E\u043B\u0436\u043D\u043E \u043E\u0442\u043B\u0438\u0447\u0430\u0442\u044C\u0441\u044F \u043E\u0442 %{count}",
        password_complexity: {
          digit: {
            few: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0446\u0438\u0444\u0440\u044B",
            many: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0446\u0438\u0444\u0440",
            one: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B \u043E\u0434\u043D\u0443 \u0446\u0438\u0444\u0440\u0443",
            other: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0446\u0438\u0444\u0440\u044B"
          },
          lower: {
            few: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0441\u0442\u0440\u043E\u0447\u043D\u044B\u0435 \u0431\u0443\u043A\u0432\u044B",
            many: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0441\u0442\u0440\u043E\u0447\u043D\u044B\u0445 \u0431\u0443\u043A\u0432",
            one: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B \u043E\u0434\u043D\u0443 \u0441\u0442\u0440\u043E\u0447\u043D\u0443\u044E \u0431\u0443\u043A\u0432\u0443",
            other: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0441\u0442\u0440\u043E\u0447\u043D\u044B\u0445 \u0431\u0443\u043A\u0432"
          },
          symbol: {
            few: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0437\u043D\u0430\u043A\u0430 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u0438\u0438 \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u0430",
            many: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0437\u043D\u0430\u043A\u043E\u0432 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u0438\u0438 \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432",
            one: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B \u043E\u0434\u0438\u043D \u0437\u043D\u0430\u043A \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u0438\u0438 \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B",
            other: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u0437\u043D\u0430\u043A\u043E\u0432 \u043F\u0443\u043D\u043A\u0442\u0443\u0430\u0446\u0438\u0438 \u0438\u043B\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432"
          },
          upper: {
            few: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u044B\u0435 \u0431\u0443\u043A\u0432\u044B",
            many: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u044B\u0445 \u0431\u0443\u043A\u0432",
            one: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B \u043E\u0434\u043D\u0443 \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u0443\u044E \u0431\u0443\u043A\u0432\u0443",
            other: "\u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u044B\u0445 \u0431\u0443\u043A\u0432"
          }
        },
        present: "\u043D\u0443\u0436\u043D\u043E \u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C",
        required: "\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C",
        taken: "\u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
        taken_in_past: "\u0443\u0436\u0435 \u0440\u0430\u043D\u0435\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043B\u0441\u044F.",
        too_long: {
          few: "\u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)",
          many: "\u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432)",
          one: "\u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C %{count} \u0441\u0438\u043C\u0432\u043E\u043B)",
          other: "\u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)"
        },
        too_short: {
          few: "\u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432)",
          many: "\u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432)",
          one: "\u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)",
          other: "\u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)"
        },
        wrong_length: {
          few: "\u043D\u0435\u0432\u0435\u0440\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0434\u043B\u0438\u043D\u043E\u0439 \u0440\u043E\u0432\u043D\u043E %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)",
          many: "\u043D\u0435\u0432\u0435\u0440\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0434\u043B\u0438\u043D\u043E\u0439 \u0440\u043E\u0432\u043D\u043E %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432)",
          one: "\u043D\u0435\u0432\u0435\u0440\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0434\u043B\u0438\u043D\u043E\u0439 \u0440\u043E\u0432\u043D\u043E %{count} \u0441\u0438\u043C\u0432\u043E\u043B)",
          other: "\u043D\u0435\u0432\u0435\u0440\u043D\u043E\u0439 \u0434\u043B\u0438\u043D\u044B (\u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0434\u043B\u0438\u043D\u043E\u0439 \u0440\u043E\u0432\u043D\u043E %{count} \u0441\u0438\u043C\u0432\u043E\u043B\u0430)"
        }
      },
      template: {
        body: "\u041F\u0440\u043E\u0431\u043B\u0435\u043C\u044B \u0432\u043E\u0437\u043D\u0438\u043A\u043B\u0438 \u0441\u043E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C\u0438 \u043F\u043E\u043B\u044F\u043C\u0438:",
        header: {
          few: "%{model}: \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u043D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0438\u0437-\u0437\u0430 %{count} \u043E\u0448\u0438\u0431\u043E\u043A",
          many: "%{model}: \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u043D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0438\u0437-\u0437\u0430 %{count} \u043E\u0448\u0438\u0431\u043E\u043A",
          one: "%{model}: \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u043D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0438\u0437-\u0437\u0430 %{count} \u043E\u0448\u0438\u0431\u043A\u0438",
          other: "%{model}: \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u043D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0438\u0437-\u0437\u0430 %{count} \u043E\u0448\u0438\u0431\u043A\u0438"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435: "
      },
      submit: {
        create: "\u0421\u043E\u0437\u0434\u0430\u0442\u044C %{model}",
        submit: "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C %{model}",
        update: "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "many",
          "other"
        ]
      },
      transliterate: {}
    },
    i18n_tasks: {
      add_missing: {
        added: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u044B \u043A\u043B\u044E\u0447\u0438 (%{count})"
      },
      cmd: {
        args: {
          default_text: "\u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E: %{value}",
          desc: {
            all_locales: "\u041D\u0435 \u043E\u0436\u0438\u0434\u0430\u0442\u044C, \u0447\u0442\u043E \u043C\u0430\u0441\u043A\u0438 \u043A\u043B\u044E\u0447\u0430 \u043D\u0430\u0447\u0438\u043D\u0430\u044E\u0442\u0441\u044F \u0441 \u043B\u043E\u043A\u0430\u043B\u0438. \u041F\u0440\u0438\u043C\u0435\u043D\u044F\u0442\u044C \u043C\u0430\u0441\u043A\u0438 \u043A\u043E \u0432\u0441\u0435\u043C \u043B\u043E\u043A\u0430\u043B\u044F\u043C.",
            config: "\u041F\u0443\u0442\u044C \u043A \u0444\u0430\u0439\u043B\u0443 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438",
            confirm: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u043E\u043C",
            data_format: "\u0424\u043E\u0440\u043C\u0430\u0442 \u0434\u0430\u043D\u043D\u044B\u0445: %{valid_text}.",
            keep_order: "Keep the order of the keys",
            key_pattern: "\u041C\u0430\u0441\u043A\u0430 \u043A\u043B\u044E\u0447\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, common.*)",
            locale: "\u042F\u0437\u044B\u043A. \u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E: base",
            locale_to_translate_from: "\u042F\u0437\u044B\u043A, \u0441 \u043A\u043E\u0442\u043E\u0440\u043E\u0433\u043E \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u0438\u0442\u044C (\u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E: base)",
            locales_filter: "\u0421\u043F\u0438\u0441\u043E\u043A \u044F\u0437\u044B\u043A\u043E\u0432 \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438, \u0440\u0430\u0437\u0434\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u0437\u0430\u043F\u044F\u0442\u044B\u043C\u0438 (,). \u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E: \u0432\u0441\u0435. \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: base.",
            missing_types: "\u0422\u0438\u043F\u044B \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u044E\u0449\u0438\u0445 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u043E\u0432: %{valid}. \u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E: \u0432\u0441\u0435",
            nostdin: "\u041D\u0435 \u0447\u0438\u0442\u0430\u0442\u044C \u0434\u0435\u0440\u0435\u0432\u043E \u0438\u0437 \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u043E\u0433\u043E \u0432\u0432\u043E\u0434\u0430",
            out_format: "\u0424\u043E\u0440\u043C\u0430\u0442 \u0432\u044B\u0432\u043E\u0434\u0430: %{valid_text}.",
            pattern_router: "\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C pattern_router: \u043A\u043B\u044E\u0447\u0438 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0442\u0441\u044F \u043F\u043E \u0444\u0430\u0439\u043B\u0430\u043C \u0441\u043E\u0433\u043B\u0430\u0441\u043D\u043E data.write",
            strict: '\u041D\u0435 \u0443\u0433\u0430\u0434\u044B\u0432\u0430\u0442\u044C \u0434\u0438\u043D\u0430\u043C\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F \u043A\u043B\u044E\u0447\u0435\u0439, \u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440 `t("category.#{category.key}")`',
            translation_backend: "\u0414\u0432\u0438\u0436\u043E\u043A \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u0430 [google, deepl, yandex, openai]",
            value: "\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435, \u0438\u043D\u0442\u0435\u0440\u043F\u043E\u043B\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u0441 %%{value}, %%{human_key}, %%{key}, %%{default}, %%{value_or_human_key}, %%{value_or_default_or_human_key}"
          }
        },
        desc: {
          add_missing: "\u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u044E\u0449\u0438\u0435 \u043A\u043B\u044E\u0447\u0438 \u043A \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u0430\u043C",
          check_consistent_interpolations: "\u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044C, \u0447\u0442\u043E \u0432\u043E \u0432\u0441\u0435\u0445 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u0430\u0445 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442\u0441\u044F \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0435 \u0438\u043D\u0442\u0435\u0440\u043F\u043E\u043B\u044F\u0446\u0438\u043E\u043D\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435",
          check_normalized: "\u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C, \u0447\u0442\u043E \u0432\u0441\u0435 \u0444\u0430\u0439\u043B\u044B \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u043E\u0432 \u043D\u043E\u0440\u043C\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u044B",
          config: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044E",
          cp: "\u0441\u043A\u043E\u043F\u0438\u0440\u0443\u0439\u0442\u0435 \u043A\u043B\u044E\u0447\u0438 \u0432 \u0434\u0430\u043D\u043D\u044B\u0445 \u043B\u043E\u043A\u0430\u043B\u0438, \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 \u0448\u0430\u0431\u043B\u043E\u043D\u0443",
          data: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u043E\u0432",
          data_merge: "\u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0434\u0435\u0440\u0435\u0432\u043E \u043A \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u0430\u043C",
          data_remove: "\u0443\u0434\u0430\u043B\u0438\u0442\u044C \u043A\u043B\u044E\u0447\u0438, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0435\u0441\u0442\u044C \u0432 \u0434\u0435\u0440\u0435\u0432\u0435, \u0438\u0437 \u0434\u0430\u043D\u043D\u044B\u0445",
          data_write: "\u0437\u0430\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B \u0434\u0435\u0440\u0435\u0432\u043E\u043C",
          eq_base: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B, \u0440\u0430\u0432\u043D\u044B\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C \u0432 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u043C \u044F\u0437\u044B\u043A\u0435",
          find: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C, \u0433\u0434\u0435 \u043A\u043B\u044E\u0447\u0438 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442\u0441\u044F \u0432 \u043A\u043E\u0434\u0435",
          gem_path: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043F\u0443\u0442\u044C \u043A ruby gem",
          health: "\u0412\u0441\u0451 \u041E\u041A?",
          irb: "\u043D\u0430\u0447\u0430\u0442\u044C REPL \u0441\u0435\u0441\u0441\u0438\u044E \u0432 \u043A\u043E\u043D\u0442\u0435\u043A\u0441\u0442\u0435 i18n-tasks",
          missing: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u044E\u0449\u0438\u0435 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B",
          mv: "\u043F\u0435\u0440\u0435\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u0442\u044C / \u043E\u0431\u044A\u0435\u0434\u0438\u043D\u0438\u0442\u044C \u043A\u043B\u044E\u0447\u0438, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 \u0448\u0430\u0431\u043B\u043E\u043D\u0443",
          normalize: "\u043D\u043E\u0440\u043C\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u0442\u044C \u0444\u0430\u0439\u043B\u044B \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u043E\u0432 (\u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u043A\u0430 \u0438 \u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435)",
          remove_unused: "\u0443\u0434\u0430\u043B\u0438\u0442\u044C \u043D\u0435\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C\u044B\u0435 \u043A\u043B\u044E\u0447\u0438",
          rm: "\u0443\u0434\u0430\u043B\u0438\u0442\u044C \u043A\u043B\u044E\u0447\u0438, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 \u0448\u0430\u0431\u043B\u043E\u043D\u0443",
          translate_missing: "\u043F\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u044E\u0449\u0438\u0435 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B \u0441 Google Translate / DeepL Pro",
          tree_convert: "\u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u0442\u044C \u0434\u0435\u0440\u0435\u0432\u043E \u043C\u0435\u0436\u0434\u0443 \u0444\u043E\u0440\u043C\u0430\u0442\u0430\u043C\u0438",
          tree_filter: "\u0444\u0438\u043B\u044C\u0442\u0440\u043E\u0432\u0430\u0442\u044C \u0434\u0435\u0440\u0435\u0432\u043E \u043F\u043E \u043A\u043B\u044E\u0447\u0443",
          tree_merge: "\u043E\u0431\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0442\u044C \u0434\u0435\u0440\u0435\u0432\u044C\u044F",
          tree_mv_key: "\u043F\u0435\u0440\u0435\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0442\u044C / \u043E\u0431\u044A\u0435\u0434\u0438\u043D\u0438\u0442\u044C / \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u043A\u043B\u044E\u0447\u0438 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 \u0448\u0430\u0431\u043B\u043E\u043D\u0443",
          tree_set_value: "\u0437\u0430\u043C\u0435\u043D\u0438\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F \u043A\u043B\u044E\u0447\u0435\u0439",
          tree_subtract: "\u0434\u0435\u0440\u0435\u0432\u043E A \u043C\u0438\u043D\u0443\u0441 \u043A\u043B\u044E\u0447\u0438 \u0432 \u0434\u0435\u0440\u0435\u0432\u0435 B",
          tree_translate: "\u041F\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u043E \u043F\u0440\u0438 \u043F\u043E\u043C\u043E\u0449\u0438 Google Translate \u043D\u0430 \u044F\u0437\u044B\u043A \u043A\u043E\u0440\u043D\u0435\u0432\u044B\u0445 \u0443\u0437\u043B\u043E\u0432",
          unused: "\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043D\u0435\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C\u044B\u0435 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B"
        },
        encourage: [
          "\u0425\u043E\u0440\u043E\u0448\u0430\u044F \u0440\u0430\u0431\u043E\u0442\u0430!",
          "\u041E\u0442\u043B\u0438\u0447\u043D\u043E!",
          "\u041F\u0440\u0435\u043A\u0440\u0430\u0441\u043D\u043E!"
        ],
        enum_list_opt: {
          invalid: "%{invalid} \u043D\u0435 \u0432: %{valid}."
        },
        enum_opt: {
          invalid: "%{invalid} \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043E\u0434\u043D\u0438\u043C \u0438\u0437: %{valid}."
        },
        errors: {
          invalid_backend: "\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0438\u0441\u0442\u043E\u0447\u043D\u0438\u043A \u0434\u0430\u043D\u043D\u044B\u0445: %{invalid}. \u0414\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u043E\u0434\u043D\u0438\u043C \u0438\u0437 %{valid}.",
          invalid_format: "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 %{invalid}. \u0424\u043E\u0440\u043C\u0430\u0442\u044B: %{valid}.",
          invalid_locale: "\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u044F\u0437\u044B\u043A %{invalid}",
          invalid_missing_type: {
            few: "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0435 \u0442\u0438\u043F\u044B: %{invalid}. \u0422\u0438\u043F\u044B: %{valid}.",
            many: "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0435 \u0442\u0438\u043F\u044B: %{invalid}. \u0422\u0438\u043F\u044B: %{valid}.",
            one: "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0439 \u0442\u0438\u043F %{invalid}. \u0422\u0438\u043F\u044B: %{valid}.",
            other: "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0435 \u0442\u0438\u043F\u044B: %{invalid}. \u0422\u0438\u043F\u044B: %{valid}."
          },
          pass_forest: "\u041F\u0435\u0440\u0435\u0434\u0430\u0439\u0442\u0435 \u0434\u0435\u0440\u0435\u0432\u043E"
        }
      },
      common: {
        continue_q: "\u041F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C?",
        key: "\u041A\u043B\u044E\u0447",
        locale: "\u042F\u0437\u044B\u043A",
        n_more: "\u0435\u0449\u0451 %{count}",
        value: "\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435"
      },
      data_stats: {
        text: "%{key_count} \u043A\u043B\u044E\u0447\u0435\u0439 \u0432 %{locale_count} \u044F\u0437\u044B\u043A\u0430\u0445. \u0412 \u0441\u0440\u0435\u0434\u043D\u0435\u043C, \u0434\u043B\u0438\u043D\u0430 \u0441\u0442\u0440\u043E\u043A\u0438: %{value_chars_avg}, \u0441\u0435\u0433\u043C\u0435\u043D\u0442\u044B \u043A\u043B\u044E\u0447\u0435\u0439: %{key_segments_avg}, \u043A\u043B\u044E\u0447\u0435\u0439 \u0432 \u044F\u0437\u044B\u043A\u0435 %{per_locale_avg}.",
        text_single_locale: "%{key_count} \u043A\u043B\u044E\u0447\u0435\u0439. \u0412 \u0441\u0440\u0435\u0434\u043D\u0435\u043C, \u0434\u043B\u0438\u043D\u0430 \u0441\u0442\u0440\u043E\u043A\u0438: %{value_chars_avg}, \u0441\u0435\u0433\u043C\u0435\u043D\u0442\u044B \u043A\u043B\u044E\u0447\u0435\u0439: %{key_segments_avg}.",
        title: "\u0414\u0430\u043D\u043D\u044B\u0435 (%{locales}):"
      },
      deepl_translate: {
        errors: {
          no_api_key: "\u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u043A\u043B\u044E\u0447 API DeepL \u0447\u0435\u0440\u0435\u0437 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u0443\u044E \u043E\u043A\u0440\u0443\u0436\u0435\u043D\u0438\u044F DEEPL_AUTH_KEY \u0438\u043B\u0438 translation.deepl_api_key \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u0447\u0435\u0440\u0435\u0437 https://www.deepl.com/pro.",
          no_results: "DeepL \u043D\u0435 \u0434\u0430\u043B \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432.",
          specific_target_missing: "You must supply a specific variant for the given target language e.g. en-us instead of en."
        }
      },
      google_translate: {
        errors: {
          no_api_key: "\u0417\u0430\u0434\u0430\u0439\u0442\u0435 \u043A\u043B\u044E\u0447 API Google \u0447\u0435\u0440\u0435\u0437 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u0443\u044E \u043E\u043A\u0440\u0443\u0436\u0435\u043D\u0438\u044F GOOGLE_TRANSLATE_API_KEY \u0438\u043B\u0438 translation.google_translate_api_key \u0432 config/i18n-tasks.yml. \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u0447\u0435\u0440\u0435\u0437 https://code.google.com/apis/console.",
          no_results: "Google Translate \u043D\u0435 \u0434\u0430\u043B \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044C \u0432 \u0442\u043E\u043C, \u0447\u0442\u043E \u043F\u043B\u0430\u0442\u0435\u0436\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0430 \u0432 https://code.google.com/apis/console."
        }
      },
      health: {
        no_keys_detected: "\u041A\u043B\u044E\u0447\u0438 \u043D\u0435 \u043E\u0431\u043D\u0430\u0440\u0443\u0436\u0435\u043D\u044B. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 data.read \u0432 config/i18n-tasks.yml."
      },
      inconsistent_interpolations: {
        none: "\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E \u043D\u0435\u0441\u043E\u0433\u043B\u0430\u0441\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u0438\u043D\u0442\u0435\u0440\u043F\u043E\u043B\u044F\u0446\u0438\u0439."
      },
      missing: {
        details_title: "\u041D\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u044F\u0437\u044B\u043A\u0430\u0445 \u0438\u043B\u0438 \u0432 \u043A\u043E\u0434\u0435",
        none: "\u0412\u0441\u0451 \u043F\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043D\u043E."
      },
      openai_translate: {
        errors: {
          no_api_key: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u043A\u043B\u044E\u0447 API \u042F\u043D\u0434\u0435\u043A\u0441\u0430 \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0439 \u0441\u0440\u0435\u0434\u044B OPENAI_API_KEY \u0438\u043B\u0438 translation.openai_api_key\n \u0432 config / i18n-tasks.yml. \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u043F\u043E \u0430\u0434\u0440\u0435\u0441\u0443 https://openai.com/.",
          no_results: "\u042F\u043D\u0434\u0435\u043A\u0441 \u043D\u0435 \u0434\u0430\u043B \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432."
        }
      },
      remove_unused: {
        confirm: {
          few: "\u041F\u0435\u0440\u0435\u0432\u043E\u0434\u044B (%{count}) \u0431\u0443\u0434\u0443\u0442 \u0443\u0434\u0430\u043B\u0435\u043D\u044B \u0438\u0437 %{locales}.",
          many: "\u041F\u0435\u0440\u0435\u0432\u043E\u0434\u044B (%{count}) \u0431\u0443\u0434\u0443\u0442 \u0443\u0434\u0430\u043B\u0435\u043D\u044B \u0438\u0437 %{locales}.",
          one: "%{count} \u043F\u0435\u0440\u0435\u0432\u043E\u0434 \u0431\u0443\u0434\u0443\u0442 \u0443\u0434\u0430\u043B\u0451\u043D \u0438\u0437 %{locales}.",
          other: "\u041F\u0435\u0440\u0435\u0432\u043E\u0434\u044B (%{count}) \u0431\u0443\u0434\u0443\u0442 \u0443\u0434\u0430\u043B\u0435\u043D\u044B \u0438\u0437 %{locales}."
        },
        noop: "\u041D\u0435\u0442 \u043D\u0435\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C\u044B\u0445 \u043A\u043B\u044E\u0447\u0435\u0439",
        removed: "\u0423\u0434\u0430\u043B\u0435\u043D\u044B \u043A\u043B\u044E\u0447\u0438 (%{count})"
      },
      translate_missing: {
        translated: "\u041F\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043D\u044B \u043A\u043B\u044E\u0447\u0438 (%{count})"
      },
      unused: {
        none: "\u0412\u0441\u0435 \u043F\u0435\u0440\u0435\u0432\u043E\u0434\u044B \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442\u0441\u044F."
      },
      usages: {
        none: "\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0439."
      },
      watsonx_translate: {
        errors: {
          no_api_key: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 API watsonx \u0447\u0435\u0440\u0435\u0437 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u0443\u044E \u0441\u0440\u0435\u0434\u044B WATSONX_API_KEY \u0438\u043B\u0438 translation.watsonx_api_key \u0432 config/i18n-tasks.yml. \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u043D\u0430 https://www.ibm.com/products/watsonx-ai.",
          no_project_id: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0435\u043A\u0442\u0430 watsonx \u0447\u0435\u0440\u0435\u0437 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u0443\u044E \u0441\u0440\u0435\u0434\u044B WATSONX_PROJECT_ID \u0438\u043B\u0438 translation.watsonx_api_key \u0432 config/i18n-tasks.yml. \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u043D\u0430 https://www.ibm.com/products/watsonx-ai.",
          no_results: "watsonx \u043D\u0435 \u0432\u0435\u0440\u043D\u0443\u043B \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432."
        }
      },
      yandex_translate: {
        errors: {
          no_api_key: "\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u043A\u043B\u044E\u0447 API \u042F\u043D\u0434\u0435\u043A\u0441\u0430 \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0439 \u0441\u0440\u0435\u0434\u044B YANDEX_API_KEY \u0438\u043B\u0438 translation.yandex_api_key\n \u0432 config / i18n-tasks.yml. \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043A\u043B\u044E\u0447 \u043F\u043E \u0430\u0434\u0440\u0435\u0441\u0443 https://tech.yandex.com/translate/.",
          no_results: "\u042F\u043D\u0434\u0435\u043A\u0441 \u043D\u0435 \u0434\u0430\u043B \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432."
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0440\u0443\u0431."
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              few: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434\u043E\u0432",
              many: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434\u043E\u0432",
              one: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434",
              other: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434\u043E\u0432"
            },
            million: {
              few: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              many: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              one: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432"
            },
            quadrillion: {
              few: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              many: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              one: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432"
            },
            thousand: {
              few: "\u0442\u044B\u0441\u044F\u0447",
              many: "\u0442\u044B\u0441\u044F\u0447",
              one: "\u0442\u044B\u0441\u044F\u0447\u0430",
              other: "\u0442\u044B\u0441\u044F\u0447"
            },
            trillion: {
              few: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              many: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432",
              one: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D\u043E\u0432"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "\u0431\u0430\u0439\u0442\u0430",
              many: "\u0431\u0430\u0439\u0442",
              one: "\u0431\u0430\u0439\u0442",
              other: "\u0431\u0430\u0439\u0442\u0430"
            },
            eb: "\u042D\u0411",
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            pb: "\u041F\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0438 ",
        two_words_connector: " \u0438 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0443\u0442\u0440\u0430",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u0432\u0435\u0447\u0435\u0440\u0430"
    }
  };
  var sc = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validatzione fallida: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Su registru non si podet iscantzellare ca esitint %{record} chi nde dipendent",
            has_one: "Su registru non si podet iscantzellare ca esitit unu %{record} chi nde dipendet"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "dom",
        "lun",
        "mar",
        "m\xE8r",
        "gi\xF2",
        "che",
        "s\xE0b"
      ],
      abbr_month_names: [
        null,
        "ghe",
        "fre",
        "mar",
        "abr",
        "maj",
        "l\xE0m",
        "tr\xEC",
        "aus",
        "cab",
        "stG",
        "stA",
        "nad"
      ],
      day_names: [
        "dom\xECniga",
        "lunis",
        "martis",
        "m\xE8rcuris",
        "gi\xF2bia",
        "chen\xE0bura",
        "s\xE0badu"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "ghenn\xE0rgiu",
        "fre\xE0rgiu",
        "martzu",
        "abrile",
        "maju",
        "l\xE0mpadas",
        "tr\xECulas",
        "austu",
        "cabudanni",
        "santugaine",
        "santandria",
        "nadale"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "pagu prus o mancu un'ora",
          other: "pagu prus o mancu %{count} oras"
        },
        about_x_months: {
          one: "pagu prus o mancu unu mese",
          other: "pagu prus o mancu %{count} meses"
        },
        about_x_years: {
          one: "pagu prus o mancu un'annu",
          other: "pagu prus o mancu %{count} annos"
        },
        almost_x_years: {
          one: "belle un'annu",
          other: "belle %{count} annos"
        },
        half_a_minute: "mesu minutu",
        less_than_x_minutes: {
          one: "prus pagu de unu minutu",
          other: "prus pagu de %{count} minutos"
        },
        less_than_x_seconds: {
          one: "prus pagu de unu segundu",
          other: "prus pagu de %{count} segundos"
        },
        over_x_years: {
          one: "prus de un'annu",
          other: "prus de %{count} annos"
        },
        x_days: {
          one: "1 die",
          other: "%{count} dies"
        },
        x_minutes: {
          one: "1 minutu",
          other: "%{count} minutos"
        },
        x_months: {
          one: "1 mese",
          other: "%{count} meses"
        },
        x_seconds: {
          one: "1 segundu",
          other: "%{count} segundos"
        },
        x_years: {
          one: "1 annu",
          other: "%{count} annos"
        }
      },
      prompts: {
        day: "Die",
        hour: "Ora",
        minute: "Minutu",
        month: "Mese",
        second: "Segundu",
        year: "Annu"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "depet \xE8ssere atzetadu",
        blank: "non podet \xE8ssere lassadu in biancu",
        confirmation: "non currispondet cun %{attribute}",
        empty: "non p\xF2det \xE8sser b\xF2idu",
        equal_to: "depet \xE8ssere uguale a %{count}",
        even: "depet \xE8ssere pari",
        exclusion: "est riservadu",
        greater_than: "depet \xE8ssere prus mannu de %{count}",
        greater_than_or_equal_to: "depet \xE8ssere prus mannu o uguale a %{count}",
        in: "depet istare intre %{count}",
        inclusion: "no est incl\xF9didu in sa lista",
        invalid: "no est v\xE0lidu",
        less_than: "depet \xE8ssere prus minore de %{count}",
        less_than_or_equal_to: "depet \xE8ssere prus minore o uguale a %{count}",
        model_invalid: "Validatzione fallida: %{errors}",
        not_a_number: "no est unu n\xF9meru",
        not_an_integer: "no est unu n\xF9meru intreu",
        odd: "depet \xE8ssere d\xECspari",
        other_than: "depet \xE8ssere unu n\xF9meru chi non siat %{count}",
        present: "depet \xE8ssere lassadu in biancu",
        required: "depet es\xECstere",
        taken: "est giai presente",
        too_long: {
          one: "est tropu longu (su m\xE0ssimu est de 1 car\xE0tere)",
          other: "est tropu longu (su m\xE0ssimu est de %{count} car\xE0teres)"
        },
        too_short: {
          one: "est tropu curtzu (su m\xECnimu est de 1 car\xE0tere)",
          other: "est tropu curtzu (su m\xECnimu est de %{count} car\xE0teres)"
        },
        wrong_length: {
          one: "est de sa long\xE0ria isballiada (depet t\xE8nnere 1 car\xE0tere)",
          other: "est de sa long\xE0ria isballiada (depet t\xE8nnere %{count} car\xE0teres)"
        }
      },
      template: {
        body: "Bi sunt istados problemas cun sos campos chi sighint:",
        header: {
          one: "Non potzo sarvare custu %{model}: 1 errore",
          other: "Non potzo sarvare custu %{model}: %{count} errores."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Seletziona..."
      },
      submit: {
        create: "Crea %{model}",
        submit: "Imbia %{model}",
        update: "Atualiza %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "milliardu",
              other: "milliardos"
            },
            million: {
              one: "millione",
              other: "milliones"
            },
            quadrillion: {
              one: "cuadrillione",
              other: "cuadrilliones"
            },
            thousand: "m\xECgia",
            trillion: "m\xECgia milliardos",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " e ",
        two_words_connector: " e ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d de %b de su %Y, %H:%M:%S %z",
        long: "%d de %B de su %Y %H:%M",
        short: "%d de %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sk = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Valid\xE1cia ne\xFAspe\u0161n\xE1: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "Ne",
        "Po",
        "Ut",
        "St",
        "\u0160t",
        "Pi",
        "So"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "M\xE1j",
        "J\xFAn",
        "J\xFAl",
        "Aug",
        "Sep",
        "Okt",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Nede\u013Ea",
        "Pondelok",
        "Utorok",
        "Streda",
        "\u0160tvrtok",
        "Piatok",
        "Sobota"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d. %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Janu\xE1r",
        "Febru\xE1r",
        "Marec",
        "Apr\xEDl",
        "M\xE1j",
        "J\xFAn",
        "J\xFAl",
        "August",
        "September",
        "Okt\xF3ber",
        "November",
        "December"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "asi %{count} hodinami",
          one: "asi hodinou",
          other: "asi %{count} hodinami"
        },
        about_x_months: {
          few: "asi %{count} mesiacmi",
          one: "asi mesiacom",
          other: "asi %{count} mesiacmi"
        },
        about_x_years: {
          few: "asi %{count} rokmi",
          one: "asi rokom",
          other: "asi %{count} rokmi"
        },
        almost_x_years: {
          few: "takmer %{count} rokmi",
          one: "takmer rokom",
          other: "takmer %{count} rokmi"
        },
        half_a_minute: "pol min\xFAtou",
        less_than_x_minutes: {
          few: "necel\xFDmi %{count} min\xFAtami",
          one: "necelou min\xFAtou",
          other: "necel\xFDmi %{count} min\xFAtami"
        },
        less_than_x_seconds: {
          few: "necel\xFDmi %{count} sekundami",
          one: "necelou sekundou",
          other: "necel\xFDmi %{count} sekundami"
        },
        over_x_years: {
          few: "viac ako %{count} rokmi",
          one: "viac ako rokom",
          other: "viac ako %{count} rokmi"
        },
        x_days: {
          few: "%{count} d\u0148ami",
          one: "d\u0148om",
          other: "%{count} d\u0148ami"
        },
        x_minutes: {
          few: "%{count} min\xFAtami",
          one: "min\xFAtou",
          other: "%{count} min\xFAtami"
        },
        x_months: {
          few: "%{count} mesiacmi",
          one: "mesiacom",
          other: "%{count} mesiacmi"
        },
        x_seconds: {
          few: "%{count} sekundami",
          one: "sekundou",
          other: "%{count} sekundami"
        }
      },
      prompts: {
        day: "De\u0148",
        hour: "Hodina",
        minute: "Min\xFAta",
        month: "Mesiac",
        second: "Sekunda",
        year: "Rok"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mus\xED by\u0165 potvrden\xE9",
        blank: "je povinn\xE1 polo\u017Eka",
        confirmation: "nebolo potvrden\xE9",
        empty: "nesmie by\u0165 pr\xE1zdny/e",
        equal_to: "sa mus\xED rovna\u0165 %{count}",
        even: "mus\xED by\u0165 p\xE1rne \u010D\xEDslo",
        exclusion: "je vyhraden\xE9 pre in\xFD \xFA\u010Del",
        greater_than: "mus\xED by\u0165 v\xE4\u010D\u0161ie ako %{count}",
        greater_than_or_equal_to: "mus\xED by\u0165 v\xE4\u010D\u0161ie alebo rovn\xE9 %{count}",
        inclusion: "nie je v zozname povolen\xFDch hodn\xF4t",
        invalid: "nie je platn\xE1 hodnota",
        less_than: "mus\xED by\u0165 men\u0161ie ako %{count}",
        less_than_or_equal_to: "mus\xED by\u0165 men\u0161ie alebo rovn\xE9 %{count}",
        not_a_number: "nie je \u010D\xEDslo",
        not_an_integer: "mus\xED by\u0165 cel\xE9 \u010D\xEDslo",
        odd: "mus\xED by\u0165 nep\xE1rne \u010D\xEDslo",
        required: "mus\xED existova\u0165",
        taken: "ste u\u017E pou\u017Eili",
        too_long: "je pr\xEDli\u0161 dlh\xE1/\xFD (max. %{count} znakov)",
        too_short: "je pr\xEDli\u0161 kr\xE1tky/a (min. %{count} znakov)",
        wrong_length: "nem\xE1 spr\xE1vnu d\u013A\u017Eku (o\u010Dak\xE1va sa %{count} znakov)"
      },
      template: {
        body: "Nasleduj\xFAce polia obsahuj\xFA chybne vyplnen\xE9 \xFAdaje:",
        header: {
          few: "Pri ukladan\xED objektu %{model} do\u0161lo k %{count} chyb\xE1m a nebolo ho mo\u017En\xE9 ulo\u017Ei\u0165",
          one: "Pri ukladan\xED objektu %{model} do\u0161lo k chyb\xE1m a nebolo ho mo\u017En\xE9 ulo\u017Ei\u0165",
          other: "Pri ukladan\xED objektu %{model} do\u0161lo k %{count} chyb\xE1m a nebolo ho mo\u017En\xE9 ulo\u017Ei\u0165"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Pros\xEDm vyberte si"
      },
      submit: {
        create: "Vytvori\u0165 %{model}",
        submit: "Ulo\u017Ei\u0165 %{model}",
        update: "Aktualizova\u0165 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliarda",
            million: "Mili\xF3n",
            quadrillion: "Biliarda",
            thousand: "Tis\xEDc",
            trillion: "Bili\xF3n",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "B",
              one: "B",
              other: "B"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: " "
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " a ",
        two_words_connector: " a ",
        words_connector: ", "
      }
    },
    time: {
      am: "dopoludnia",
      formats: {
        default: "%a %e. %B %Y %H:%M %z",
        long: "%A %e. %B %Y %H:%M",
        short: "%e. %-m. %H:%M"
      },
      pm: "popoludn\xED"
    }
  };
  var sl = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: ""
        }
      }
    },
    date: {
      abbr_day_names: [
        "ned",
        "pon",
        "tor",
        "sre",
        "\u010Det",
        "pet",
        "sob"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "avg",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "nedelja",
        "ponedeljek",
        "torek",
        "sreda",
        "\u010Detrtek",
        "petek",
        "sobota"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d. %b %Y",
        short: "%d. %b"
      },
      month_names: [
        null,
        "januar",
        "februar",
        "marec",
        "april",
        "maj",
        "junij",
        "julij",
        "avgust",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "okoli %{count} ure",
          one: "okoli %{count} ura",
          other: "okoli %{count} ur",
          two: "okoli 2 uri"
        },
        about_x_months: {
          few: "okoli %{count} mesece",
          one: "okoli %{count} mesec",
          other: "okoli %{count} mesecev",
          two: "okoli 2 meseca"
        },
        about_x_years: {
          few: "okoli %{count} leta",
          one: "okoli %{count} leto",
          other: "okoli %{count} let",
          two: "okoli 2 leti"
        },
        almost_x_years: {
          few: "skoraj %{count} leta",
          one: "skoraj %{count} leto",
          other: "skoraj %{count} let",
          two: "skoraj 2 leti"
        },
        half_a_minute: "pol minute",
        less_than_x_minutes: {
          few: "manj kot %{count} minute",
          one: "manj kot ena minuta",
          other: "manj kot %{count} minut",
          two: "manj kot dve minuti"
        },
        less_than_x_seconds: {
          few: "manj kot %{count} sekunde",
          one: "manj kot %{count} sekunda",
          other: "manj kot %{count} sekund",
          two: "manj kot 2 sekundi"
        },
        over_x_years: {
          few: "ve\u010D kot %{count} leta",
          one: "ve\u010D kot %{count} leto",
          other: "ve\u010D kot %{count} let",
          two: "ve\u010D kot 2 leti"
        },
        x_days: {
          few: "%{count} dnevi",
          one: "%{count} dan",
          other: "%{count} dni",
          two: "2 dneva"
        },
        x_minutes: {
          few: "%{count} minute",
          one: "%{count} minuta",
          other: "%{count} minut",
          two: "2 minuti"
        },
        x_months: {
          few: "%{count} mesece",
          one: "%{count} mesec",
          other: "%{count} mesecev",
          two: "2 meseca"
        },
        x_seconds: {
          few: "%{count} sekunde",
          one: "%{count} sekunda",
          other: "%{count} sekund",
          two: "2 sekundi"
        }
      },
      prompts: {
        day: "Dan",
        hour: "Ura",
        minute: "Minute",
        month: "Mesec",
        second: "Sekunde",
        year: "Leto"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "mora biti sprejeto",
        blank: "ne sme biti prazno",
        confirmation: "se ne ujema z vrednostjo %{attribute}",
        empty: "ne sme biti prazno",
        equal_to: "mora biti enako %{count}",
        even: "mora biti sodo",
        exclusion: "je rezervirano",
        greater_than: "mora biti ve\u010Dje kot %{count}",
        greater_than_or_equal_to: "mora biti ve\u010Dje ali enako %{count}",
        inclusion: "ni vklju\u010Deno v seznam",
        invalid: "je nepravilno",
        less_than: "mora biti manj kot %{count}",
        less_than_or_equal_to: "mora biti manj ali enako %{count}",
        not_a_number: "ni \u0161tevilka",
        odd: "mora biti liho",
        taken: "je \u017Ee zasedeno",
        too_long: "je predolgo (dovoljeno je do %{count} znakov)",
        too_short: "je prekratko (zahtevano je najmanj %{count} znakov)",
        wrong_length: "je napa\u010Dne dol\u017Eine (mora biti natan\u010Dno %{count} znakov)"
      },
      template: {
        body: "Napa\u010Dno izpolnjena polja:",
        header: {
          few: "%{count} napake prepre\u010Dujejo, da bi shranili %{model}",
          one: "Ena napaka prepre\u010Duje, da bi shranili %{model}",
          other: "%{count} napak prepre\u010Duje, da bi shranili %{model}",
          two: "Dve napaki prepre\u010Dujeta, da bi shranili %{model}"
        }
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "two",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%u%n",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "Bytes",
              one: "Byte",
              other: "Bytes",
              two: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " in ",
        two_words_connector: " in ",
        words_connector: ", "
      }
    },
    time: {
      am: "dopoldan",
      formats: {
        default: "%A, %d %b %Y ob %H:%M:%S",
        long: "%d. %B, %Y ob %H:%M",
        short: "%d. %b ob %H:%M"
      },
      pm: "popoldan"
    }
  };
  var sq = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Vler\xEBsimi d\xEBshtoi: %{errors}",
          restrict_dependent_destroy: {
            has_many: "S\u2019fshihet dot z\xEBri, ngaq\xEB ekzistojn\xEB %{record} q\xEB varen prej tij",
            has_one: "S\u2019fshihet dot z\xEBri, ngaq\xEB ekziston nj\xEB %{record} q\xEB varet prej tij"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Die",
        "H\xEBn",
        "Mar",
        "M\xEBr",
        "Enj",
        "Pre",
        "Sht"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Shk",
        "Mar",
        "Pri",
        "Maj",
        "Qer",
        "Kor",
        "Gus",
        "Sht",
        "Tet",
        "N\xEBn",
        "Dhj"
      ],
      day_names: [
        "E diel\xEB",
        "E h\xEBn\xEB",
        "E mart\xEB",
        "E m\xEBrkur\xEB",
        "E enjte",
        "E premte",
        "E shtun\xEB"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Janar",
        "Shkurt",
        "Mars",
        "Prill",
        "Maj",
        "Qershor",
        "Korrik",
        "Gusht",
        "Shtator",
        "Tetor",
        "N\xEBntor",
        "Dhjetor"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "rreth %{count} or\xEB",
          other: "rreth %{count} or\xEB"
        },
        about_x_months: {
          one: "rreth %{count} muaj",
          other: "rreth %{count} muaj"
        },
        about_x_years: {
          one: "rreth %{count} vit",
          other: "rreth %{count} vjet"
        },
        almost_x_years: {
          one: "gati %{count} vit",
          other: "gati %{count} vjet"
        },
        half_a_minute: "gjysm\xEB minute",
        less_than_x_minutes: {
          one: "m\xEB pak se nj\xEB minut\xEB",
          other: "m\xEB pak se %{count} minuta"
        },
        less_than_x_seconds: {
          one: "m\xEB pak se %{count} sekond\xEB",
          other: "m\xEB pak se %{count} sekonda"
        },
        over_x_years: {
          one: "mbi %{count} vit",
          other: "mbi %{count} vjet"
        },
        x_days: {
          one: "%{count} dit\xEB",
          other: "%{count} dit\xEB"
        },
        x_minutes: {
          one: "%{count} minut\xEB",
          other: "%{count} minuta"
        },
        x_months: {
          one: "%{count} muaj",
          other: "%{count} muaj"
        },
        x_years: {
          one: "%{count} vit",
          other: "%{count} vjet"
        }
      },
      prompts: {
        day: "Dit\xEB",
        hour: "Or\xEB",
        minute: "Minut\xEB",
        month: "Muaj",
        second: "Sekond\xEB",
        year: "Vit"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "duhet pranuar",
        blank: "s\u2019mund t\xEB jet\xEB i zbraz\xEBt",
        confirmation: "s\u2019p\xEBrputhet me %{attribute}",
        empty: "s\u2019mund t\xEB jet\xEB i zbraz\xEBt",
        equal_to: "duhet t\xEB jet\xEB baras me %{count}",
        even: "duhet t\xEB jet\xEB \xE7ift",
        exclusion: "\xEBsht\xEB i rezervuar",
        greater_than: "duhet t\xEB jet\xEB m\xEB i madh se %{count}",
        greater_than_or_equal_to: "duhet t\xEB jet\xEB m\xEB i madh ose i barabart\xEB me %{count}",
        inclusion: "s\u2019p\xEBrfshihet te lista",
        invalid: "\xEBsht\xEB i pavlefsh\xEBm",
        less_than: "duhet t\xEB jet\xEB m\xEB i vog\xEBl se %{count}",
        less_than_or_equal_to: "duhet t\xEB jet\xEB m\xEB i vog\xEBl ose i barabart\xEB me %{count}",
        model_invalid: "Vler\xEBsimi d\xEBshtoi: %{errors}",
        not_a_number: "s\u2019\xEBsht\xEB num\xEBr",
        not_an_integer: "duhet t\xEB jet\xEB num\xEBr i plot\xEB",
        odd: "duhet t\xEB jet\xEB tek",
        other_than: "duhet t\xEB jet\xEB m\xEB shum\xEB se %{count}",
        present: "duhet t\xEB jet\xEB e zbraz\xEBt",
        required: "duhet t\xEB ekzistoj\xEB",
        taken: "\xEBsht\xEB z\xEBn\xEB tashm\xEB",
        too_long: {
          one: "\xEBsht\xEB shum\xEB i gjat\xEB (maksimumi \xEBsht\xEB %{count} shenj\xEB)",
          other: "\xEBsht\xEB shum\xEB i gjat\xEB (maksimumi \xEBsht\xEB %{count} shenja)"
        },
        too_short: {
          one: "\xEBsht\xEB shum\xEB i shkurt\xEBr (minimumi \xEBsht\xEB %{count} shenj\xEB)",
          other: "\xEBsht\xEB shum\xEB i shkurt\xEBr (minimumi \xEBsht\xEB %{count} shenja)"
        },
        wrong_length: {
          one: "ka gjat\xEBsi t\xEB gabuar (duhet t\xEB jet\xEB %{count} shenj\xEB)",
          other: "ka gjat\xEBsi t\xEB gabuar (duhet t\xEB jet\xEB %{count} shenja)"
        }
      },
      template: {
        body: "Pati probleme me fushat vijuese:",
        header: {
          one: "Ruajtja e k\xEBtij %{model} u pengua nga %{count} gabim",
          other: "Ruajtja e k\xEBtij %{model} u pengua nga %{count} gabime"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Ju lutemi, p\xEBrzgjidhni"
      },
      submit: {
        create: "Krijoje %{model}",
        submit: "Ruaje %{model}",
        update: "P\xEBrdit\xEBsoje %{model}"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miliard",
            million: "Milion",
            quadrillion: "Kuadrilion",
            thousand: "Mij\xEB",
            trillion: "Trilion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bajt",
              other: "Bajte"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", dhe ",
        two_words_connector: " dhe ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sr = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0412\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0458\u0430 \u043D\u0438\u0458\u0435 \u0443\u0441\u043F\u0435\u043B\u0430: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u041D\u0438\u0458\u0435 \u043C\u043E\u0433\u0443\u045B\u0435 \u043E\u0431\u0440\u0438\u0441\u0430\u0442\u0438 \u0437\u0430\u043F\u0438\u0441 \u0458\u0435\u0440 \u043F\u043E\u0441\u0442\u043E\u0458\u0435 \u0437\u0430\u0432\u0438\u0441\u043D\u0438 %{record}",
            has_one: "\u041D\u0438\u0458\u0435 \u043C\u043E\u0433\u0443\u045B\u0435 \u043E\u0431\u0440\u0438\u0441\u0430\u0442\u0438 \u0437\u0430\u043F\u0438\u0441 \u0458\u0435\u0440 \u043F\u043E\u0441\u0442\u043E\u0458\u0438 \u0437\u0430\u0432\u0438\u0441\u0430\u043D %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u041D\u0435\u0434",
        "\u041F\u043E\u043D",
        "\u0423\u0442\u043E",
        "\u0421\u0440\u0435",
        "\u0427\u0435\u0442",
        "\u041F\u0435\u0442",
        "\u0421\u0443\u0431"
      ],
      abbr_month_names: [
        null,
        "\u0408\u0430\u043D",
        "\u0424\u0435\u0431",
        "\u041C\u0430\u0440",
        "\u0410\u043F\u0440",
        "\u041C\u0430\u0458",
        "\u0408\u0443\u043D",
        "\u0408\u0443\u043B",
        "\u0410\u0432\u0433",
        "\u0421\u0435\u043F",
        "\u041E\u043A\u0442",
        "\u041D\u043E\u0432",
        "\u0414\u0435\u0446"
      ],
      day_names: [
        "\u041D\u0435\u0434\u0435\u0459\u0430",
        "\u041F\u043E\u043D\u0435\u0434\u0435\u0459\u0430\u043A",
        "\u0423\u0442\u043E\u0440\u0430\u043A",
        "\u0421\u0440\u0435\u0434\u0430",
        "\u0427\u0435\u0442\u0432\u0440\u0442\u0430\u043A",
        "\u041F\u0435\u0442\u0430\u043A",
        "\u0421\u0443\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "%B %e, %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "\u0408\u0430\u043D\u0443\u0430\u0440",
        "\u0424\u0430\u0431\u0440\u0443\u0430\u0440",
        "\u041C\u0430\u0440\u0442",
        "\u0410\u043F\u0440\u0438\u043B",
        "\u041C\u0430\u0458",
        "\u0408\u0443\u043D",
        "\u0408\u0443\u043B",
        "\u0410\u0432\u0433\u0443\u0441\u0442",
        "\u0421\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440",
        "\u041E\u043A\u0442\u043E\u0431\u0430\u0440",
        "\u041D\u043E\u0432\u0435\u043C\u0431\u0430\u0440",
        "\u0414\u0435\u0446\u0435\u043C\u0431\u0430\u0440"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "\u043E\u043A\u043E %{count} \u0441\u0430\u0442\u0430",
          many: "\u043E\u043A\u043E %{count} \u0441\u0430\u0442\u0438",
          one: "\u043E\u043A\u043E %{count} \u0441\u0430\u0442",
          other: "\u043E\u043A\u043E %{count} \u0441\u0430\u0442\u0438"
        },
        about_x_months: {
          few: "\u043E\u043A\u043E %{count} \u043C\u0435\u0441\u0435\u0446\u0430",
          many: "\u043E\u043A\u043E %{count} \u043C\u0435\u0441\u0435\u0446\u0438",
          one: "\u043E\u043A\u043E %{count} \u043C\u0435\u0441\u0435\u0446",
          other: "\u043E\u043A\u043E %{count} \u043C\u0435\u0441\u0435\u0446\u0438"
        },
        about_x_years: {
          few: "\u043E\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0435",
          many: "\u043E\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          one: "\u043E\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0435",
          other: "\u043E\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430"
        },
        almost_x_years: {
          few: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0435",
          many: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          one: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          other: "\u0441\u043A\u043E\u0440\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430"
        },
        half_a_minute: "\u043F\u043E\u043B\u0430 \u043C\u0438\u043D\u0443\u0442\u0435",
        less_than_x_minutes: {
          few: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          many: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          one: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442",
          other: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u043C\u0438\u043D\u0443\u0442\u0430"
        },
        less_than_x_seconds: {
          few: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0435",
          many: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438",
          one: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          other: "\u043C\u0430\u045A\u0435 \u043E\u0434 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        },
        over_x_years: {
          few: "\u043F\u0440\u0435\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0435",
          many: "\u043F\u0440\u0435\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430",
          one: "\u043F\u0440\u0435\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0435",
          other: "\u043F\u0440\u0435\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0430"
        },
        x_days: {
          few: "%{count} \u0434\u0430\u043D\u0430",
          many: "%{count} \u0434\u0430\u043D\u0430",
          one: "%{count} \u0434\u0430\u043D",
          other: "%{count} \u0434\u0430\u043D\u0430"
        },
        x_minutes: {
          few: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          many: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430",
          one: "%{count} \u043C\u0438\u043D\u0443\u0442",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0430"
        },
        x_months: {
          few: "%{count} \u043C\u0435\u0441\u0435\u0446\u0430",
          many: "%{count} \u043C\u0435\u0441\u0435\u0446\u0438",
          one: "%{count} \u043C\u0435\u0441\u0435\u0446",
          other: "%{count} \u043C\u0435\u0441\u0435\u0446\u0438"
        },
        x_seconds: {
          few: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0435",
          many: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438",
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        }
      },
      prompts: {
        day: "\u0414\u0430\u043D",
        hour: "\u0421\u0430\u0442",
        minute: "\u041C\u0438\u043D\u0443\u0442",
        month: "\u041C\u0435\u0441\u0435\u0446",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434",
        year: "\u0413\u043E\u0434\u0438\u043D\u0430"
      }
    },
    errors: {
      format: "\u041F\u043E\u0459\u0435 %{attribute} %{message}",
      messages: {
        accepted: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043F\u0440\u0438\u0445\u0432\u0430\u045B\u0435\u043D\u043E",
        blank: "\u043D\u0435 \u0441\u043C\u0435 \u0431\u0438\u0442\u0438 \u043F\u0440\u0430\u0437\u0430\u043D\u043E",
        confirmation: "\u0441\u0435 \u043D\u0435 \u0441\u043B\u0430\u0436\u0435 \u0441\u0430 \u043F\u043E\u0442\u0432\u0440\u0434\u043E\u043C",
        empty: "\u043D\u0435 \u0441\u043C\u0435 \u0431\u0438\u0442\u0438 \u043F\u0440\u0430\u0437\u0430\u043D\u043E",
        equal_to: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u0458\u0435\u0434\u043D\u0430\u043A\u043E %{count}",
        even: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043F\u0430\u0440\u043D\u043E",
        exclusion: "\u0458\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0441\u0430\u043D\u043E",
        greater_than: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u0432\u0435\u045B\u0435 \u043E\u0434 %{count}",
        greater_than_or_equal_to: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u0432\u0435\u045B\u0435 \u0438\u043B\u0438 \u0458\u0435\u0434\u043D\u0430\u043A\u043E %{count}",
        inclusion: "\u043D\u0438\u0458\u0435 \u0443 \u043B\u0438\u0441\u0442\u0438",
        invalid: "\u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u043E",
        less_than: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043C\u0430\u045A\u0435 \u043E\u0434 %{count}",
        less_than_or_equal_to: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043C\u0430\u045A\u0435 \u0438\u043B\u0438 \u0458\u0435\u0434\u043D\u0430\u043A\u043E %{count}",
        model_invalid: "\u0412\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0458\u0430 \u043D\u0438\u0458\u0435 \u0443\u0441\u043F\u0435\u043B\u0430: %{errors}",
        not_a_number: "\u043D\u0438\u0458\u0435 \u0431\u0440\u043E\u0458",
        not_an_integer: "\u043D\u0438\u0458\u0435 \u0446\u0435\u043E \u0431\u0440\u043E\u0458",
        odd: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043D\u0435\u043F\u0430\u0440\u043D\u043E",
        other_than: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u0440\u0430\u0437\u043B\u0438\u0447\u0438\u0442\u043E \u043E\u0434 %{count}",
        present: "\u043C\u043E\u0440\u0430 \u0431\u0438\u0442\u0438 \u043F\u0440\u0430\u0437\u043D\u043E",
        required: "\u043C\u043E\u0440\u0430 \u043F\u043E\u0441\u0442\u043E\u0458\u0430\u0442\u0438",
        taken: "\u0458\u0435 \u0432\u0435\u045B \u0437\u0430\u0443\u0437\u0435\u0442\u043E",
        too_long: {
          few: "\u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u043E (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u0430)",
          many: "\u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u043E (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)",
          one: "\u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u043E (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A)",
          other: "\u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u043E (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)"
        },
        too_short: {
          few: "\u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u043E (\u043C\u0438\u043D\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u0430)",
          many: "\u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u043E (\u043C\u0438\u043D\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)",
          one: "\u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u043E (\u043C\u0438\u043D\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A)",
          other: "\u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u043E (\u043C\u0438\u043D\u0438\u043C\u0443\u043C \u0458\u0435 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)"
        },
        wrong_length: {
          few: "\u043D\u0438\u0458\u0435 \u043E\u0434\u0433\u043E\u0432\u0430\u0440\u0430\u0458\u0443\u045B\u0435 \u0434\u0443\u0436\u0438\u043D\u0435 (\u0442\u0440\u0435\u0431\u0430 \u0431\u0438\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u0430)",
          many: "\u043D\u0438\u0458\u0435 \u043E\u0434\u0433\u043E\u0432\u0430\u0440\u0430\u0458\u0443\u045B\u0435 \u0434\u0443\u0436\u0438\u043D\u0435 (\u0442\u0440\u0435\u0431\u0430 \u0431\u0438\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)",
          one: "\u043D\u0438\u0458\u0435 \u043E\u0434\u0433\u043E\u0432\u0430\u0440\u0430\u0458\u0443\u045B\u0435 \u0434\u0443\u0436\u0438\u043D\u0435 (\u0442\u0440\u0435\u0431\u0430 \u0431\u0438\u0442\u0438 %{count} \u0437\u043D\u0430\u043A)",
          other: "\u043D\u0438\u0458\u0435 \u043E\u0434\u0433\u043E\u0432\u0430\u0440\u0430\u0458\u0443\u045B\u0435 \u0434\u0443\u0436\u0438\u043D\u0435 (\u0442\u0440\u0435\u0431\u0430 \u0431\u0438\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u043E\u0432\u0430)"
        }
      },
      template: {
        body: "\u041C\u043E\u043B\u0438\u043C \u0412\u0430\u0441 \u0434\u0430 \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u0435 \u0441\u043B\u0435\u0434\u0435\u045B\u0430 \u043F\u043E\u0459\u0430:",
        header: {
          few: "\u041D\u0438\u0441\u0430\u043C \u0443\u0441\u043F\u0435\u043E \u0441\u0430\u0447\u0443\u0432\u0430\u0442\u0438 %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0435.",
          many: "\u041D\u0438\u0441\u0430\u043C \u0443\u0441\u043F\u0435\u043E \u0441\u0430\u0447\u0443\u0432\u0430\u0442\u0438 %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0438.",
          one: "\u041D\u0438\u0441\u0430\u043C \u0443\u0441\u043F\u0435\u043E \u0441\u0430\u0447\u0443\u0432\u0430\u0442\u0438 %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0430.",
          other: "\u041D\u0438\u0441\u0430\u043C \u0443\u0441\u043F\u0435\u043E \u0441\u0430\u0447\u0443\u0432\u0430\u0442\u0438 %{model}: %{count} \u0433\u0440\u0435\u0448\u043A\u0438."
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435"
      },
      submit: {
        create: "\u041D\u0430\u043F\u0440\u0430\u0432\u0438 %{model}",
        submit: "\u0421\u0430\u0447\u0443\u0432\u0430\u0458 %{model}",
        update: "\u0418\u0437\u043C\u0435\u043D\u0438 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0414\u0418\u041D"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u041C\u0438\u043B\u0438\u0458\u0430\u0440\u0434\u0430",
            million: "\u041C\u0438\u043B\u0438\u043E\u043D",
            quadrillion: "\u041A\u0432\u0430\u0434\u0440\u0438\u043B\u0438\u043E\u043D",
            thousand: "\u0425\u0438\u0459\u0430\u0434\u0443",
            trillion: "\u0422\u0440\u0438\u043B\u0438\u043E\u043D",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "\u0431\u0430\u0458\u0442\u0430",
              many: "\u0431\u0430\u0458\u0442\u043E\u0432\u0430",
              one: "\u0431\u0430\u0458\u0442",
              other: "\u0431\u0430\u0458\u0442\u043E\u0432\u0430"
            },
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0438 ",
        two_words_connector: " \u0438 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0410\u041C",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %Z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u041F\u041C"
    }
  };
  var st = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Netefatso e fosahetse: %{errors}",
          restrict_dependent_destroy: {
            has_many: "E ka se hlakolehe hobane kamano tse ngata li teng le %{record}",
            has_one: "E ka se hlakolehe hobane kamano e le \u0670ngoe teng le %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Son",
        "\u0670Man",
        "Labob",
        "Labor",
        "Labon",
        "Laboh",
        "Moq"
      ],
      abbr_month_names: [
        null,
        "Phe",
        "Hlako",
        "Tlha",
        "\u0670Mes",
        "Mot\u0161",
        "Phupt",
        "Phup",
        "Pha",
        "Loe",
        "Mph",
        "Pul",
        "T\u0161i"
      ],
      day_names: [
        "Sontaha",
        "\u0670Mantaha",
        "Labobeli",
        "Laboraro",
        "Labone",
        "Labohlano",
        "Moqebelo"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Pherekhong",
        "Hlakola",
        "Hlakubele",
        "\u0670Mesa",
        "Mot\u0161eanong",
        "Phuptjane",
        "Phupu",
        "Phato",
        "Loetse",
        "Mphalane",
        "Pulungoana",
        "T\u0161itoe"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ekaba hora e le \u0670ngoe",
          other: "ekaba hora tse %{count}"
        },
        about_x_months: {
          one: "ekaba khoeli e le \u0670ngoe",
          other: "ekaba likhoeli tse %{count}"
        },
        about_x_years: {
          one: "ekaba selemo se le seng",
          other: "ekaba lilemo tse %{count}"
        },
        almost_x_years: {
          one: "e tlo ba selemo se le seng",
          other: "e tlo ba lilemo tse %{count}"
        },
        half_a_minute: "halofo ea motsotso",
        less_than_x_minutes: {
          one: "ka tlase ho motsotso",
          other: "ka tlase ho metsotso e %{count}"
        },
        less_than_x_seconds: {
          one: "ka tlase ho motsotsoana",
          other: "ka tlase ho metsotsoana e %{count}"
        },
        over_x_years: {
          one: "ka holimo ho selemo",
          other: "ka holimo ho lilemo tse %{count}"
        },
        x_days: {
          one: "letsatsi le le leng",
          other: "matsatsi a %{count}"
        },
        x_minutes: {
          one: "motsotso o le mong",
          other: "metsotso e %{count}"
        },
        x_months: {
          one: "khoeli e le \\'ngoe",
          other: "likhoeli tse %{count}"
        },
        x_seconds: {
          one: "motsotsoana o le mong",
          other: "metsotsoana e %{count}"
        },
        x_years: {
          one: "selemo se le seng",
          other: "lilemo tse %{count}"
        }
      },
      prompts: {
        day: "Letsatsi",
        hour: "Hora",
        minute: "Motsotso",
        month: "Khoeli",
        second: "Motsotsoana",
        year: "Selemo"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "e tlameha ho amoheloa",
        blank: "e ka se be letho",
        confirmation: "ha e lumellane le %{attribute}",
        empty: "e ka se be letho",
        equal_to: "e tlameha ho lekana le %{count}",
        even: "e tlameha ho lekana",
        exclusion: "e bolokiloe",
        greater_than: "e tlameha e be kholo ho %{count}",
        greater_than_or_equal_to: "e tlameha e be kholo kapa e lekane le %{count}",
        inclusion: "ha ea kenyelletsoa lenaneng",
        invalid: "ha e sebetse",
        less_than: "e tlameha e be nyane ho %{count}",
        less_than_or_equal_to: "e tlameha e be nyane kapa e lekane le %{count}",
        model_invalid: "Liphoso tsa netefatso: %{errors}",
        not_a_number: "ha se palo",
        not_an_integer: "e t\u0161oanetse e be palo e felletseng",
        odd: "e tlameha ho makatsa",
        other_than: "e tlameha e be kholo ho %{count}",
        present: "e tlameha ebe ha e na letho",
        required: "e tlameha ho ba teng",
        taken: "e sentse e nkuoe",
        too_long: {
          one: "e telele haholo (boholo ke semelo se le seng)",
          other: "e telele haholo (boholo ke limelo tse %{count})"
        },
        too_short: {
          one: "e khut\u0161oane haholo (bonyane ke semelo se le seng)",
          other: "e khut\u0161oane haholo (bonyane ke limelo tse %{count})"
        },
        wrong_length: {
          one: "ke bolelele bo fosahetseng (e t\u0161oanetse e be semelo se le seng)",
          other: "ke bolelele bo fosahetseng (e t\u0161oanetse e be limelo tse %{count})"
        }
      },
      template: {
        body: "Ho bile le mathata ka a itseng makaleng a latelang:",
        header: {
          one: "phoso e le \u0670ngoe e thibetse  %{model} ho bolokeha",
          other: "liphoso tse %{count} li thibetse %{model} ho bolokeha"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Khetha ka kopo"
      },
      submit: {
        create: "Bopa %{model}",
        submit: "Boloka %{model}",
        update: "Ntjhafatsa %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "M"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Bilione",
            million: "Milione",
            quadrillion: "Libilione tse likete",
            thousand: "Sekete",
            trillion: "Trilione",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", le ",
        two_words_connector: " le ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sv = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Ett fel uppstod: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan inte ta bort poster d\xE5 beroende %{record} finns",
            has_one: "Kan inte ta bort post d\xE5 beroende %{record} finns"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "s\xF6n",
        "m\xE5n",
        "tis",
        "ons",
        "tor",
        "fre",
        "l\xF6r"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "s\xF6ndag",
        "m\xE5ndag",
        "tisdag",
        "onsdag",
        "torsdag",
        "fredag",
        "l\xF6rdag"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "januari",
        "februari",
        "mars",
        "april",
        "maj",
        "juni",
        "juli",
        "augusti",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ungef\xE4r en timme",
          other: "ungef\xE4r %{count} timmar"
        },
        about_x_months: {
          one: "ungef\xE4r en m\xE5nad",
          other: "ungef\xE4r %{count} m\xE5nader"
        },
        about_x_years: {
          one: "ungef\xE4r ett \xE5r",
          other: "ungef\xE4r %{count} \xE5r"
        },
        almost_x_years: {
          one: "n\xE4stan ett \xE5r",
          other: "n\xE4stan %{count} \xE5r"
        },
        half_a_minute: "en halv minut",
        less_than_x_minutes: {
          one: "mindre \xE4n en minut",
          other: "mindre \xE4n %{count} minuter"
        },
        less_than_x_seconds: {
          one: "mindre \xE4n en sekund",
          other: "mindre \xE4n %{count} sekunder"
        },
        over_x_years: {
          one: "mer \xE4n ett \xE5r",
          other: "mer \xE4n %{count} \xE5r"
        },
        x_days: {
          one: "en dag",
          other: "%{count} dagar"
        },
        x_minutes: {
          one: "en minut",
          other: "%{count} minuter"
        },
        x_months: {
          one: "en m\xE5nad",
          other: "%{count} m\xE5nader"
        },
        x_seconds: {
          one: "en sekund",
          other: "%{count} sekunder"
        },
        x_years: {
          one: "ett \xE5r",
          other: "%{count} \xE5r"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Timme",
        minute: "Minut",
        month: "M\xE5nad",
        second: "Sekund",
        year: "\xC5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "m\xE5ste vara accepterad",
        blank: "m\xE5ste anges",
        confirmation: "st\xE4mmer inte \xF6verens",
        empty: "f\xE5r ej vara tom",
        equal_to: "m\xE5ste vara lika med %{count}",
        even: "m\xE5ste vara j\xE4mnt",
        exclusion: "\xE4r reserverat",
        greater_than: "m\xE5ste vara st\xF6rre \xE4n %{count}",
        greater_than_or_equal_to: "m\xE5ste vara st\xF6rre \xE4n eller lika med %{count}",
        inclusion: "finns inte i listan",
        invalid: "har fel format",
        less_than: "m\xE5ste vara mindre \xE4n %{count}",
        less_than_or_equal_to: "m\xE5ste vara mindre \xE4n eller lika med %{count}",
        model_invalid: "Validering misslyckades: %{errors}",
        not_a_number: "\xE4r inte ett nummer",
        not_an_integer: "m\xE5ste vara ett heltal",
        odd: "m\xE5ste vara udda",
        other_than: "m\xE5ste vara annat \xE4n %{count}",
        present: "f\xE5r inte anges",
        required: "m\xE5ste finnas",
        taken: "anv\xE4nds redan",
        too_long: "\xE4r f\xF6r l\xE5ng (maximum \xE4r %{count} tecken)",
        too_short: "\xE4r f\xF6r kort (minimum \xE4r %{count} tecken)",
        wrong_length: "har fel l\xE4ngd (ska vara %{count} tecken)"
      },
      template: {
        body: "Det var problem med f\xF6ljande f\xE4lt:",
        header: {
          one: "Ett fel f\xF6rhindrade ifr\xE5gavarande %{model} fr\xE5n att sparas",
          other: "%{count} fel f\xF6rhindrade ifr\xE5gavarande %{model} fr\xE5n att sparas"
        }
      }
    },
    helpers: {
      select: {
        prompt: "V\xE4lj"
      },
      submit: {
        create: "Skapa %{model}",
        submit: "Spara %{model}",
        update: "\xC4ndra %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kr"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miljard",
            million: "Miljon",
            quadrillion: "Biljard",
            thousand: "Tusen",
            trillion: "Biljon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: " ",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " och ",
        two_words_connector: " och ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %e %b %Y %H:%M:%S %z",
        long: "%e %B %Y %H:%M",
        short: "%e %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sv_FI = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Ett fel uppstod: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan inte ta bort poster d\xE5 beroende %{record} finns",
            has_one: "Kan inte ta bort post d\xE5 beroende %{record} finns"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "s\xF6n",
        "m\xE5n",
        "tis",
        "ons",
        "tor",
        "fre",
        "l\xF6r"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "s\xF6ndag",
        "m\xE5ndag",
        "tisdag",
        "onsdag",
        "torsdag",
        "fredag",
        "l\xF6rdag"
      ],
      formats: {
        default: "%-d.%-m.%Y",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "januari",
        "februari",
        "mars",
        "april",
        "maj",
        "juni",
        "juli",
        "augusti",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ungef\xE4r en timme",
          other: "ungef\xE4r %{count} timmar"
        },
        about_x_months: {
          one: "ungef\xE4r en m\xE5nad",
          other: "ungef\xE4r %{count} m\xE5nader"
        },
        about_x_years: {
          one: "ungef\xE4r ett \xE5r",
          other: "ungef\xE4r %{count} \xE5r"
        },
        almost_x_years: {
          one: "n\xE4stan ett \xE5r",
          other: "n\xE4stan %{count} \xE5r"
        },
        half_a_minute: "en halv minut",
        less_than_x_minutes: {
          one: "mindre \xE4n en minut",
          other: "mindre \xE4n %{count} minuter"
        },
        less_than_x_seconds: {
          one: "mindre \xE4n en sekund",
          other: "mindre \xE4n %{count} sekunder"
        },
        over_x_years: {
          one: "mer \xE4n ett \xE5r",
          other: "mer \xE4n %{count} \xE5r"
        },
        x_days: {
          one: "en dag",
          other: "%{count} dagar"
        },
        x_minutes: {
          one: "en minut",
          other: "%{count} minuter"
        },
        x_months: {
          one: "en m\xE5nad",
          other: "%{count} m\xE5nader"
        },
        x_seconds: {
          one: "en sekund",
          other: "%{count} sekunder"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Timme",
        minute: "Minut",
        month: "M\xE5nad",
        second: "Sekund",
        year: "\xC5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "m\xE5ste vara accepterad",
        blank: "m\xE5ste anges",
        confirmation: "st\xE4mmer inte \xF6verens",
        empty: "f\xE5r ej vara tom",
        equal_to: "m\xE5ste vara lika med %{count}",
        even: "m\xE5ste vara j\xE4mnt",
        exclusion: "\xE4r reserverat",
        greater_than: "m\xE5ste vara st\xF6rre \xE4n %{count}",
        greater_than_or_equal_to: "m\xE5ste vara st\xF6rre \xE4n eller lika med %{count}",
        inclusion: "finns inte i listan",
        invalid: "har fel format",
        less_than: "m\xE5ste vara mindre \xE4n %{count}",
        less_than_or_equal_to: "m\xE5ste vara mindre \xE4n eller lika med %{count}",
        model_invalid: "Validering misslyckades: %{errors}",
        not_a_number: "\xE4r inte ett nummer",
        not_an_integer: "m\xE5ste vara ett heltal",
        odd: "m\xE5ste vara udda",
        other_than: "m\xE5ste vara annat \xE4n %{count}",
        present: "f\xE5r inte anges",
        required: "m\xE5ste finnas",
        taken: "anv\xE4nds redan",
        too_long: "\xE4r f\xF6r l\xE5ng (maximum \xE4r %{count} tecken)",
        too_short: "\xE4r f\xF6r kort (minimum \xE4r %{count} tecken)",
        wrong_length: "har fel l\xE4ngd (ska vara %{count} tecken)"
      },
      template: {
        body: "Det var problem med f\xF6ljande f\xE4lt:",
        header: {
          one: "Ett fel f\xF6rhindrade ifr\xE5gavarande %{model} fr\xE5n att sparas",
          other: "%{count} fel f\xF6rhindrade ifr\xE5gavarande %{model} fr\xE5n att sparas"
        }
      }
    },
    helpers: {
      select: {
        prompt: "V\xE4lj"
      },
      submit: {
        create: "Skapa %{model}",
        submit: "Spara %{model}",
        update: "\xC4ndra %{model}"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20AC"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miljard",
            million: "Miljon",
            quadrillion: "Biljard",
            thousand: "Tusen",
            trillion: "Biljon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: " ",
          format: "%n %"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " och ",
        two_words_connector: " och ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %e %b %Y %H:%M:%S %z",
        long: "%e %B %Y %H:%M",
        short: "%e %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sv_SE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Ett fel uppstod: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kan inte ta bort poster d\xE5 beroende %{record} finns",
            has_one: "Kan inte ta bort post d\xE5 beroende %{record} finns"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "s\xF6n",
        "m\xE5n",
        "tis",
        "ons",
        "tor",
        "fre",
        "l\xF6r"
      ],
      abbr_month_names: [
        null,
        "jan",
        "feb",
        "mar",
        "apr",
        "maj",
        "jun",
        "jul",
        "aug",
        "sep",
        "okt",
        "nov",
        "dec"
      ],
      day_names: [
        "s\xF6ndag",
        "m\xE5ndag",
        "tisdag",
        "onsdag",
        "torsdag",
        "fredag",
        "l\xF6rdag"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%e %B %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "januari",
        "februari",
        "mars",
        "april",
        "maj",
        "juni",
        "juli",
        "augusti",
        "september",
        "oktober",
        "november",
        "december"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "ungef\xE4r en timme",
          other: "ungef\xE4r %{count} timmar"
        },
        about_x_months: {
          one: "ungef\xE4r en m\xE5nad",
          other: "ungef\xE4r %{count} m\xE5nader"
        },
        about_x_years: {
          one: "ungef\xE4r ett \xE5r",
          other: "ungef\xE4r %{count} \xE5r"
        },
        almost_x_years: {
          one: "n\xE4stan ett \xE5r",
          other: "n\xE4stan %{count} \xE5r"
        },
        half_a_minute: "en halv minut",
        less_than_x_minutes: {
          one: "mindre \xE4n en minut",
          other: "mindre \xE4n %{count} minuter"
        },
        less_than_x_seconds: {
          one: "mindre \xE4n en sekund",
          other: "mindre \xE4n %{count} sekunder"
        },
        over_x_years: {
          one: "mer \xE4n ett \xE5r",
          other: "mer \xE4n %{count} \xE5r"
        },
        x_days: {
          one: "en dag",
          other: "%{count} dagar"
        },
        x_minutes: {
          one: "en minut",
          other: "%{count} minuter"
        },
        x_months: {
          one: "en m\xE5nad",
          other: "%{count} m\xE5nader"
        },
        x_seconds: {
          one: "en sekund",
          other: "%{count} sekunder"
        },
        x_years: {
          one: "ett \xE5r",
          other: "%{count} \xE5r"
        }
      },
      prompts: {
        day: "Dag",
        hour: "Timme",
        minute: "Minut",
        month: "M\xE5nad",
        second: "Sekund",
        year: "\xC5r"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "m\xE5ste vara accepterad",
        blank: "m\xE5ste anges",
        confirmation: "st\xE4mmer inte \xF6verens",
        empty: "f\xE5r ej vara tom",
        equal_to: "m\xE5ste vara lika med %{count}",
        even: "m\xE5ste vara j\xE4mnt",
        exclusion: "\xE4r reserverat",
        greater_than: "m\xE5ste vara st\xF6rre \xE4n %{count}",
        greater_than_or_equal_to: "m\xE5ste vara st\xF6rre \xE4n eller lika med %{count}",
        inclusion: "finns inte i listan",
        invalid: "har fel format",
        less_than: "m\xE5ste vara mindre \xE4n %{count}",
        less_than_or_equal_to: "m\xE5ste vara mindre \xE4n eller lika med %{count}",
        model_invalid: "Validering misslyckades: %{errors}",
        not_a_number: "\xE4r inte ett nummer",
        not_an_integer: "m\xE5ste vara ett heltal",
        odd: "m\xE5ste vara udda",
        other_than: "m\xE5ste vara annat \xE4n %{count}",
        present: "f\xE5r inte anges",
        required: "m\xE5ste finnas",
        taken: "anv\xE4nds redan",
        too_long: "\xE4r f\xF6r l\xE5ng (maximum \xE4r %{count} tecken)",
        too_short: "\xE4r f\xF6r kort (minimum \xE4r %{count} tecken)",
        wrong_length: "har fel l\xE4ngd (ska vara %{count} tecken)"
      },
      template: {
        body: "Det var problem med f\xF6ljande f\xE4lt:",
        header: {
          one: "Ett fel f\xF6rhindrade denna %{model} fr\xE5n att sparas",
          other: "%{count} fel f\xF6rhindrade denna %{model} fr\xE5n att sparas"
        }
      }
    },
    helpers: {
      select: {
        prompt: "V\xE4lj"
      },
      submit: {
        create: "Skapa %{model}",
        submit: "Spara %{model}",
        update: "\xC4ndra %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "kr"
        }
      },
      format: {
        delimiter: " ",
        precision: 2,
        round_mode: "default",
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Miljard",
            million: "Miljon",
            quadrillion: "Biljard",
            thousand: "Tusen",
            trillion: "Biljon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " och ",
        two_words_connector: " och ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %e %b %Y %H:%M:%S %z",
        long: "%e %B %Y %H:%M",
        short: "%e %b %H:%M"
      },
      pm: "pm"
    }
  };
  var sw = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Uhalalishaji umeshindikana: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "J2",
        "J3",
        "J4",
        "J5",
        "Al",
        "Ij",
        "J1"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mac",
        "Apr",
        "Mei",
        "Jun",
        "Jul",
        "Ago",
        "Sep",
        "Okt",
        "Nov",
        "Des"
      ],
      day_names: [
        "Jumapili",
        "Jumatatu",
        "Jumanne",
        "Jumatano",
        "Alhamisi",
        "Ijumaa",
        "Jumamosi"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%e %B, %Y",
        short: "%e %b"
      },
      month_names: [
        null,
        "Mwezi wa kwanza",
        "Mwezi wa pili",
        "Mwezi wa tatu",
        "Mwezi wa nne",
        "Mwezi wa tano",
        "Mwezi wa sita",
        "Mwezi wa saba",
        "Mwezi wa nane",
        "Mwezi wa tisa",
        "Mwezi wa kumi",
        "Mwezi wa kumi na moja",
        "Mwezi wa kumi na mbili"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "kama saa limoja",
          other: "kama masaa %{count}"
        },
        about_x_months: {
          one: "kama mwezi %{count}",
          other: "kama miezi %{count}"
        },
        about_x_years: {
          one: "kama mwaka %{count}",
          other: "kama miaka %{count}"
        },
        almost_x_years: {
          one: "karibia mwaka",
          other: "karibia miaka %{count}"
        },
        half_a_minute: "nusu dakika",
        less_than_x_minutes: {
          one: "chini ya dakika %{count}",
          other: "chini ya dakika %{count}"
        },
        less_than_x_seconds: {
          one: "chini ya sekunde %{count}",
          other: "chini ya sekunde %{count}"
        },
        over_x_years: {
          one: "zaidi ya mwaka %{count}",
          other: "zaidi ya miaka %{count}"
        },
        x_days: {
          one: "siku %{count}",
          other: "siku %{count}"
        },
        x_minutes: {
          one: "dakika %{count}",
          other: "dakika %{count}"
        },
        x_months: {
          one: "mwezi %{count}",
          other: "miezi %{count}"
        },
        x_seconds: {
          one: "sekunde %{count}",
          other: "sekunde %{count}"
        }
      },
      prompts: {
        day: "Siku",
        hour: "Saa",
        minute: "Dakika",
        month: "Mwezi",
        second: "Sekunde",
        year: "Mwaka"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "lazima ikubaliwe",
        blank: "haitakiwi kuwa wazi",
        confirmation: "haifanani na hapo chini",
        empty: "haitakiwi kuwa tupu",
        equal_to: "z/iwe sawa na %{count}",
        even: "z/iwe shufwa",
        exclusion: "haiwezi kutumika",
        greater_than: "z/iwe zaidi ya %{count}",
        greater_than_or_equal_to: "z/iwe sawa ama zaidi ya %{count}",
        inclusion: "haipo kwenye orodha",
        invalid: "haifai",
        less_than: "z/isizidi %{count}",
        less_than_or_equal_to: "z/iwe sawa na, ama chini ya %{count}",
        not_a_number: "inaruhusiwa namba tu",
        not_an_integer: "inaruhusiwa namba tu",
        odd: "z/iwe witiri",
        taken: "imesajiliwa",
        too_long: "ndefu sana (isizidi herufi %{count})",
        too_short: "fupi mno (isipungue herufi %{count})",
        wrong_length: "idadi ya herufi hazilingani (inatakiwa %{count})"
      },
      template: {
        body: "Tafadhali kagua sehemu zifuatazo:",
        header: {
          one: "%{model} haikuhifadhiwa kwa sababu moja.",
          other: "%{model} haikuhifadhiwa kwa sababu %{count}."
        }
      }
    },
    helpers: {
      select: {
        prompt: "Tafadhali teua"
      },
      submit: {
        create: "Unda %{model}",
        submit: "Akibisha %{model}",
        update: "Sasaisha %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n%u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "/="
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Bilioni",
            million: "Milioni",
            quadrillion: "Kuadrilioni",
            thousand: "Elfu",
            trillion: "Trilioni",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: "Baiti",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", na ",
        two_words_connector: " na ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S",
        long: "%A, %e. %B %Y, %H:%M:%S",
        short: "%e %b %Y %H:%M"
      },
      pm: "pm"
    }
  };
  var ta = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0B9A\u0BB0\u0BBF\u0BAA\u0BBE\u0BB0\u0BCD\u0BA4\u0BCD\u0BA4\u0BB2\u0BCD \u0BA4\u0BCB\u0BB2\u0BCD\u0BB5\u0BBF\u0BAF\u0BC1\u0BB1\u0BCD\u0BB1\u0BA4\u0BC1: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0BAA\u0BA4\u0BBF\u0BB5\u0BC8 \u0BA8\u0BC0\u0B95\u0BCD\u0B95 \u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BBE\u0BA4\u0BC1, \u0B8F\u0BA9\u0BC6\u0BA9\u0BBF\u0BB2\u0BCD \u0B9A\u0BBE\u0BB0\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD %{record} \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1",
            has_one: "\u0BAA\u0BA4\u0BBF\u0BB5\u0BC8 \u0BA8\u0BC0\u0B95\u0BCD\u0B95 \u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BBE\u0BA4\u0BC1, \u0B8F\u0BA9\u0BC6\u0BA9\u0BBF\u0BB2\u0BCD \u0B92\u0BB0\u0BC1 \u0B9A\u0BBE\u0BB0\u0BCD\u0BAA\u0BC1 %{record} \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0B9E\u0BBE\u0BAF\u0BBF\u0BB1\u0BC1",
        "\u0BA4\u0BBF\u0B99\u0BCD\u0B95\u0BB3\u0BCD",
        "\u0B9A\u0BC6\u0BB5\u0BCD\u0BB5\u0BBE\u0BAF\u0BCD",
        "\u0BAA\u0BC1\u0BA4\u0BA9\u0BCD",
        "\u0BB5\u0BBF\u0BAF\u0BBE\u0BB4\u0BA9\u0BCD",
        "\u0BB5\u0BC6\u0BB3\u0BCD\u0BB3\u0BBF",
        "\u0B9A\u0BA9\u0BBF"
      ],
      abbr_month_names: [
        null,
        "\u0B9C\u0BA9",
        "\u0BAA\u0BBF\u0BAA\u0BCD",
        "\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD",
        "\u0B8F\u0BAA\u0BCD",
        "\u0BAE\u0BC7",
        "\u0B9C\u0BC2\u0BA9\u0BCD",
        "\u0B9C\u0BC2\u0BB2\u0BC8",
        "\u0B86\u0B95",
        "\u0B9A\u0BC6\u0BAA\u0BCD",
        "\u0B85\u0B95\u0BCD",
        "\u0BA8\u0BB5",
        "\u0B9F\u0BBF\u0B9A"
      ],
      day_names: [
        "\u0B9E\u0BBE\u0BAF\u0BBF\u0BB1\u0BCD\u0BB1\u0BC1\u0B95\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0BA4\u0BBF\u0B99\u0BCD\u0B95\u0B9F\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0B9A\u0BC6\u0BB5\u0BCD\u0BB5\u0BBE\u0BAF\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0BAA\u0BC1\u0BA4\u0BA9\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0BB5\u0BBF\u0BAF\u0BBE\u0BB4\u0B95\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0BB5\u0BC6\u0BB3\u0BCD\u0BB3\u0BBF\u0B95\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8",
        "\u0B9A\u0BA9\u0BBF\u0B95\u0BCD\u0B95\u0BBF\u0BB4\u0BAE\u0BC8"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF",
        "\u0BAA\u0BBF\u0BAA\u0BCD\u0BB0\u0BB5\u0BB0\u0BBF",
        "\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD",
        "\u0B8F\u0BAA\u0BCD\u0BB0\u0BB2\u0BCD",
        "\u0BAE\u0BC7",
        "\u0B9C\u0BC2\u0BA9\u0BCD",
        "\u0B9C\u0BC2\u0BB2\u0BC8",
        "\u0B86\u0B95\u0BB8\u0BCD\u0B9F\u0BCD",
        "\u0B9A\u0BC6\u0BAA\u0BCD\u0B9F\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
        "\u0B85\u0B95\u0BCD\u0B9F\u0BCB\u0BAA\u0BB0\u0BCD",
        "\u0BA8\u0BB5\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
        "\u0B9F\u0BBF\u0B9A\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
          other: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count} \u0BAE\u0BA3\u0BBF"
        },
        about_x_months: {
          one: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count} \u0BAE\u0BBE\u0BA4\u0BAE\u0BCD",
          other: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1"
        },
        about_x_years: {
          one: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count}  \u0B86\u0BA3\u0BCD\u0B9F\u0BC1",
          other: "\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD %{count}  \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD"
        },
        almost_x_years: {
          one: "\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F %{count}  \u0B86\u0BA3\u0BCD\u0B9F\u0BC1",
          other: "\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F %{count}  \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD"
        },
        half_a_minute: "\u0B85\u0BB0\u0BC8 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD",
        less_than_x_minutes: {
          one: "\u0B92\u0BB0\u0BC1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95",
          other: "\u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95 %{count} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BCD"
        },
        less_than_x_seconds: {
          one: "\u0B92\u0BB0\u0BC1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95",
          other: "\u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95 %{count} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BCD"
        },
        over_x_years: {
          one: "\u0B92\u0BB0\u0BC1  \u0B86\u0BA3\u0BCD\u0B9F\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC7\u0BB2\u0BBE\u0B95",
          other: "%{count}  \u0B86\u0BA3\u0BCD\u0B9F\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC7\u0BB2\u0BBE\u0B95"
        },
        x_days: {
          one: "%{count} \u0BA8\u0BBE\u0BB3\u0BCD",
          other: "%{count} \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BCD"
        },
        x_minutes: {
          one: "%{count} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD",
          other: "%{count} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BCD"
        },
        x_months: {
          one: "%{count} \u0BAE\u0BBE\u0BA4\u0BAE\u0BCD",
          other: "%{count} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BCD"
        },
        x_seconds: {
          one: "%{count} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF",
          other: "%{count} \u0BB5\u0BBF\u0BA8\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BCD"
        }
      },
      prompts: {
        day: "\u0BA8\u0BBE\u0BB3\u0BCD",
        hour: "\u0BAE\u0BA3\u0BBF",
        minute: "\u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD",
        month: "\u0BAE\u0BBE\u0BA4\u0BAE\u0BCD",
        second: "\u0BB5\u0BBF\u0BA8\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BCD",
        year: "\u0B86\u0BA3\u0BCD\u0B9F\u0BC1"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0B8F\u0BB1\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        blank: "\u0B95\u0BBE\u0BB2\u0BBF\u0BAF\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BBE\u0BA4\u0BC1",
        confirmation: "%{attribute}  \u0BAA\u0BCA\u0BB0\u0BC1\u0BA8\u0BCD\u0BA4\u0BB5\u0BBF\u0BB2\u0BCD\u0BB2\u0BC8",
        empty: "\u0BB5\u0BC6\u0BB1\u0BC1\u0BAE\u0BC8\u0BAF\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BBE\u0BA4\u0BC1",
        equal_to: "%{count} \u0B9A\u0BAE\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        even: "\u0B87\u0BB0\u0B9F\u0BCD\u0B9F\u0BC8\u0BAA\u0BCD\u0BAA\u0B9F\u0BC8 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        exclusion: "\u0B92\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BC1\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1",
        greater_than: "%{count} \u0B90 \u0BB5\u0BBF\u0B9F \u0B85\u0BA4\u0BBF\u0B95\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        greater_than_or_equal_to: "%{count}  \u0B85\u0BA4\u0BBF\u0B95\u0BAE\u0BBE\u0B95 \u0B85\u0BB2\u0BCD\u0BB2\u0BA4\u0BC1 \u0B9A\u0BAE\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        inclusion: "\u0BAA\u0B9F\u0BCD\u0B9F\u0BBF\u0BAF\u0BB2\u0BBF\u0BB2\u0BCD \u0B9A\u0BC7\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BB5\u0BBF\u0BB2\u0BCD\u0BB2\u0BC8",
        invalid: "\u0B9A\u0BC6\u0BB2\u0BCD\u0BB2\u0BC1\u0BAA\u0B9F\u0BBF\u0BAF\u0BBE\u0BA9\u0BA4\u0BB2\u0BCD\u0BB2",
        less_than: "%{count} \u0B90 \u0BB5\u0BBF\u0B9F \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        less_than_or_equal_to: "%{count} \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95 \u0B85\u0BB2\u0BCD\u0BB2\u0BA4\u0BC1 \u0B9A\u0BAE\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        not_a_number: "\u0B92\u0BB0\u0BC1 \u0B8E\u0BA3\u0BCD \u0B85\u0BB2\u0BCD\u0BB2",
        not_an_integer: "\u0B92\u0BB0\u0BC1 \u0BAE\u0BC1\u0BB4\u0BC1 \u0B8E\u0BA3\u0BCD\u0BA3\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        odd: "\u0B92\u0BB1\u0BCD\u0BB1\u0BC8\u0BAA\u0BCD\u0BAA\u0B9F\u0BC8 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        other_than: "%{count} \u0BA4\u0BB5\u0BBF\u0BB0 \u0BB5\u0BC7\u0BB1\u0BC1 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        present: "\u0B95\u0BBE\u0BB2\u0BBF\u0BAF\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
        taken: "\u0B8F\u0BB1\u0BCD\u0B95\u0BA9\u0BB5\u0BC7 \u0B8E\u0B9F\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCA\u0BB3\u0BCD\u0BB3 \u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1",
        too_long: {
          one: "\u0BAE\u0BBF\u0B95 \u0BA8\u0BC0\u0BB3\u0BAE\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1 (\u0B85\u0BA4\u0BBF\u0B95\u0BAA\u0B9F\u0BCD\u0B9A\u0BAE\u0BBE\u0B95 \u0B92\u0BB0\u0BC1 \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1)",
          other: "\u0BAE\u0BBF\u0B95 \u0BA8\u0BC0\u0BB3\u0BAE\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1 (\u0B85\u0BA4\u0BBF\u0B95\u0BAA\u0B9F\u0BCD\u0B9A\u0BAE\u0BBE\u0B95 %{count} \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BB3\u0BCD)"
        },
        too_short: {
          one: "\u0BAE\u0BBF\u0B95\u0BB5\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC1\u0B95\u0BBF\u0BAF\u0BA4\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1 (\u0B95\u0BC1\u0BB1\u0BC8\u0BA8\u0BCD\u0BA4\u0BAA\u0B9F\u0BCD\u0B9A\u0BAE\u0BCD \u0B92\u0BB0\u0BC1 \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1)",
          other: "\u0BAE\u0BBF\u0B95\u0BB5\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC1\u0B95\u0BBF\u0BAF\u0BA4\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1 (\u0B95\u0BC1\u0BB1\u0BC8\u0BA8\u0BCD\u0BA4\u0BAA\u0B9F\u0BCD\u0B9A\u0BAE\u0BCD %{count} \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BB3\u0BCD)"
        },
        wrong_length: {
          one: "\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BA8\u0BC0\u0BB3\u0BAE\u0BCD (%{count} \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95\u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD)",
          other: "\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BA8\u0BC0\u0BB3\u0BAE\u0BCD (%{count} \u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BB3\u0BCD \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95\u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD)"
        }
      },
      template: {
        body: "\u0BAA\u0BBF\u0BA9\u0BCD\u0BB5\u0BB0\u0BC1\u0BAE\u0BCD \u0BAA\u0BC1\u0BB2\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD \u0BAA\u0BBF\u0BB0\u0B9A\u0BCD\u0B9A\u0BBF\u0BA9\u0BC8\u0B95\u0BB3\u0BCD \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1:",
        header: {
          one: "%{count} \u0BAA\u0BBF\u0BB4\u0BC8 \u0B87\u0BA8\u0BCD\u0BA4 %{model} \u0B90 \u0B9A\u0BC7\u0BAE\u0BBF\u0B95\u0BCD\u0B95 \u0BA4\u0B9F\u0BC8\u0BAF\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1",
          other: "%{count} \u0BAA\u0BBF\u0BB4\u0BC8\u0B95\u0BB3\u0BCD \u0B87\u0BA8\u0BCD\u0BA4 %{model} \u0B90 \u0B9A\u0BC7\u0BAE\u0BBF\u0B95\u0BCD\u0B95 \u0BA4\u0B9F\u0BC8\u0BAF\u0BBE\u0B95 \u0B89\u0BB3\u0BCD\u0BB3\u0BA4\u0BC1"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD\u0B95"
      },
      submit: {
        create: "%{model} \u0B90  \u0B89\u0BB0\u0BC1\u0BB5\u0BBE\u0B95\u0BCD\u0B95\u0BC1",
        submit: "%{model} \u0B90 \u0B9A\u0BC7\u0BAE\u0BBF",
        update: "%{model} \u0B90 \u0BAA\u0BC1\u0BA4\u0BC1\u0BAA\u0BCD\u0BAA\u0BBF"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0BAA\u0BBF\u0BB2\u0BCD\u0BB2\u0BBF\u0BAF\u0BA9\u0BCD",
            million: "\u0BAE\u0BBF\u0BB2\u0BCD\u0BB2\u0BBF\u0BAF\u0BA9\u0BCD",
            quadrillion: "\u0B95\u0BC1\u0BB5\u0BBE\u0B9F\u0BCD\u0BB0\u0BBF\u0BB2\u0BCD\u0BB2\u0BBF\u0BAF\u0BA9\u0BCD",
            thousand: "\u0B86\u0BAF\u0BBF\u0BB0\u0BAE\u0BCD",
            trillion: "\u0B9F\u0BBF\u0BB0\u0BBF\u0BB2\u0BCD\u0BB2\u0BBF\u0BAF\u0BA9\u0BCD",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0BAE\u0BB1\u0BCD\u0BB1\u0BC1\u0BAE\u0BCD ",
        two_words_connector: " \u0BAE\u0BB1\u0BCD\u0BB1\u0BC1\u0BAE\u0BCD ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0BAE\u0BC1.\u0BAA.",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "\u0BAA\u0BBF.\u0BAA."
    }
  };
  var te = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0C27\u0C4D\u0C30\u0C41\u0C35\u0C40\u0C15\u0C30\u0C28 \u0C35\u0C3F\u0C2B\u0C32\u0C2E\u0C48\u0C28\u0C26\u0C3F: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0C30\u0C3F\u0C15\u0C3E\u0C30\u0C4D\u0C21\u0C4D\u0C28\u0C41 \u0C24\u0C4A\u0C32\u0C17\u0C3F\u0C02\u0C1A\u0C32\u0C47\u0C30\u0C41, \u0C0E\u0C02\u0C26\u0C41\u0C15\u0C02\u0C1F\u0C47 \u0C06\u0C27\u0C3E\u0C30\u0C2A\u0C21\u0C3F\u0C28 %{record} \u0C09\u0C02\u0C26\u0C3F",
            has_one: "\u0C30\u0C3F\u0C15\u0C3E\u0C30\u0C4D\u0C21\u0C4D\u0C28\u0C41 \u0C24\u0C4A\u0C32\u0C17\u0C3F\u0C02\u0C1A\u0C32\u0C47\u0C30\u0C41, \u0C0E\u0C02\u0C26\u0C41\u0C15\u0C02\u0C1F\u0C47 \u0C12\u0C15 \u0C06\u0C27\u0C3E\u0C30\u0C2A\u0C21\u0C3F\u0C28 %{record} \u0C09\u0C02\u0C26\u0C3F"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0C06\u0C26\u0C3F",
        "\u0C38\u0C4B\u0C2E",
        "\u0C2E\u0C02\u0C17\u0C33",
        "\u0C2C\u0C41\u0C27",
        "\u0C17\u0C41\u0C30\u0C41",
        "\u0C36\u0C41\u0C15\u0C4D\u0C30",
        "\u0C36\u0C28\u0C3F"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "\u0C06\u0C26\u0C3F\u0C35\u0C3E\u0C30\u0C02",
        "\u0C38\u0C4B\u0C2E\u0C35\u0C3E\u0C30\u0C02",
        "\u0C2E\u0C02\u0C17\u0C33\u0C35\u0C3E\u0C30\u0C02",
        "\u0C2C\u0C41\u0C27\u0C35\u0C3E\u0C30\u0C02",
        "\u0C17\u0C41\u0C30\u0C41\u0C35\u0C3E\u0C30\u0C02",
        "\u0C36\u0C41\u0C15\u0C4D\u0C30\u0C35\u0C3E\u0C30\u0C02",
        "\u0C36\u0C28\u0C3F\u0C35\u0C3E\u0C30\u0C02"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0C1C\u0C28\u0C35\u0C30\u0C3F",
        "\u0C2B\u0C3F\u0C2C\u0C4D\u0C30\u0C35\u0C30\u0C3F",
        "\u0C2E\u0C3E\u0C30\u0C4D\u0C1A\u0C3F",
        "\u0C0F\u0C2A\u0C4D\u0C30\u0C3F\u0C32\u0C4D",
        "\u0C2E\u0C47",
        "\u0C1C\u0C42\u0C28\u0C4D",
        "\u0C1C\u0C42\u0C32\u0C46\u0C56",
        "\u0C06\u0C17\u0C38\u0C4D\u0C1F\u0C41",
        "\u0C38\u0C46\u0C2A\u0C4D\u0C1F\u0C46\u0C02\u0C2C\u0C30\u0C41",
        "\u0C05\u0C15\u0C4D\u0C1F\u0C4B\u0C2C\u0C30\u0C41",
        "\u0C28\u0C35\u0C02\u0C2C\u0C30\u0C41",
        "\u0C21\u0C3F\u0C38\u0C46\u0C02\u0C2C\u0C30\u0C41"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C17\u0C02\u0C1F",
          other: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 %{count} \u0C17\u0C02\u0C1F\u0C32\u0C41"
        },
        about_x_months: {
          one: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C28\u0C46\u0C32",
          other: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 %{count} \u0C28\u0C46\u0C32\u0C32\u0C41"
        },
        about_x_years: {
          one: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02",
          other: "\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 %{count} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41"
        },
        almost_x_years: {
          one: "\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02",
          other: "\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 %{count} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41"
        },
        half_a_minute: "\u0C05\u0C30 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02",
        less_than_x_minutes: {
          one: "\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35",
          other: "%{count} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35"
        },
        less_than_x_seconds: {
          one: "\u0C12\u0C15 \u0C15\u0C4D\u0C37\u0C23\u0C02 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35",
          other: "%{count} \u0C15\u0C4D\u0C37\u0C23\u0C3E\u0C32\u0C41 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35"
        },
        over_x_years: {
          one: "\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02 \u0C2A\u0C48\u0C17\u0C3E",
          other: "%{count} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32 \u0C2A\u0C48\u0C17\u0C3E"
        },
        x_days: {
          one: "\u0C12\u0C15 \u0C30\u0C4B\u0C1C\u0C41",
          other: "%{count} \u0C30\u0C4B\u0C1C\u0C41\u0C32\u0C41"
        },
        x_minutes: {
          one: "\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02",
          other: "%{count} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32\u0C41"
        },
        x_months: {
          one: "\u0C12\u0C15 \u0C28\u0C46\u0C32",
          other: "%{count} \u0C28\u0C46\u0C32\u0C32\u0C41"
        },
        x_seconds: {
          one: "\u0C12\u0C15 \u0C15\u0C4D\u0C37\u0C23\u0C02",
          other: "%{count} \u0C15\u0C4D\u0C37\u0C23\u0C3E\u0C32\u0C41"
        },
        x_years: {
          one: "\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02",
          other: "%{count} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41"
        }
      },
      prompts: {
        day: "\u0C30\u0C4B\u0C1C\u0C41",
        hour: "\u0C17\u0C02\u0C1F",
        minute: "\u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02",
        month: "\u0C28\u0C46\u0C32",
        second: "\u0C15\u0C4D\u0C37\u0C23\u0C3E\u0C32\u0C41",
        year: "\u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0C05\u0C02\u0C17\u0C40\u0C15\u0C30\u0C3F\u0C02\u0C1A\u0C3F \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        blank: "\u0C16\u0C3E\u0C33\u0C40\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C15\u0C42\u0C21\u0C26\u0C41",
        confirmation: "%{attribute} \u0C38\u0C30\u0C3F\u0C2A\u0C4B\u0C32\u0C21\u0C02 \u0C32\u0C47\u0C26\u0C41",
        empty: "\u0C36\u0C42\u0C28\u0C4D\u0C2F\u0C02\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C15\u0C42\u0C21\u0C26\u0C41",
        equal_to: "%{count}\u0C15\u0C41 \u0C38\u0C2E\u0C3E\u0C28\u0C02\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        even: "\u0C38\u0C30\u0C3F \u0C38\u0C02\u0C16\u0C4D\u0C2F \u0C05\u0C2F\u0C3F \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        exclusion: "\u0C2A\u0C4D\u0C30\u0C24\u0C4D\u0C2F\u0C47\u0C15\u0C3F\u0C02\u0C1A\u0C2C\u0C21\u0C3F\u0C02\u0C26\u0C3F",
        greater_than: "%{count} \u0C15\u0C02\u0C1F\u0C47 \u0C0E\u0C15\u0C4D\u0C15\u0C41\u0C35 \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        greater_than_or_equal_to: "%{count} \u0C15\u0C02\u0C1F\u0C47 \u0C0E\u0C15\u0C4D\u0C15\u0C41\u0C35 \u0C32\u0C47\u0C26\u0C3E \u0C38\u0C2E\u0C3E\u0C28\u0C02\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        inclusion: "\u0C1C\u0C3E\u0C2C\u0C3F\u0C24\u0C3E\u0C32\u0C4B \u0C1A\u0C47\u0C30\u0C4D\u0C1A\u0C2C\u0C21\u0C32\u0C47\u0C26\u0C41",
        invalid: "\u0C1A\u0C46\u0C32\u0C4D\u0C32\u0C28\u0C3F\u0C26\u0C3F",
        less_than: "%{count} \u0C15\u0C02\u0C1F\u0C47 \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35 \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        less_than_or_equal_to: "%{count} \u0C28\u0C3E\u0C32\u0C41\u0C17\u0C41 \u0C15\u0C02\u0C1F\u0C47 \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\u0C17\u0C3E \u0C32\u0C47\u0C26\u0C3E \u0C38\u0C2E\u0C3E\u0C28\u0C02\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        model_invalid: "\u0C27\u0C43\u0C35\u0C40\u0C15\u0C30\u0C23 \u0C35\u0C3F\u0C2B\u0C32\u0C2E\u0C48\u0C02\u0C26\u0C3F: %{errors}",
        not_a_number: "\u0C38\u0C02\u0C16\u0C4D\u0C2F \u0C15\u0C3E\u0C26\u0C41",
        not_an_integer: "\u0C2A\u0C42\u0C30\u0C4D\u0C23\u0C3E\u0C02\u0C15\u0C02\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        odd: "\u0C2C\u0C47\u0C38\u0C3F \u0C38\u0C02\u0C16\u0C4D\u0C2F \u0C05\u0C2F\u0C3F \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        other_than: "%{count} \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C35\u0C47\u0C30\u0C41 \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        present: "\u0C16\u0C3E\u0C33\u0C40\u0C17\u0C3E \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        required: "\u0C09\u0C28\u0C3F\u0C15\u0C3F\u0C32\u0C4B \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F",
        taken: "\u0C07\u0C2A\u0C4D\u0C2A\u0C1F\u0C3F\u0C15\u0C47 \u0C24\u0C40\u0C38\u0C41\u0C15\u0C4B\u0C2C\u0C21\u0C3F\u0C02\u0C26\u0C3F",
        too_long: {
          one: "\u0C1A\u0C3E\u0C32\u0C3E \u0C2A\u0C4A\u0C21\u0C35\u0C41\u0C17\u0C3E \u0C09\u0C02\u0C26\u0C3F (\u0C17\u0C30\u0C3F\u0C37\u0C4D\u0C1F\u0C02\u0C17\u0C3E \u0C12\u0C15 \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C02)",
          other: "\u0C1A\u0C3E\u0C32\u0C3E \u0C2A\u0C4A\u0C21\u0C35\u0C41\u0C17\u0C3E \u0C09\u0C02\u0C26\u0C3F (\u0C17\u0C30\u0C3F\u0C37\u0C4D\u0C1F\u0C02\u0C17\u0C3E %{count} \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C3E\u0C32\u0C41)"
        },
        too_short: {
          one: "\u0C1A\u0C3E\u0C32\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\u0C17\u0C3E \u0C09\u0C02\u0C26\u0C3F (\u0C15\u0C28\u0C40\u0C38\u0C02 \u0C12\u0C15 \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C02)",
          other: "\u0C1A\u0C3E\u0C32\u0C3E \u0C1A\u0C3F\u0C28\u0C4D\u0C28\u0C26\u0C3F (\u0C15\u0C28\u0C40\u0C38\u0C02 %{count} \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C3E\u0C32\u0C41)"
        },
        wrong_length: {
          one: "\u0C24\u0C2A\u0C4D\u0C2A\u0C41 \u0C2A\u0C4A\u0C21\u0C35\u0C41 (\u0C12\u0C15 \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C02 \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F)",
          other: "\u0C24\u0C2A\u0C4D\u0C2A\u0C41 \u0C2A\u0C4A\u0C21\u0C35\u0C41 (%{count} \u0C05\u0C15\u0C4D\u0C37\u0C30\u0C3E\u0C32\u0C41 \u0C09\u0C02\u0C21\u0C3E\u0C32\u0C3F)"
        }
      },
      template: {
        body: "\u0C15\u0C3F\u0C02\u0C26\u0C3F \u0C30\u0C02\u0C17\u0C3E\u0C32\u0C32\u0C4B \u0C38\u0C2E\u0C38\u0C4D\u0C2F\u0C32\u0C41 \u0C09\u0C28\u0C4D\u0C28\u0C3E\u0C2F\u0C3F:",
        header: {
          one: "\u0C12\u0C15 \u0C24\u0C2A\u0C4D\u0C2A\u0C41 \u0C08 %{model} \u0C28\u0C41 \u0C06\u0C26\u0C3E \u0C1A\u0C46\u0C2F\u0C4D\u0C2F\u0C15\u0C41\u0C02\u0C21\u0C3E \u0C28\u0C3F\u0C37\u0C47\u0C26\u0C3F\u0C02\u0C1A\u0C3F\u0C02\u0C26\u0C3F",
          other: "%{count} \u0C24\u0C2A\u0C4D\u0C2A\u0C41\u0C32\u0C41 \u0C08 %{model} \u0C28\u0C41 \u0C06\u0C26\u0C3E \u0C1A\u0C46\u0C2F\u0C4D\u0C2F\u0C15\u0C41\u0C02\u0C21\u0C3E \u0C28\u0C3F\u0C37\u0C47\u0C26\u0C3F\u0C02\u0C1A\u0C3F\u0C02\u0C26\u0C3F"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0C26\u0C2F\u0C1A\u0C47\u0C38\u0C3F \u0C0E\u0C02\u0C1A\u0C41\u0C15\u0C4B\u0C02\u0C21\u0C3F"
      },
      submit: {
        create: "%{model} \u0C28\u0C41 \u0C38\u0C43\u0C37\u0C4D\u0C1F\u0C3F\u0C02\u0C1A\u0C02\u0C21\u0C3F",
        submit: "%{model} \u0C28\u0C41 \u0C06\u0C26\u0C3E \u0C1A\u0C46\u0C2F\u0C4D\u0C2F\u0C02\u0C21\u0C3F",
        update: "%{model} \u0C28\u0C41 \u0C28\u0C35\u0C40\u0C15\u0C30\u0C3F\u0C02\u0C1A\u0C02\u0C21\u0C3F"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B9"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0C2C\u0C3F\u0C32\u0C3F\u0C2F\u0C28\u0C4D",
            million: "\u0C2E\u0C3F\u0C32\u0C3F\u0C2F\u0C28\u0C4D",
            quadrillion: "\u0C15\u0C4D\u0C35\u0C3E\u0C21\u0C4D\u0C30\u0C3F\u0C32\u0C3F\u0C2F\u0C28\u0C4D",
            thousand: "\u0C35\u0C46\u0C2F\u0C4D\u0C2F\u0C3F",
            trillion: "\u0C1F\u0C4D\u0C30\u0C3F\u0C32\u0C3F\u0C2F\u0C28\u0C4D",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0C2C\u0C46\u0C56\u0C1F\u0C4D",
              other: "\u0C2C\u0C46\u0C56\u0C1F\u0C4D\u0C32\u0C41"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0C2E\u0C30\u0C3F\u0C2F\u0C41 ",
        two_words_connector: " \u0C2E\u0C30\u0C3F\u0C2F\u0C41 ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var th = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0E44\u0E21\u0E48\u0E1C\u0E48\u0E32\u0E19\u0E01\u0E32\u0E23\u0E15\u0E23\u0E27\u0E08\u0E2A\u0E2D\u0E1A: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0E2D\u0E32",
        "\u0E08",
        "\u0E2D",
        "\u0E1E",
        "\u0E1E\u0E24",
        "\u0E28",
        "\u0E2A"
      ],
      abbr_month_names: [
        null,
        "\u0E21.\u0E04.",
        "\u0E01.\u0E1E.",
        "\u0E21\u0E35.\u0E04.",
        "\u0E40\u0E21.\u0E22.",
        "\u0E1E.\u0E04.",
        "\u0E21\u0E34.\u0E22.",
        "\u0E01.\u0E04.",
        "\u0E2A.\u0E04.",
        "\u0E01.\u0E22.",
        "\u0E15.\u0E04.",
        "\u0E1E.\u0E22.",
        "\u0E18.\u0E04."
      ],
      day_names: [
        "\u0E2D\u0E32\u0E17\u0E34\u0E15\u0E22\u0E4C",
        "\u0E08\u0E31\u0E19\u0E17\u0E23\u0E4C",
        "\u0E2D\u0E31\u0E07\u0E04\u0E32\u0E23",
        "\u0E1E\u0E38\u0E18",
        "\u0E1E\u0E24\u0E2B\u0E31\u0E2A\u0E1A\u0E14\u0E35",
        "\u0E28\u0E38\u0E01\u0E23\u0E4C",
        "\u0E40\u0E2A\u0E32\u0E23\u0E4C"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21",
        "\u0E01\u0E38\u0E21\u0E20\u0E32\u0E1E\u0E31\u0E19\u0E18\u0E4C",
        "\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21",
        "\u0E40\u0E21\u0E29\u0E32\u0E22\u0E19",
        "\u0E1E\u0E24\u0E29\u0E20\u0E32\u0E04\u0E21",
        "\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19",
        "\u0E01\u0E23\u0E01\u0E0E\u0E32\u0E04\u0E21",
        "\u0E2A\u0E34\u0E07\u0E2B\u0E32\u0E04\u0E21",
        "\u0E01\u0E31\u0E19\u0E22\u0E32\u0E22\u0E19",
        "\u0E15\u0E38\u0E25\u0E32\u0E04\u0E21",
        "\u0E1E\u0E24\u0E28\u0E08\u0E34\u0E01\u0E32\u0E22\u0E19",
        "\u0E18\u0E31\u0E19\u0E27\u0E32\u0E04\u0E21"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 %{count} \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
        about_x_months: "\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 %{count} \u0E40\u0E14\u0E37\u0E2D\u0E19",
        about_x_years: "\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 %{count} \u0E1B\u0E35",
        almost_x_years: "\u0E40\u0E01\u0E37\u0E2D\u0E1A %{count} \u0E1B\u0E35",
        half_a_minute: "\u0E04\u0E23\u0E36\u0E48\u0E07\u0E19\u0E32\u0E17\u0E35",
        less_than_x_minutes: "\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 %{count} \u0E19\u0E32\u0E17\u0E35",
        less_than_x_seconds: "\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 %{count} \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35",
        over_x_years: "\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 %{count} \u0E1B\u0E35",
        x_days: "%{count} \u0E27\u0E31\u0E19",
        x_minutes: "%{count} \u0E19\u0E32\u0E17\u0E35",
        x_months: "%{count} \u0E40\u0E14\u0E37\u0E2D\u0E19",
        x_seconds: "%{count} \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35"
      },
      prompts: {
        day: "\u0E27\u0E31\u0E19",
        hour: "\u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
        minute: "\u0E19\u0E32\u0E17\u0E35",
        month: "\u0E40\u0E14\u0E37\u0E2D\u0E19",
        second: "\u0E27\u0E34\u0E19\u0E32\u0E17\u0E35",
        year: "\u0E1B\u0E35"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0E15\u0E49\u0E2D\u0E07\u0E16\u0E39\u0E01\u0E22\u0E2D\u0E21\u0E23\u0E31\u0E1A",
        blank: "\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E27\u0E49\u0E19\u0E27\u0E48\u0E32\u0E07\u0E40\u0E2D\u0E32\u0E44\u0E27\u0E49",
        confirmation: "\u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19",
        empty: "\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E27\u0E49\u0E19\u0E27\u0E48\u0E32\u0E07\u0E40\u0E2D\u0E32\u0E44\u0E27\u0E49",
        equal_to: "\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E48\u0E32\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A %{count}",
        even: "\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E08\u0E33\u0E19\u0E27\u0E19\u0E04\u0E39\u0E48",
        exclusion: "\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49",
        greater_than: "\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 %{count}",
        greater_than_or_equal_to: "\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A %{count}",
        inclusion: "\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23",
        invalid: "\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07",
        less_than: "\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E48\u0E32\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 %{count}",
        less_than_or_equal_to: "\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E48\u0E32\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A %{count}",
        not_a_number: "\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02",
        not_an_integer: "\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E08\u0E33\u0E19\u0E27\u0E19\u0E40\u0E15\u0E47\u0E21",
        odd: "\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E08\u0E33\u0E19\u0E27\u0E19\u0E04\u0E35\u0E48",
        taken: "\u0E16\u0E39\u0E01\u0E43\u0E0A\u0E49\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27",
        too_long: "\u0E22\u0E32\u0E27\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B (\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19 %{count} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)",
        too_short: "\u0E2A\u0E31\u0E49\u0E19\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B (\u0E15\u0E49\u0E2D\u0E07\u0E22\u0E32\u0E27\u0E01\u0E27\u0E48\u0E32 %{count} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)",
        wrong_length: "\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 (\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27 %{count} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)"
      },
      template: {
        body: "\u0E42\u0E1B\u0E23\u0E14\u0E15\u0E23\u0E27\u0E08\u0E2A\u0E2D\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E43\u0E19\u0E0A\u0E48\u0E2D\u0E07\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49:",
        header: "\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14 %{count} \u0E1B\u0E23\u0E30\u0E01\u0E32\u0E23 \u0E17\u0E33\u0E43\u0E2B\u0E49\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01%{model}\u0E44\u0E14\u0E49"
      }
    },
    helpers: {
      select: {
        prompt: "\u0E42\u0E1B\u0E23\u0E14\u0E40\u0E25\u0E37\u0E2D\u0E01"
      },
      submit: {
        create: "\u0E2A\u0E23\u0E49\u0E32\u0E07%{model}",
        submit: "\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01%{model}",
        update: "\u0E1B\u0E23\u0E31\u0E1A\u0E1B\u0E23\u0E38\u0E07%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0E1A\u0E32\u0E17"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0E1E\u0E31\u0E19\u0E25\u0E49\u0E32\u0E19",
            million: "\u0E25\u0E49\u0E32\u0E19",
            quadrillion: "\u0E1E\u0E31\u0E19\u0E25\u0E49\u0E32\u0E19\u0E25\u0E49\u0E32\u0E19",
            thousand: "\u0E1E\u0E31\u0E19",
            trillion: "\u0E25\u0E49\u0E32\u0E19\u0E25\u0E49\u0E32\u0E19",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: "\u0E44\u0E1A\u0E15\u0E4C",
            gb: "\u0E08\u0E34\u0E01\u0E30\u0E44\u0E1A\u0E15\u0E4C",
            kb: "\u0E01\u0E34\u0E42\u0E25\u0E44\u0E1A\u0E15\u0E4C",
            mb: "\u0E40\u0E21\u0E01\u0E30\u0E44\u0E1A\u0E15\u0E4C",
            tb: "\u0E40\u0E17\u0E23\u0E30\u0E44\u0E1A\u0E15\u0E4C"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", \u0E41\u0E25\u0E30 ",
        two_words_connector: " \u0E41\u0E25\u0E30 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07",
      formats: {
        default: "%a %d %b %Y %H:%M:%S %z",
        long: "%d %B %Y %H:%M \u0E19.",
        short: "%d %b %H:%M \u0E19."
      },
      pm: "\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07"
    }
  };
  var tl = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Nabigo ang pagpapatunay: %{errors}"
        }
      }
    },
    date: {
      abbr_day_names: [
        "Lin",
        "Lun",
        "Mar",
        "Miy",
        "Huw",
        "Biy",
        "Sab"
      ],
      abbr_month_names: [
        null,
        "Ene",
        "Peb",
        "Mar",
        "Abr",
        "May",
        "Hun",
        "Hul",
        "Ago",
        "Set",
        "Okt",
        "Nob",
        "Dis"
      ],
      day_names: [
        "Linggo",
        "Lunes",
        "Martes",
        "Miyerkules",
        "Huwebes",
        "Biyernes",
        "Sabado"
      ],
      formats: {
        default: "%d/%m/%Y",
        long: "ika-%d ng %B, %Y",
        short: "ika-%d ng %b"
      },
      month_names: [
        null,
        "Enero",
        "Pebrero",
        "Marso",
        "Abril",
        "Mayo",
        "Hunyo",
        "Hulyo",
        "Agosto",
        "Setyembre",
        "Oktubre",
        "Nobyembre",
        "Disyembre"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "humigit-kumulang isang oras",
          other: "humigit-kumulang %{count} oras"
        },
        about_x_months: {
          one: "humigit-kumulang isang buwan",
          other: "humigit-kumulang %{count} buwan"
        },
        about_x_years: {
          one: "humigit-kumulang isang taon",
          other: "humigit-kumulang %{count} taon"
        },
        almost_x_years: {
          one: "halos isang taon",
          other: "halos %{count} taon"
        },
        half_a_minute: "kalahating minuto",
        less_than_x_minutes: {
          one: "mas mababa sa isang minuto",
          other: "mas mababa sa %{count} minuto"
        },
        less_than_x_seconds: {
          one: "mas mababa sa isang segundo",
          other: "mas mababa sa %{count} segundo"
        },
        over_x_years: {
          one: "higit sa isang taon",
          other: "higit %{count} taon"
        },
        x_days: {
          one: "isang araw",
          other: "%{count} araw"
        },
        x_minutes: {
          one: "isang minuto",
          other: "%{count} minuto"
        },
        x_months: {
          one: "isang buwan",
          other: "%{count} buwan"
        },
        x_seconds: {
          one: "isang segundo",
          other: "%{count} segundo"
        }
      },
      prompts: {
        day: "araw",
        hour: "oras",
        minute: "minuto",
        month: "buwan",
        second: "segundo",
        year: "taon"
      }
    },
    errors: {
      format: "%{attribute} ay %{message}",
      messages: {
        accepted: "dapat na tanggapin",
        blank: "hindi maaaring walang laman",
        confirmation: "hindi tumutugma ang pagpapatunay",
        empty: "hindi maaaring walang laman",
        equal_to: "dapat na katumba sa %{count}",
        even: "dapat maging even",
        exclusion: "nakalaan na",
        greater_than: "dapat na mas higit sa %{count}",
        greater_than_or_equal_to: "dapat na mas higit sa o katumbas ng %{count}",
        inclusion: "hindi kasama sa listahan",
        invalid: "hindi wasto",
        less_than: "dapat na mas mababa sa %{count}",
        less_than_or_equal_to: "dapat na mas mababa sa o katumbas ng %{count}",
        not_a_number: "hindi isang numero",
        not_an_integer: "dapat na isang integer",
        odd: "dapat maging odd",
        taken: "ginagamit na",
        too_long: {
          one: "masyadong mahaba (pinakamadami ay %{count} character)",
          other: "masyadong mahaba (pinakamadami ay %{count} character)"
        },
        too_short: {
          one: "masyadong maikli (pinakakonti ay %{count} character)",
          other: "masyadong maikli (pinakakonti ay %{count} character)"
        },
        wrong_length: {
          one: "ang maling haba (ito ay dapat eksaktong %{count} character)",
          other: "ang maling haba (ito ay dapat eksaktong %{count} character)"
        }
      },
      template: {
        body: "May mga problema sa mga sumusunod na patlang:",
        header: {
          one: "hindi maaaring i-save ang %{model} na ito dahil sa isang error",
          other: "hindi maaaring i-save ang %{model} na ito dahil sa %{count} error"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Mangyaring pumili"
      },
      submit: {
        create: "lumikha ng %{model}",
        submit: "isumite ang %{model}",
        update: "i-update ang %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B1"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "bilyon",
            million: "milyon",
            quadrillion: "kuwadrilyon",
            thousand: "libo",
            trillion: "trilyon",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", at",
        two_words_connector: " at ",
        words_connector: ","
      }
    },
    time: {
      am: "AM",
      formats: {
        default: "%A, ika-%d ng %B ng %Y %H:%M:%S %z",
        long: "ika-%d ng %B ng %Y %H:%M",
        short: "%d ng %b %H:%M"
      },
      pm: "PM"
    }
  };
  var tr = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Do\u011Frulama ba\u015Far\u0131s\u0131z oldu: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Ba\u011Fl\u0131 kay\u0131tlar %{record} bulundu\u011Fu i\xE7in kay\u0131t silinemedi",
            has_one: "Ba\u011Fl\u0131 bir kay\u0131t %{record} bulundu\u011Fu i\xE7in kay\u0131t silinemedi"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Pzr",
        "Pzt",
        "Sal",
        "\xC7r\u015F",
        "Pr\u015F",
        "Cum",
        "Cts"
      ],
      abbr_month_names: [
        null,
        "Oca",
        "\u015Eub",
        "Mar",
        "Nis",
        "May",
        "Haz",
        "Tem",
        "A\u011Fu",
        "Eyl",
        "Eki",
        "Kas",
        "Ara"
      ],
      day_names: [
        "Pazar",
        "Pazartesi",
        "Sal\u0131",
        "\xC7ar\u015Famba",
        "Per\u015Fembe",
        "Cuma",
        "Cumartesi"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%e %B %Y %A",
        short: "%e %b"
      },
      month_names: [
        null,
        "Ocak",
        "\u015Eubat",
        "Mart",
        "Nisan",
        "May\u0131s",
        "Haziran",
        "Temmuz",
        "A\u011Fustos",
        "Eyl\xFCl",
        "Ekim",
        "Kas\u0131m",
        "Aral\u0131k"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "yakla\u015F\u0131k %{count} saat",
          other: "yakla\u015F\u0131k %{count} saat"
        },
        about_x_months: {
          one: "yakla\u015F\u0131k %{count} ay",
          other: "yakla\u015F\u0131k %{count} ay"
        },
        about_x_years: {
          one: "yakla\u015F\u0131k %{count} y\u0131l",
          other: "yakla\u015F\u0131k %{count} y\u0131l"
        },
        almost_x_years: {
          one: "neredeyse %{count} y\u0131l",
          other: "neredeyse %{count} y\u0131l"
        },
        half_a_minute: "yar\u0131m dakika",
        less_than_x_minutes: {
          one: "%{count} dakikadan az",
          other: "%{count} dakikadan az"
        },
        less_than_x_seconds: {
          one: "%{count} saniyeden az",
          other: "%{count} saniyeden az"
        },
        over_x_years: {
          one: "%{count} y\u0131ldan fazla",
          other: "%{count} y\u0131ldan fazla"
        },
        x_days: {
          one: "%{count} g\xFCn",
          other: "%{count} g\xFCn"
        },
        x_minutes: {
          one: "%{count} dakika",
          other: "%{count} dakika"
        },
        x_months: {
          one: "%{count} ay",
          other: "%{count} ay"
        },
        x_seconds: {
          one: "%{count} saniye",
          other: "%{count} saniye"
        },
        x_years: {
          one: "%{count} y\u0131l",
          other: "%{count} y\u0131l"
        }
      },
      prompts: {
        day: "G\xFCn",
        hour: "Saat",
        minute: "Dakika",
        month: "Ay",
        second: "Saniye",
        year: "Y\u0131l"
      }
    },
    devise: {
      failure: {
        expired: "Hesab\u0131n\u0131z aktif olarak kullan\u0131lmad\u0131\u011F\u0131 i\xE7in art\u0131k ge\xE7erli de\u011Fil. L\xFCtfen y\xF6netici ile irtibata ge\xE7in.",
        session_limited: "Hesab\u0131n\u0131za ba\u015Fka bir taray\u0131c\u0131dan giri\u015F yap\u0131lm\u0131\u015F. L\xFCtfen devam etmek i\xE7in yeniden giri\u015F yap\u0131n."
      },
      invalid_captcha: "Captcha hatal\u0131.",
      invalid_security_question: "G\xFCvenlik sorusunun cevab\u0131 yanl\u0131\u015F.",
      paranoid_verification_code: {
        show: {
          submit: "G\xF6nder",
          submit_verification_code: "Do\u011Frulama kodunu g\xF6nder",
          verification_code: "Do\u011Frulama kodu"
        },
        updated: "Do\u011Frulama kodu kabul edildi"
      },
      paranoid_verify: {
        code_required: "Destek ekibimizden ald\u0131\u011F\u0131n\u0131z kodu girin."
      },
      password_expired: {
        change_required: "Parolan\u0131z\u0131n ge\xE7erlilik s\xFCresi dolmu\u015F. L\xFCtfen parolan\u0131z\u0131 yenileyin.",
        show: {
          change_my_password: "\u015Eifremi De\u011Fi\u015Ftir",
          current_password: "Mevcut \u015Eifre",
          new_password: "Yeni \u015Eifre",
          new_password_confirmation: "Yeni \u015Fifreyi onayla",
          renew_your_password: "\u015Eifrenizi yenileyin"
        },
        updated: "Yeni parolan\u0131z kaydedildi."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "kabul edilmeli",
        blank: "doldurulmal\u0131",
        confirmation: "%{attribute} teyidiyle uyu\u015Fmuyor",
        empty: "doldurulmal\u0131",
        equal_to: "tam olarak %{count} olmal\u0131",
        equal_to_current_password: "mevcut paroladan farkl\u0131 olmal\u0131.",
        equal_to_email: "e-postadan farkl\u0131 olmal\u0131.",
        even: "\xE7ift olmal\u0131",
        exclusion: "kullan\u0131lamaz",
        greater_than: "%{count} say\u0131s\u0131ndan b\xFCy\xFCk olmal\u0131",
        greater_than_or_equal_to: "%{count} say\u0131s\u0131na e\u015Fit veya b\xFCy\xFCk olmal\u0131",
        inclusion: "kabul edilen bir kelime de\u011Fil",
        invalid: "ge\xE7ersiz",
        less_than: "%{count} say\u0131s\u0131ndan k\xFC\xE7\xFCk olmal\u0131",
        less_than_or_equal_to: "%{count} say\u0131s\u0131na e\u015Fit veya k\xFC\xE7\xFCk olmal\u0131",
        model_invalid: "Do\u011Frulama ba\u015Far\u0131s\u0131z oldu: %{errors}",
        not_a_number: "ge\xE7erli bir say\u0131 de\u011Fil",
        not_an_integer: "tam say\u0131 olmal\u0131",
        odd: "tek olmal\u0131",
        other_than: "%{count} karakterden olu\u015Famaz",
        password_complexity: {
          digit: {
            one: "en az bir rakam i\xE7ermelidir",
            other: "en az %{count} basamak i\xE7ermelidir"
          },
          lower: {
            one: "en az bir k\xFC\xE7\xFCk harf i\xE7ermelidir",
            other: "en az %{count} k\xFC\xE7\xFCk harf i\xE7ermelidir"
          },
          symbol: {
            one: "en az bir noktalama i\u015Fareti veya sembol\xFC i\xE7ermelidir",
            other: "en az %{count} noktalama i\u015Fareti veya sembol\xFC i\xE7ermelidir"
          },
          upper: {
            one: "en az bir b\xFCy\xFCk harf i\xE7ermelidir",
            other: "en az %{count} b\xFCy\xFCk harf i\xE7ermelidir"
          }
        },
        present: "bo\u015F b\u0131rak\u0131lmal\u0131",
        required: "doldurulmal\u0131",
        taken: "hali haz\u0131rda kullan\u0131lmakta",
        taken_in_past: "daha \xF6nce kullan\u0131ld\u0131.",
        too_long: {
          one: "\xE7ok uzun (en fazla %{count} karakter)",
          other: "\xE7ok uzun (en fazla %{count} karakter)"
        },
        too_short: {
          one: "\xE7ok k\u0131sa (en az %{count} karakter)",
          other: "\xE7ok k\u0131sa (en az %{count} karakter)"
        },
        wrong_length: {
          one: "hatal\u0131 uzunlukta (%{count} karakter olmal\u0131)",
          other: "hatal\u0131 uzunlukta (%{count} karakter olmal\u0131)"
        }
      },
      template: {
        body: "L\xFCtfen a\u015Fa\u011F\u0131daki hatalar\u0131 d\xFCzeltiniz:",
        header: {
          one: "%{count} hata olu\u015Ftu\u011Fu i\xE7in %{model} kaydedilemedi",
          other: "%{count} hata olu\u015Ftu\u011Fu i\xE7in %{model} kaydedilemedi"
        }
      }
    },
    helpers: {
      select: {
        prompt: "L\xFCtfen se\xE7iniz"
      },
      submit: {
        create: "%{model} Ekle",
        submit: "%{model} Kaydet",
        update: "%{model} G\xFCncelle"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20BA"
        }
      },
      format: {
        delimiter: ".",
        precision: 2,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Milyar",
            million: "Milyon",
            quadrillion: "Katrilyon",
            thousand: "Bin",
            trillion: "Trilyon",
            unit: ""
          }
        },
        format: {
          delimiter: ".",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Bayt",
              other: "Bayt"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      nth: {
        ordinalized: "%{number}.",
        ordinals: "."
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%%n"
        }
      },
      precision: {
        format: {
          delimiter: "."
        }
      }
    },
    support: {
      array: {
        last_word_connector: " ve ",
        two_words_connector: " ve ",
        words_connector: ", "
      }
    },
    time: {
      am: "\xF6\u011Fleden \xF6nce",
      formats: {
        default: "%a %d.%b.%y %H:%M",
        long: "%e %B %Y, %A, %H:%M",
        short: "%e %B, %H:%M"
      },
      pm: "\xF6\u011Fleden sonra"
    }
  };
  var tt = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0425\u0430\u0442\u0430\u043B\u0430\u0440 \u0447\u044B\u043A\u0442\u044B: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u042F\u0437\u043C\u044B\u0448\u043D\u044B \u0431\u0435\u0442\u0435\u0440\u0435\u043F \u0431\u0443\u043B\u043C\u0430\u0434\u044B, \u0447\u04E9\u043D\u043A\u0438 \u0431\u04D9\u0439\u043B\u0435\u043B\u0435\u043A\u043B\u04D9\u0440 \u0442\u0430\u0431\u044B\u043B\u0434\u044B: %{record}",
            has_one: "\u042F\u0437\u043C\u044B\u0448\u043D\u044B \u0431\u0435\u0442\u0435\u0440\u0435\u043F \u0431\u0443\u043B\u043C\u0430\u0434\u044B, \u0447\u04E9\u043D\u043A\u0438 \u0431\u04D9\u0439\u043B\u0435\u043B\u0435\u043A \u0442\u0430\u0431\u044B\u043B\u0434\u044B: %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u042F\u043A\u0448",
        "\u0414\u04AF\u0448",
        "\u0421\u0438\u0448",
        "\u0427\u04D9\u0440",
        "\u041F\u04D9\u043D",
        "\u0496\u043E\u043C",
        "\u0428\u0438\u043C"
      ],
      abbr_month_names: [
        null,
        "\u0433\u044B\u0439\u043D.",
        "\u0444\u0435\u0432\u0440.",
        "\u043C\u0430\u0440\u0442",
        "\u0430\u043F\u0440.",
        "\u043C\u0430\u0439",
        "\u0438\u044E\u043D\u044C",
        "\u0438\u044E\u043B\u044C",
        "\u0430\u0432\u0433.",
        "\u0441\u0435\u043D\u0442.",
        "\u043E\u043A\u0442.",
        "\u043D\u043E\u044F\u0431.",
        "\u0434\u0435\u043A."
      ],
      day_names: [
        "\u044F\u043A\u0448\u04D9\u043C\u0431\u0435",
        "\u0434\u04AF\u0448\u04D9\u043C\u0431\u0435",
        "\u0441\u0438\u0448\u04D9\u043C\u0431\u0435",
        "\u0447\u04D9\u0440\u0448\u04D9\u043C\u0431\u0435",
        "\u043F\u04D9\u043D\u0497\u0435\u0448\u04D9\u043C\u0431\u0435",
        "\u0497\u043E\u043C\u0433\u0430",
        "\u0448\u0438\u043C\u0431\u04D9"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%-d %B %Y",
        short: "%-d %b"
      },
      month_names: [
        null,
        "\u0433\u044B\u0439\u043D\u0432\u0430\u0440",
        "\u0444\u0435\u0432\u0440\u0430\u043B\u044C",
        "\u043C\u0430\u0440\u0442",
        "\u0430\u043F\u0440\u0435\u043B\u044C",
        "\u043C\u0430\u0439",
        "\u0438\u044E\u043D\u044C",
        "\u0438\u044E\u043B\u044C",
        "\u0430\u0432\u0433\u0443\u0441\u0442",
        "\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044C",
        "\u043E\u043A\u0442\u044F\u0431\u0440\u044C",
        "\u043D\u043E\u044F\u0431\u0440\u044C",
        "\u0434\u0435\u043A\u0430\u0431\u0440\u044C"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u0431\u0435\u0440 \u0441\u04D9\u0433\u0430\u0442\u044C \u0447\u0430\u043C\u0430\u0441\u044B",
          other: "%{count} \u0441\u04D9\u0433\u0430\u0442\u044C \u0447\u0430\u043C\u0430\u0441\u044B"
        },
        about_x_months: {
          one: "\u0431\u0435\u0440 \u0430\u0439 \u0447\u0430\u043C\u0430\u0441\u044B",
          other: "%{count} \u0430\u0439 \u0447\u0430\u043C\u0430\u0441\u044B"
        },
        about_x_years: {
          one: "\u0431\u0435\u0440 \u0435\u043B \u0447\u0430\u043C\u0430\u0441\u044B",
          other: "%{count} \u0435\u043B \u0447\u0430\u043C\u0430\u0441\u044B"
        },
        almost_x_years: {
          one: "\u0431\u0435\u0440 \u0435\u043B \u0434\u0438\u044F\u0440\u043B\u0435\u043A",
          other: "%{count} \u0435\u043B \u0434\u0438\u044F\u0440\u043B\u0435\u043A"
        },
        half_a_minute: "\u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\u0440\u0430\u043A",
        less_than_x_minutes: {
          one: "\u0431\u0435\u0440 \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\u0440\u0430\u043A",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\u0440\u0430\u043A"
        },
        less_than_x_seconds: {
          one: "\u0431\u0435\u0440 \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\u0440\u0430\u043A",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\u0440\u0430\u043A"
        },
        over_x_years: {
          one: "\u0431\u0435\u0440 \u0435\u043B \u0430\u0440\u0442\u044B\u043A",
          other: "%{count} \u0435\u043B \u0430\u0440\u0442\u044B\u043A"
        },
        x_days: {
          one: "\u0431\u0435\u0440 \u043A\u04E9\u043D",
          other: "%{count} \u043A\u04E9\u043D"
        },
        x_minutes: {
          one: "\u0431\u0435\u0440 \u043C\u0438\u043D\u0443\u0442",
          other: "%{count} \u043C\u0438\u043D\u0443\u0442"
        },
        x_months: {
          one: "\u0431\u0435\u0440 \u0430\u0439",
          other: "%{count} \u0430\u0439"
        },
        x_seconds: {
          one: "\u0431\u0435\u0440 \u0441\u0435\u043A\u0443\u043D\u0434",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434"
        }
      },
      prompts: {
        day: "\u041A\u04E9\u043D",
        hour: "\u0421\u04D9\u0433\u0430\u0442\u044C",
        minute: "\u041C\u0438\u043D\u0443\u0442",
        month: "\u0410\u0439",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434",
        year: "\u0415\u043B"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0440\u0430\u0441\u043B\u0430\u0443 \u043A\u0438\u0440\u04D9\u043A",
        blank: "\u0431\u0443\u0448 \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439",
        confirmation: "%{attribute} \u0447\u0438\u0442\u043D\u0435\u04A3 \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435 \u0431\u0435\u043B\u04D9\u043D \u0442\u0438\u0433\u0435\u0437 \u0442\u04AF\u0433\u0435\u043B",
        empty: "\u0431\u0443\u0448 \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439",
        equal_to: "\u043C\u04D9\u0433\u043D\u04D9\u0441\u0435 %{count} \u0431\u0443\u043B\u0430 \u0433\u044B\u043D\u0430 \u0430\u043B\u0430",
        even: "\u0442\u0430\u043A \u043A\u044B\u043D\u0430 \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        exclusion: "\u0440\u0435\u0437\u0435\u0440\u0432\u0442\u0430 \u0441\u0430\u043A\u043B\u0430\u0443 \u0434\u0438\u0433\u04D9\u043D \u04D9\u04BB\u04D9\u043C\u0438\u044F\u0442\u0435 \u0431\u0430\u0440",
        greater_than: "%{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u0437\u0443\u0440 \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        greater_than_or_equal_to: "%{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u0437\u0443\u0440 \u044F\u043A\u0438 \u0442\u0438\u0433\u0435\u0437 \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        inclusion: "\u043C\u04D9\u0433\u043D\u04D9\u0441\u0435 \u0430\u043B\u0434\u0430\u043D \u0438\u0441\u04D9\u043F\u043A\u04D9 \u0430\u043B\u044B\u043D\u0433\u0430\u043D \u0442\u04AF\u0433\u0435\u043B",
        invalid: "\u043C\u04D9\u0433\u043D\u04D9\u0441\u0435 \u044F\u043B\u0433\u044B\u0448",
        less_than: "%{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u0430\u0437\u0440\u0430\u043A \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        less_than_or_equal_to: "%{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u0430\u0437\u0440\u0430\u043A \u044F\u043A\u0438 \u0442\u0438\u0433\u0435\u0437 \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        not_a_number: "\u0441\u0430\u043D \u0442\u0443\u0433\u0435\u043B",
        not_an_integer: "\u0431\u04E9\u0442\u0435\u043D \u0441\u0430\u043D \u0442\u04AF\u0433\u0435\u043B",
        odd: "\u0497\u04E9\u043F \u043A\u0435\u043D\u04D9 \u0431\u0443\u043B\u0430 \u0430\u043B\u0430",
        other_than: "%{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u0438\u043A\u0435\u043D\u0447\u0435 \u0431\u0443\u043B\u044B\u0440\u0433\u0430 \u0442\u0438\u0435\u0448",
        present: "\u0431\u0443\u0448 \u0431\u0443\u043B\u044B\u0440\u0433\u0430 \u0442\u0438\u0435\u0448",
        taken: "\u0431\u0430\u0440 \u0438\u043D\u0434\u0435",
        too_long: {
          one: "\u0431\u0438\u0433\u0440\u04D9\u043A \u043E\u0437\u044B\u043D (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B \u0431\u0435\u0440\u0434\u04D9\u043D \u043E\u0437\u044B\u043D\u0440\u0430\u043A \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439)",
          other: "\u0431\u0438\u0433\u0440\u04D9\u043A \u043E\u0437\u044B\u043D (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B %{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u043E\u0437\u044B\u043D\u0440\u0430\u043A \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439)"
        },
        too_short: {
          one: "\u0431\u0438\u0433\u0440\u04D9\u043A \u043A\u044B\u0441\u043A\u0430 (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B \u0431\u0435\u0440\u0434\u04D9\u043D \u043A\u044B\u0441\u043A\u0430\u0440\u0430\u043A \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439)",
          other: "\u0431\u0438\u0433\u0440\u04D9\u043A \u043A\u044B\u0441\u043A\u0430 (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B %{count} \u043C\u04D9\u0433\u043D\u04D9\u0441\u0435\u043D\u043D\u04D9\u043D \u043A\u044B\u0441\u043A\u0430\u0440\u0430\u043A \u0431\u0443\u043B\u0430 \u0430\u043B\u043C\u044B\u0439)"
        },
        wrong_length: {
          one: "\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B \u044F\u043B\u0433\u044B\u0448 (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B \u0431\u0435\u0440\u0433\u04D9 \u0442\u0438\u0433\u0435\u0437 \u0431\u0443\u043B\u044B\u0440\u0433\u0430 \u0442\u0438\u0435\u0448)",
          other: "\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B \u044F\u043B\u0433\u044B\u0448 (\u043E\u0437\u044B\u043D\u043B\u044B\u0433\u044B %{count} \u043C\u04D9\u0433\u043D\u04D9\u0433\u04D9 \u0442\u0438\u0433\u0435\u0437 \u0431\u0443\u043B\u044B\u0440\u0433\u0430 \u0442\u0438\u0435\u0448)"
        }
      },
      template: {
        body: ":",
        header: {
          one: "%{model}: %{count} \u0445\u0430\u0442\u0430 \u0430\u0440\u043A\u0430\u0441\u044B\u043D\u0434\u0430 \u0441\u0430\u043A\u043B\u0430\u0443 \u0447\u044B\u043A\u043C\u0430\u0434\u044B",
          other: "%{model}: %{count} \u0445\u0430\u0442\u0430 \u0430\u0440\u043A\u0430\u0441\u044B\u043D\u0434\u0430 \u0441\u0430\u043A\u043B\u0430\u0443 \u0447\u044B\u043A\u043C\u0430\u0434\u044B"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0421\u0430\u0439\u043B\u0430\u0433\u044B\u0437: "
      },
      submit: {
        create: "%{model} \u0438\u0497\u0430\u0442 \u0438\u0442\u0435\u0440\u0433\u04D9",
        submit: "%{model} \u0441\u0430\u043A\u043B\u0430\u043F \u043A\u0430\u043B\u044B\u0440\u0433\u0430",
        update: "%{model} \u0441\u0430\u043A\u043B\u0430\u043F \u043A\u0430\u043B\u044B\u0440\u0433\u0430"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u0441\u0443\u043C"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              one: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434",
              other: "\u043C\u0438\u043B\u043B\u0438\u0430\u0440\u0434"
            },
            million: {
              one: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043C\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            quadrillion: {
              one: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u043A\u0432\u0430\u0434\u0440\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            thousand: {
              one: "\u043C\u0435\u04A3",
              other: "\u043C\u0435\u04A3"
            },
            trillion: {
              one: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D",
              other: "\u0442\u0440\u0438\u043B\u043B\u0438\u043E\u043D"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0431\u0430\u0439\u0442",
              other: "\u0431\u0430\u0439\u0442"
            },
            gb: "\u0413\u0411",
            kb: "\u041A\u0411",
            mb: "\u041C\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u04BB\u04D9\u043C ",
        two_words_connector: " \u04BB\u04D9\u043C ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0438\u0440\u0442\u04D9\u043D\u0433\u0435",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u043A\u0438\u0447\u043A\u0435"
    }
  };
  var ug = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "%{errors} \u062F\u0627 \u062E\u0627\u062A\u0627\u0644\u0649\u0642 \u0628\u0627\u0631",
          restrict_dependent_destroy: {
            has_many: "%{record} \u0628\u06C7 \u0645\u06D5\u0644\u06C7\u0645\u0627\u062A\u0646\u0649 \u0626\u0649\u0634\u0644\u0649\u062A\u0649\u062F\u06C7\u060C \u0634\u06C7\u06AD\u0627 \u0626\u06C6\u0686\u06C8\u0631\u06AF\u0649\u0644\u0649 \u0628\u0648\u0644\u0645\u0627\u064A\u062F\u06C7",
            has_one: "%{record} \u0628\u06C7 \u0645\u06D5\u0644\u06C7\u0645\u0627\u062A\u0646\u0649 \u0626\u0649\u0634\u0644\u0649\u062A\u0649\u062F\u06C7\u060C \u0634\u06C7\u06AD\u0627 \u0626\u06C6\u0686\u06C8\u0631\u06AF\u0649\u0644\u0649 \u0628\u0648\u0644\u0645\u0627\u064A\u062F\u06C7"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5",
        "\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5",
        "\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        "\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5",
        "\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        "\u062C\u06C8\u0645\u06D5",
        "\u0634\u06D5\u0646\u0628\u06D5"
      ],
      abbr_month_names: [
        null,
        "\u064A\u0627\u0646\u06CB\u0627\u0631",
        "\u0641\u06D0\u06CB\u0631\u0627\u0644",
        "\u0645\u0627\u0631\u062A",
        "\u0626\u0627\u067E\u0631\u06D0\u0644",
        "\u0645\u0627\u064A",
        "\u0626\u0649\u064A\u06C7\u0646",
        "\u0626\u0649\u064A\u06C7\u0644",
        "\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A",
        "\u0633\u06D0\u0646\u062A\u06D5\u0628\u0649\u0631",
        "\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631",
        "\u0646\u0648\u064A\u0627\u0628\u0649\u0631",
        "\u062F\u06D0\u0643\u0627\u0628\u0649\u0631"
      ],
      day_names: [
        "\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5",
        "\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5",
        "\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        "\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5",
        "\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        "\u062C\u06C8\u0645\u06D5",
        "\u0634\u06D5\u0646\u0628\u06D5"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y-%m-%d",
        short: "%b%d"
      },
      month_names: [
        null,
        "\u064A\u0627\u0646\u06CB\u0627\u0631",
        "\u0641\u06D0\u06CB\u0631\u0627\u0644",
        "\u0645\u0627\u0631\u062A",
        "\u0626\u0627\u067E\u0631\u06D0\u0644",
        "\u0645\u0627\u064A",
        "\u0626\u0649\u064A\u06C7\u0646",
        "\u0626\u0649\u064A\u06C7\u0644",
        "\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A",
        "\u0633\u06D0\u0646\u062A\u06D5\u0628\u0649\u0631",
        "\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631",
        "\u0646\u0648\u064A\u0627\u0628\u0649\u0631",
        "\u062F\u06D0\u0643\u0627\u0628\u0649\u0631"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u0633\u0627\u0626\u06D5\u062A",
          other: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 %{count} \u0633\u0627\u0626\u06D5\u062A"
        },
        about_x_months: {
          one: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u0626\u0627\u064A",
          other: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 %{count} \u0626\u0627\u064A"
        },
        about_x_years: {
          one: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u064A\u0649\u0644",
          other: "\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 %{count} \u064A\u0649\u0644"
        },
        almost_x_years: {
          one: "\u0628\u0649\u0631 \u064A\u0649\u0644\u063A\u0627 \u064A\u06D0\u0642\u0649\u0646",
          other: "%{count} \u064A\u0649\u0644\u063A\u0627 \u064A\u06D0\u0642\u0649\u0646"
        },
        half_a_minute: "\u064A\u06D0\u0631\u0649\u0645 \u0645\u0649\u0646\u06C7\u062A",
        less_than_x_minutes: {
          one: "\u0628\u0649\u0631 \u0645\u0649\u0646\u06C7\u062A\u0642\u0627 \u064A\u06D5\u062A\u0645\u0649\u06AF\u06D5\u0646",
          other: "%{count} \u0645\u0649\u0646\u06C7\u062A\u0642\u0627 \u064A\u06D5\u062A\u0645\u0649\u06AF\u06D5\u0646"
        },
        less_than_x_seconds: {
          one: "\u0628\u0649\u0631 \u0633\u0649\u0643\u06C7\u0646\u062A\u0642\u0627 \u064A\u06D5\u062A\u0645\u0649\u06AF\u06D5\u0646",
          other: "%{count} \u0633\u0649\u0643\u0646\u06C7\u062A\u0642\u0627"
        },
        over_x_years: {
          one: "\u0628\u0649\u0631 \u064A\u0649\u0644\u062F\u0649\u0646 \u0626\u0627\u0631\u062A\u06C7\u0642",
          other: "%{count} \u064A\u0649\u0644\u062F\u0649\u0646 \u0626\u0627\u0631\u062A\u06C7\u0642"
        },
        x_days: {
          one: "\u0628\u0649\u0631 \u0643\u06C8\u0646",
          other: "%{count} \u0643\u06C8\u0646"
        },
        x_minutes: {
          one: "\u0628\u0649\u0631 \u0645\u0649\u0646\u06C7\u062A",
          other: "%{count} \u0645\u0649\u0646\u06C7\u062A"
        },
        x_months: {
          one: "\u0628\u0649\u0631 \u0626\u0627\u064A",
          other: "%{count} \u0626\u0627\u064A"
        },
        x_seconds: {
          one: "\u0628\u0649\u0631 \u0633\u0649\u0643\u0646\u06C7\u062A",
          other: "%{count} \u0633\u0649\u0643\u0646\u06C7\u062A"
        }
      },
      prompts: {
        day: "\u0643\u06C8\u0646",
        hour: "\u0633\u0627\u0626\u06D5\u062A",
        minute: "\u0645\u0649\u0646\u06C7\u062A",
        month: "\u0626\u0627\u064A",
        second: "\u0633\u0649\u0643\u0646\u06C7\u062A",
        year: "\u064A\u0649\u0644"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u062A\u06D5\u0633\u062A\u0649\u0642\u0644\u0627\u0634 \u0643\u06D0\u0631\u06D5\u0643",
        blank: "\u0628\u0648\u0634 \u0628\u0648\u0644\u0645\u0627\u0633\u0644\u0649\u0642\u0649 \u0643\u06D0\u0631\u06D5\u0643",
        confirmation: "\u062A\u06D5\u0633\u062A\u0649\u0642 \u0628\u0649\u0644\u06D5\u0646 \u0645\u0627\u0633 \u0626\u06D5\u0645\u06D5\u0633",
        empty: "\u0628\u0648\u0634 \u0628\u0648\u0644\u0645\u0627\u0633\u0644\u0649\u0642\u0649 \u0643\u06D0\u0631\u06D5\u0643",
        equal_to: "%{count} \u063A\u0627 \u062A\u06D5\u06AD",
        even: "\u062C\u06C8\u067E \u0633\u0627\u0646",
        exclusion: "\u0645\u06C7\u0645\u0643\u0649\u0646 \u0626\u06D5\u0645\u06D5\u0633",
        greater_than: "%{count} \u062F\u0649\u0646 \u0686\u0648\u06AD",
        greater_than_or_equal_to: "%{count} \u062F\u0649\u0646 \u0686\u0648\u06AD \u064A\u0627\u0643\u0649 \u062A\u06D5\u06AD",
        inclusion: "\u0643\u06C8\u062A\u0649\u0644\u0645\u0649\u06AF\u06D5\u0646 \u0646\u06D5\u062A\u0649\u062C\u06D5",
        invalid: "\u0626\u0649\u0646\u0627\u06CB\u06D5\u062A\u0633\u0649\u0632",
        less_than: "%{count} \u062F\u0649\u0646 \u0643\u0649\u0686\u0649\u0643",
        less_than_or_equal_to: "%{count} \u062F\u0649\u0646 \u0643\u0649\u0686\u0649\u0643 \u064A\u0627\u0643\u0649 \u062A\u06D5\u06AD",
        not_a_number: "\u0633\u0627\u0646 \u0626\u06D5\u0645\u06D5\u0633",
        not_an_integer: "\u067E\u06C8\u062A\u06C8\u0646 \u0633\u0627\u0646 \u0626\u06D5\u0645\u06D5\u0633",
        odd: "\u062A\u0627\u0642 \u0633\u0627\u0646",
        other_than: "\u0626\u0649\u0646\u0627\u06CB\u06D5\u062A\u0633\u0649\u0632 \u0626\u06C7\u0632\u06C7\u0646\u0644\u06C7\u0642 (%{count} \u06BE\u06D5\u0631\u0649\u067E \u0628\u0648\u0644\u0645\u0627\u0633\u0644\u0649\u0642\u0649 \u0643\u06D0\u0631\u06D5\u0643)",
        present: "\u0628\u0648\u0634 \u0628\u0648\u0644\u0649\u0634\u0649 \u0643\u06D0\u0631\u06D5\u0643",
        taken: "\u0626\u0649\u0634\u0644\u0649\u062A\u0649\u067E \u0628\u0648\u0644\u06C7\u0646\u063A\u0627\u0646",
        too_long: {
          one: "\u0628\u06D5\u0643 \u0626\u06C7\u0632\u06C7\u0646 (\u0628\u0649\u0631 \u06BE\u06D5\u0631\u0649\u067E)",
          other: "\u0628\u06D5\u0643 \u0626\u06C7\u0632\u06C7\u0646 (\u0626\u06D5\u06AD \u0626\u06C7\u0632\u06C7\u0646 \u0628\u0648\u0644\u063A\u0627\u0646\u062F\u0627 %{count} \u06BE\u06D5\u0631\u0649\u067E)"
        },
        too_short: {
          one: "\u0628\u06D5\u0643 \u0642\u0649\u0633\u0642\u0627 (\u0628\u0649\u0631 \u06BE\u06D5\u0631\u0649\u067E)",
          other: "\u0628\u06D5\u0643 \u0642\u0649\u0633\u0642\u0627 (\u0626\u06D5\u06AD \u0642\u0649\u0633\u0642\u0627 \u0628\u0648\u0644\u063A\u0627\u0646\u062F\u0627 %{count} \u06BE\u06D5\u0631\u0649\u067E)"
        },
        wrong_length: {
          one: "\u0626\u0649\u0646\u0627\u06CB\u06D5\u062A\u0633\u0649\u0632 \u0626\u06C7\u0632\u06C7\u0646\u0644\u06C7\u0642 (\u0628\u0649\u0631 \u06BE\u06D5\u0631\u0649\u067E)",
          other: "\u0626\u0649\u0646\u0627\u06CB\u06D5\u062A\u0633\u0649\u0632 \u0626\u06C7\u0632\u06C7\u0646\u0644\u06C7\u0642 (\u0686\u0648\u0642\u06C7\u0645 %{count} \u06BE\u06D5\u0631\u0649\u067E)"
        }
      },
      template: {
        body: "\u062A\u06C6\u06CB\u06D5\u0646\u062F\u0649\u0643\u0649 \u0633\u06C6\u0632 \u0628\u06C6\u0644\u06D5\u0643\u0644\u0649\u0631\u0649\u062F\u06D5 \u062E\u0627\u062A\u0627\u0644\u0649\u0642 \u0628\u0627\u0631",
        header: {
          one: "\u0628\u0649\u0631 \u062E\u0627\u062A\u0627\u0644\u0649\u0642 \u062A\u06C8\u067E\u06D5\u064A\u0644\u0649\u062F\u0649\u0646 \u300C%{model}\u300D \u0633\u0627\u0642\u0644\u0627\u0634 \u0645\u06D5\u063A\u0644\u06C7\u0628 \u0628\u0648\u0644\u062F\u0649",
          other: "%{count} \u062E\u0627\u062A\u0627\u0644\u0649\u0642 \u062A\u06C8\u067E\u06D5\u064A\u0644\u0649\u062F\u0649\u0646 \u300C%{model}\u300D\u0633\u0627\u0642\u0644\u0627\u0634 \u0645\u06D5\u063A\u0644\u06C7\u0628 \u0628\u0648\u0644\u062F\u0649"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u062A\u0627\u0644\u0644\u0627\u06AD"
      },
      submit: {
        create: "%{model} \u0642\u0648\u0634\u06C7\u0634",
        submit: "%{model} \u0633\u0627\u0642\u0644\u0627\u0634",
        update: "%{model} \u064A\u06D0\u06AD\u0649\u0644\u0627\u0634"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "CN\xA5"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0645\u0649\u0644\u064A\u0627\u0631\u062F",
            million: "\u0645\u0649\u0644\u064A\u0648\u0646",
            quadrillion: "\u06AF\u06D0\u06AF\u0627\u0628\u0627\u064A\u062A",
            thousand: "\u0645\u0649\u06AD",
            trillion: "\u0645\u06D0\u06AF\u0627",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u0628\u0627\u064A\u062A",
              other: "\u0628\u0627\u064A\u062A"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u06CB\u06D5 ",
        two_words_connector: " \u06CB\u06D5 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0686\u06C8\u0634\u062A\u0649\u0646 \u0628\u06C7\u0631\u06C7\u0646",
      formats: {
        default: "%Y %b %d %A %H:%M:%S %Z",
        long: "%Y %b %d %H:%M",
        short: "%b %d %H:%M"
      },
      pm: "\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u06D0\u064A\u0649\u0646"
    }
  };
  var uk = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u0412\u0438\u043D\u0438\u043A\u043B\u0438 \u043F\u043E\u043C\u0438\u043B\u043A\u0438: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u041D\u0435\u043C\u043E\u0436\u043B\u0438\u0432\u043E \u0432\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0437\u0430\u043F\u0438\u0441, \u0442\u0430\u043A \u044F\u043A \u0456\u0441\u043D\u0443\u044E\u0442\u044C \u0437\u0430\u043B\u0435\u0436\u043D\u043E\u0441\u0442\u0456: %{record}",
            has_one: "\u041D\u0435\u043C\u043E\u0436\u043B\u0438\u0432\u043E \u0432\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0437\u0430\u043F\u0438\u0441, \u0442\u0430\u043A \u044F\u043A \u0456\u0441\u043D\u0443\u0454 \u0437\u0430\u043B\u0435\u0436\u043D\u0456\u0441\u0442\u044C: %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u043D\u0434.",
        "\u043F\u043D.",
        "\u0432\u0442.",
        "\u0441\u0440.",
        "\u0447\u0442.",
        "\u043F\u0442.",
        "\u0441\u0431."
      ],
      abbr_month_names: [
        null,
        "\u0441\u0456\u0447.",
        "\u043B\u044E\u0442.",
        "\u0431\u0435\u0440.",
        "\u043A\u0432\u0456\u0442.",
        "\u0442\u0440\u0430\u0432.",
        "\u0447\u0435\u0440\u0432.",
        "\u043B\u0438\u043F.",
        "\u0441\u0435\u0440\u043F.",
        "\u0432\u0435\u0440.",
        "\u0436\u043E\u0432\u0442.",
        "\u043B\u0438\u0441\u0442.",
        "\u0433\u0440\u0443\u0434."
      ],
      day_names: [
        "\u043D\u0435\u0434\u0456\u043B\u044F",
        "\u043F\u043E\u043D\u0435\u0434\u0456\u043B\u043E\u043A",
        "\u0432\u0456\u0432\u0442\u043E\u0440\u043E\u043A",
        "\u0441\u0435\u0440\u0435\u0434\u0430",
        "\u0447\u0435\u0442\u0432\u0435\u0440",
        "\u043F'\u044F\u0442\u043D\u0438\u0446\u044F",
        "\u0441\u0443\u0431\u043E\u0442\u0430"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u0421\u0456\u0447\u043D\u044F",
        "\u041B\u044E\u0442\u043E\u0433\u043E",
        "\u0411\u0435\u0440\u0435\u0437\u043D\u044F",
        "\u041A\u0432\u0456\u0442\u043D\u044F",
        "\u0422\u0440\u0430\u0432\u043D\u044F",
        "\u0427\u0435\u0440\u0432\u043D\u044F",
        "\u041B\u0438\u043F\u043D\u044F",
        "\u0421\u0435\u0440\u043F\u043D\u044F",
        "\u0412\u0435\u0440\u0435\u0441\u043D\u044F",
        "\u0416\u043E\u0432\u0442\u043D\u044F",
        "\u041B\u0438\u0441\u0442\u043E\u043F\u0430\u0434\u0430",
        "\u0413\u0440\u0443\u0434\u043D\u044F"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D",
          many: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D",
          one: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0438",
          other: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0433\u043E\u0434\u0438\u043D\u0438"
        },
        about_x_months: {
          few: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u043C\u0456\u0441\u044F\u0446\u0456\u0432",
          many: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u043C\u0456\u0441\u044F\u0446\u0456\u0432",
          one: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u043C\u0456\u0441\u044F\u0446\u044F",
          other: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u043C\u0456\u0441\u044F\u0446\u044F"
        },
        about_x_years: {
          few: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0440\u043E\u043A\u0456\u0432",
          many: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0440\u043E\u043A\u0456\u0432",
          one: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0440\u043E\u043A\u0443",
          other: "\u0431\u043B\u0438\u0437\u044C\u043A\u043E %{count} \u0440\u043E\u043A\u0443"
        },
        almost_x_years: {
          few: "\u043C\u0430\u0439\u0436\u0435 %{count} \u0440\u043E\u043A\u0438",
          many: "\u043C\u0430\u0439\u0436\u0435 %{count} \u0440\u043E\u043A\u0456\u0432",
          one: "\u043C\u0430\u0439\u0436\u0435 %{count} \u0440\u0456\u043A",
          other: "\u043C\u0430\u0439\u0436\u0435 %{count} \u0440\u043E\u043A\u0456\u0432"
        },
        half_a_minute: "\u043F\u0456\u0432 \u0445\u0432\u0438\u043B\u0438\u043D\u0438",
        less_than_x_minutes: {
          few: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0445\u0432\u0438\u043B\u0438\u043D",
          many: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0445\u0432\u0438\u043B\u0438\u043D",
          one: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0445\u0432\u0438\u043B\u0438\u043D\u0438",
          other: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0445\u0432\u0438\u043B\u0438\u043D\u0438"
        },
        less_than_x_seconds: {
          few: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          many: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438",
          other: "\u043C\u0435\u043D\u0448\u0435 %{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        },
        over_x_years: {
          few: "\u0431\u0456\u043B\u044C\u0448\u0435 %{count} \u0440\u043E\u043A\u0456\u0432",
          many: "\u0431\u0456\u043B\u044C\u0448\u0435 %{count} \u0440\u043E\u043A\u0456\u0432",
          one: "\u0431\u0456\u043B\u044C\u0448\u0435 %{count} \u0440\u043E\u043A\u0443",
          other: "\u0431\u0456\u043B\u044C\u0448\u0435 %{count} \u0440\u043E\u043A\u0443"
        },
        x_days: {
          few: "%{count} \u0434\u043D\u0456",
          many: "%{count} \u0434\u043D\u0456\u0432",
          one: "%{count} \u0434\u0435\u043D\u044C",
          other: "%{count} \u0434\u043D\u044F"
        },
        x_minutes: {
          few: "%{count} \u0445\u0432\u0438\u043B\u0438\u043D\u0438",
          many: "%{count} \u0445\u0432\u0438\u043B\u0438\u043D",
          one: "%{count} \u0445\u0432\u0438\u043B\u0438\u043D\u0430",
          other: "%{count} \u0445\u0432\u0438\u043B\u0438\u043D\u0438"
        },
        x_months: {
          few: "%{count} \u043C\u0456\u0441\u044F\u0446\u0456",
          many: "%{count} \u043C\u0456\u0441\u044F\u0446\u0456\u0432",
          one: "%{count} \u043C\u0456\u0441\u044F\u0446\u044C",
          other: "%{count} \u043C\u0456\u0441\u044F\u0446\u044F"
        },
        x_seconds: {
          few: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438",
          many: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434",
          one: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0430",
          other: "%{count} \u0441\u0435\u043A\u0443\u043D\u0434\u0438"
        },
        x_years: {
          few: "%{count} \u0440\u043E\u043A\u0438",
          many: "%{count} \u0440\u043E\u043A\u0456\u0432",
          one: "%{count} \u0440\u0456\u043A",
          other: "%{count} \u0440\u043E\u043A\u0443"
        }
      },
      prompts: {
        day: "\u0414\u0435\u043D\u044C",
        hour: "\u0413\u043E\u0434\u0438\u043D\u0430",
        minute: "\u0425\u0432\u0438\u043B\u0438\u043D\u0430",
        month: "\u041C\u0456\u0441\u044F\u0446\u044C",
        second: "\u0421\u0435\u043A\u0443\u043D\u0434\u0430",
        year: "\u0420\u0456\u043A"
      }
    },
    devise: {
      failure: {
        expired: "\u0412\u0430\u0448 \u0430\u043A\u043A\u0430\u0443\u043D\u0442 \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u0432 \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u0456\u0441\u0442\u044C. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0437\u0432'\u044F\u0436\u0456\u0442\u044C\u0441\u044F \u0437 \u0430\u0434\u043C\u0456\u043D\u0456\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u043E\u043C.",
        session_limited: "\u0412\u0430\u0448\u0456 \u043E\u0431\u043B\u0456\u043A\u043E\u0432\u0456 \u0434\u0430\u043D\u0456 \u0431\u0443\u043B\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u0456 \u0432 \u0456\u043D\u0448\u043E\u043C\u0443 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0456. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0443\u0439\u0442\u0435\u0441\u044C \u0437\u043D\u043E\u0432\u0443 \u0449\u043E\u0431 \u043F\u0440\u043E\u0434\u043E\u0432\u0436\u0438\u0442\u0438 \u0432 \u0446\u044C\u043E\u043C\u0443 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0456."
      },
      invalid_captcha: "\u0412\u0432\u0435\u0434\u0435\u043D\u043D\u044F \u043A\u0430\u043F\u0447\u0456 \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0435.",
      invalid_security_question: "\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u044C \u043D\u0430 \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u0435 \u043F\u0438\u0442\u0430\u043D\u043D\u044F.",
      paranoid_verification_code: {
        show: {
          submit: "\u0412\u0456\u0434\u043F\u0440\u0430\u0432\u0438\u0442\u0438",
          submit_verification_code: "\u0412\u0456\u0434\u043F\u0440\u0430\u0432\u0438\u0442\u0438 \u043A\u043E\u0434 \u043F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043D\u043D\u044F",
          verification_code: "\u041A\u043E\u0434 \u043F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043D\u043D\u044F"
        },
        updated: "\u041A\u043E\u0434 \u043F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043D\u043D\u044F \u043F\u0440\u0438\u0439\u043D\u044F\u0442\u043E"
      },
      paranoid_verify: {
        code_required: "\u0412\u0432\u0435\u0434\u0456\u0442\u044C, \u0431\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043A\u043E\u0434 \u0432\u0456\u0434 \u043D\u0430\u0448\u043E\u0457 \u043A\u043E\u043C\u0430\u043D\u0434\u0438 \u043F\u0456\u0434\u0442\u0440\u0438\u043C\u043A\u0438"
      },
      password_expired: {
        change_required: "\u0412\u0430\u0448 \u043F\u0430\u0440\u043E\u043B\u044C \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u043B\u0438\u0439. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u043D\u043E\u0432\u0456\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044C.",
        show: {
          change_my_password: "\u0417\u043C\u0456\u043D\u0438\u0442\u0438 \u043F\u0430\u0440\u043E\u043B\u044C",
          current_password: "\u0422\u0435\u043F\u0435\u0440\u0456\u0448\u043D\u0456\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password: "\u041D\u043E\u0432\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          new_password_confirmation: "\u041F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C",
          renew_your_password: "\u041E\u043D\u043E\u0432\u0438\u0442\u0438 \u0441\u0432\u0456\u0439 \u043F\u0430\u0440\u043E\u043B\u044C"
        },
        updated: "\u0412\u0430\u0448 \u043D\u043E\u0432\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043E."
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u0440\u0438\u0439\u043D\u044F\u0442\u0438\u0439",
        blank: "\u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u043F\u0443\u0441\u0442\u0438\u043C",
        confirmation: "\u043D\u0435 \u0437\u0431\u0456\u0433\u0430\u0454\u0442\u044C\u0441\u044F \u0437 \u043F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043D\u043D\u044F\u043C",
        empty: "\u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u043F\u043E\u0440\u043E\u0436\u043D\u0456\u043C",
        equal_to: "\u043C\u0430\u0454 \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 %{count}",
        equal_to_current_password: "\u043C\u0430\u0454 \u0432\u0456\u0434\u0440\u0456\u0437\u043D\u044F\u0442\u0438\u0441\u044F \u0432\u0456\u0434 \u043F\u043E\u0442\u043E\u0447\u043D\u043E\u0433\u043E \u043F\u0430\u0440\u043E\u043B\u044E.",
        equal_to_email: "\u043C\u0430\u0454 \u0432\u0456\u0434\u0440\u0456\u0437\u043D\u044F\u0442\u0438\u0441\u044F \u0432\u0456\u0434 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0457 \u043F\u043E\u0448\u0442\u0438.",
        even: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u0430\u0440\u043D\u0438\u043C",
        exclusion: "\u0437\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u043E\u0432\u0430\u043D\u043E",
        greater_than: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043B\u044C\u0448\u0435 \u043D\u0456\u0436 %{count}",
        greater_than_or_equal_to: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043B\u044C\u0448\u0435 \u043D\u0456\u0436 \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 %{count}",
        inclusion: "\u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u043E \u0434\u043E \u043F\u0435\u0440\u0435\u043B\u0456\u043A\u0443",
        invalid: "\u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0438\u0439",
        less_than: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043C\u0435\u043D\u0448\u0435 \u043D\u0456\u0436 %{count}",
        less_than_or_equal_to: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043C\u0435\u043D\u0448\u0435 \u043D\u0456\u0436 \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 %{count}",
        model_invalid: "\u0412\u0438\u043D\u0438\u043A\u043B\u0438 \u043F\u043E\u043C\u0438\u043B\u043A\u0438: %{errors}",
        not_a_number: "\u043D\u0435 \u0447\u0438\u0441\u043B\u043E",
        not_an_integer: "\u043D\u0435 \u0454 \u0446\u0456\u043B\u0438\u043C \u0447\u0438\u0441\u043B\u043E\u043C",
        odd: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043D\u0435\u043F\u0430\u0440\u043D\u0438\u043C",
        other_than: "\u043C\u0430\u0454 \u0432\u0456\u0434\u0440\u0456\u0437\u043D\u044F\u0442\u0438\u0441\u044C \u0432\u0456\u0434 %{count}",
        password_complexity: {
          digit: {
            few: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0446\u0438\u0444\u0440\u0438",
            many: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0446\u0438\u0444\u0440",
            one: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 \u043E\u0434\u043D\u0443 \u0446\u0438\u0444\u0440\u0443",
            other: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0446\u0438\u0444\u0440\u0438"
          },
          lower: {
            few: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043C\u0430\u043B\u0456 \u0431\u0443\u043A\u0432\u0438",
            many: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043C\u0430\u043B\u0438\u0445 \u0431\u0443\u043A\u0432",
            one: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 \u043E\u0434\u043D\u0443 \u043C\u0430\u043B\u0443 \u0431\u0443\u043A\u0432\u0443",
            other: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043C\u0430\u043B\u0456 \u0431\u0443\u043A\u0432\u0438"
          },
          symbol: {
            few: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0440\u043E\u0437\u0434\u0456\u043B\u043E\u0432\u0456 \u0437\u043D\u0430\u043A\u0438 \u0430\u0431\u043E \u0441\u0438\u043C\u0432\u043E\u043B\u0438",
            many: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0440\u043E\u0437\u0434\u0456\u043B\u043E\u0432\u0438\u0445 \u0437\u043D\u0430\u043A\u0456\u0432 \u0430\u0431\u043E \u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432",
            one: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 \u043E\u0434\u0438\u043D \u0440\u043E\u0437\u0434\u0456\u043B\u043E\u0432\u0438\u0439 \u0437\u043D\u0430\u043A \u0430\u0431\u043E \u0441\u0438\u043C\u0432\u043E\u043B",
            other: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u0440\u043E\u0437\u0434\u0456\u043B\u043E\u0432\u0456 \u0437\u043D\u0430\u043A\u0438 \u0430\u0431\u043E \u0441\u0438\u043C\u0432\u043E\u043B\u0438"
          },
          upper: {
            few: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u0456 \u0431\u0443\u043A\u0432\u0438",
            many: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u0438\u0445 \u0431\u0443\u043A\u0432",
            one: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 \u043E\u0434\u043D\u0443 \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u0443 \u0431\u0443\u043A\u0432\u0443",
            other: "\u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 %{count} \u043F\u0440\u043E\u043F\u0438\u0441\u043D\u0456 \u0431\u0443\u043A\u0432\u0438"
          }
        },
        present: "\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u0443\u0441\u0442\u0438\u043C",
        required: "\u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u043F\u043E\u0440\u043E\u0436\u043D\u0456\u043C",
        taken: "\u0432\u0436\u0435 \u0437\u0430\u0439\u043D\u044F\u0442\u0438\u0439",
        taken_in_past: "\u0440\u0430\u043D\u0456\u0448\u0435 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0432\u0441\u044F.",
        too_long: {
          few: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0438\u0439 (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0438)",
          many: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0438\u0439 (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0456\u0432)",
          one: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0438\u0439 (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A)",
          other: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0438\u0439 (\u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0443)"
        },
        too_short: {
          few: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0438\u0439 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0438)",
          many: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0438\u0439 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0456\u0432)",
          one: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0438\u0439 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A)",
          other: "\u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0438\u0439 (\u043C\u0456\u043D\u0456\u043C\u0443\u043C %{count} \u0437\u043D\u0430\u043A\u0443)"
        },
        wrong_length: {
          few: "\u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u0434\u043E\u0432\u0436\u0438\u043D\u0430 (\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u0438)",
          many: "\u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u0434\u043E\u0432\u0436\u0438\u043D\u0430 (\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u0456\u0432)",
          one: "\u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u0434\u043E\u0432\u0436\u0438\u043D\u0430 (\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 %{count} \u0437\u043D\u0430\u043A)",
          other: "\u043D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u0434\u043E\u0432\u0436\u0438\u043D\u0430 (\u043C\u0430\u0454 \u0431\u0443\u0442\u0438 %{count} \u0437\u043D\u0430\u043A\u0443)"
        }
      },
      template: {
        body: "\u041F\u043E\u043C\u0438\u043B\u043A\u0438 \u0432\u0438\u044F\u0432\u043B\u0435\u043D\u043E \u0432 \u0442\u0430\u043A\u0438\u0445 \u043F\u043E\u043B\u044F\u0445:",
        header: {
          few: "%{model} \u043D\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043E \u0447\u0435\u0440\u0435\u0437 %{count} \u043F\u043E\u043C\u0438\u043B\u043A\u0438",
          many: "%{model} \u043D\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043E \u0447\u0435\u0440\u0435\u0437 %{count} \u043F\u043E\u043C\u0438\u043B\u043E\u043A",
          one: "%{model} \u043D\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043E \u0447\u0435\u0440\u0435\u0437 %{count} \u043F\u043E\u043C\u0438\u043B\u043A\u0443",
          other: "%{model} \u043D\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043E \u0447\u0435\u0440\u0435\u0437 %{count} \u043F\u043E\u043C\u0438\u043B\u043A\u0438"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u041E\u0431\u0435\u0440\u0456\u0442\u044C: "
      },
      submit: {
        create: "\u0421\u0442\u0432\u043E\u0440\u0438\u0442\u0438 %{model}",
        submit: "\u0417\u0431\u0435\u0440\u0435\u0433\u0442\u0438 %{model}",
        update: "\u0417\u0431\u0435\u0440\u0435\u0433\u0442\u0438 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "few",
          "many",
          "other"
        ]
      },
      transliterate: {}
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "\u20B4"
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              few: "\u041C\u0456\u043B\u044C\u044F\u0440\u0434\u0456\u0432",
              many: "\u041C\u0456\u043B\u044C\u044F\u0440\u0434\u0456\u0432",
              one: "\u041C\u0456\u043B\u044C\u044F\u0440\u0434",
              other: "\u041C\u0456\u043B\u044C\u044F\u0440\u0434\u0456\u0432"
            },
            million: {
              few: "\u041C\u0456\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              many: "\u041C\u0456\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              one: "\u041C\u0456\u043B\u044C\u0439\u043E\u043D",
              other: "\u041C\u0456\u043B\u044C\u0439\u043E\u043D\u0456\u0432"
            },
            quadrillion: {
              few: "\u041A\u0432\u0430\u0434\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              many: "\u041A\u0432\u0430\u0434\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              one: "\u041A\u0432\u0430\u0434\u0440\u0438\u043B\u044C\u0439\u043E\u043D",
              other: "\u041A\u0432\u0430\u0434\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432"
            },
            thousand: {
              few: "\u0422\u0438\u0441\u044F\u0447",
              many: "\u0422\u0438\u0441\u044F\u0447",
              one: "\u0422\u0438\u0441\u044F\u0447\u0430",
              other: "\u0422\u0438\u0441\u044F\u0447"
            },
            trillion: {
              few: "\u0422\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              many: "\u0422\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432",
              one: "\u0422\u0440\u0438\u043B\u044C\u0439\u043E\u043D",
              other: "\u0422\u0440\u0438\u043B\u044C\u0439\u043E\u043D\u0456\u0432"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "\u0431\u0430\u0439\u0442\u0438",
              many: "\u0431\u0430\u0439\u0442\u0456\u0432",
              one: "\u0431\u0430\u0439\u0442",
              other: "\u0431\u0430\u0439\u0442\u0443"
            },
            gb: "\u0413\u0411",
            kb: "\u043A\u0411",
            mb: "\u041C\u0411",
            tb: "\u0422\u0411"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " \u0442\u0430 ",
        two_words_connector: " \u0456 ",
        words_connector: ", "
      }
    },
    time: {
      am: "\u0434\u043E \u043F\u043E\u043B\u0443\u0434\u043D\u044F",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "\u043F\u043E \u043F\u043E\u043B\u0443\u0434\u043D\u0456"
    }
  };
  var ur = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u062A\u0648\u062B\u06CC\u0642 \u0645\u06CC\u06BA \u0646\u0627 \u06A9\u0627 \u0645\u06CC: %{errors}",
          restrict_dependent_destroy: {
            has_many: "\u0686\u0646\u062F \u0645\u0646\u062D\u0635\u0631 %{record}  \u06A9\u06CC \u0645\u0648\u062C\u0648\u062F\u06AF\u06CC \u06A9\u06D2 \u0628\u0627\u0639\u062B \u0627\u0633 \u0631\u06CC\u06A9\u0627\u0631\u0688 \u06A9\u0648 \u062D\u0630\u0641 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC\u0627 \u062C\u0627 \u0633\u06A9\u062A\u0627",
            has_one: "\u0627\u06CC\u06A9 \u0645\u0646\u062D\u0635\u0631 %{record} \u06A9\u06CC \u0645\u0648\u062C\u0648\u062F\u06AF\u06CC \u06A9\u06D2 \u0628\u0627\u0639\u062B \u0627\u0633 \u0631\u06CC\u06A9\u0627\u0631\u0688 \u06A9\u0648 \u062D\u0630\u0641 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC\u0627 \u062C\u0627 \u0633\u06A9\u062A\u0627"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u0627\u062A\u0648\u0627\u0631",
        "\u0633\u0648\u0645\u0648\u0627\u0631",
        "\u0645\u0646\u06AF\u0644",
        "\u0628\u062F\u06BE",
        "\u062C\u0645\u0639\u0631\u0627\u062A",
        "\u062C\u0645\u0639\u06C1",
        "\u06C1\u0641\u062A\u06C1"
      ],
      abbr_month_names: [
        null,
        "\u062C\u0646\u0648\u0631\u06CC",
        "\u0641\u0631\u0648\u0631\u06CC",
        "\u0645\u0627\u0631\u0686",
        "\u0627\u067E\u0631\u06CC\u0644",
        "\u0645\u0626\u06CC",
        "\u062C\u0648\u0646",
        "\u062C\u0648\u0644\u0627\u0626\u06CC",
        "\u0627\u06AF\u0633\u062A",
        "\u0633\u062A\u0645\u0628\u0631",
        "\u0627\u06A9\u062A\u0648\u0628\u0631",
        "\u0646\u0648\u0645\u0628\u0631",
        "\u062F\u0633\u0645\u0628\u0631"
      ],
      day_names: [
        "\u0627\u062A\u0648\u0627\u0631",
        "\u0633\u0648\u0645\u0648\u0627\u0631",
        "\u0645\u0646\u06AF\u0644",
        "\u0628\u062F\u06BE",
        "\u062C\u0645\u0639\u0631\u0627\u062A",
        "\u062C\u0645\u0639\u06C1",
        "\u06C1\u0641\u062A\u06C1"
      ],
      formats: {
        default: "%d %B %Y",
        long: "%d %B\u060C %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "\u062C\u0646\u0648\u0631\u06CC",
        "\u0641\u0631\u0648\u0631\u06CC",
        "\u0645\u0627\u0631\u0686",
        "\u0627\u067E\u0631\u06CC\u0644",
        "\u0645\u0626\u06CC",
        "\u062C\u0648\u0646",
        "\u062C\u0648\u0644\u0627\u0626\u06CC",
        "\u0627\u06AF\u0633\u062A",
        "\u0633\u062A\u0645\u0628\u0631",
        "\u0627\u06A9\u062A\u0648\u0628\u0631",
        "\u0646\u0648\u0645\u0628\u0631",
        "\u062F\u0633\u0645\u0628\u0631"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "\u062A\u0642\u0631\u06CC\u0628\u0627 \u0627\u06CC\u06A9 \u06AF\u06BE\u0646\u0679\u06C1",
          other: "\u062A\u0642\u0631\u06CC\u0628\u0627 %{count} \u06AF\u06BE\u0646\u0679\u06D2"
        },
        about_x_months: {
          one: "\u062A\u0642\u0631\u06CC\u0628\u0627 \u0627\u06CC\u06A9 \u0645\u06C1\u06CC\u0646\u06C1",
          other: "\u062A\u0642\u0631\u06CC\u0628\u0627 %{count} \u0645\u06C1\u06CC\u0646\u06C1"
        },
        about_x_years: {
          one: "\u062A\u0642\u0631\u06CC\u0628\u0627 \u0627\u06CC\u06A9 \u0633\u0627\u0644",
          other: "\u062A\u0642\u0631\u06CC\u0628\u0627 %{count} \u0633\u0627\u0644"
        },
        almost_x_years: {
          one: "\u062A\u0642\u0631\u06CC\u0628\u0627 \u0627\u06CC\u06A9 \u0633\u0627\u0644",
          other: "\u062A\u0642\u0631\u06CC\u0628\u0627 %{count} \u0633\u0627\u0644"
        },
        half_a_minute: "\u0622\u062F\u06BE\u0627 \u0645\u0646\u0679",
        less_than_x_minutes: {
          one: "\u0627\u06CC\u06A9 \u0645\u06BA\u0679 \u0633\u06D2 \u06A9\u0645",
          other: "%{count} \u0645\u06BA\u0679\u0648\u06BA \u0633\u06D2 \u06A9\u0645"
        },
        less_than_x_seconds: {
          one: "\u0627\u06CC\u06A9 \u0633\u06CC\u06A9\u0646\u0688 \u0633\u06D2 \u06A9\u0645",
          other: "%{count} \u0633\u06CC\u06A9\u0646\u0688\u0648\u06BA \u0633\u06D2 \u06A9\u0645"
        },
        over_x_years: {
          one: "\u0627\u06CC\u06A9 \u0633\u0627\u0644 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1",
          other: "%{count} \u0633\u0627\u0644\u0648\u06BA \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1"
        },
        x_days: {
          one: "\u0627\u06CC\u06A9 \u062F\u0646",
          other: "%{count} \u062F\u0646"
        },
        x_minutes: {
          one: "\u0627\u06CC\u06A9 \u0645\u0646\u0679",
          other: "%{count} \u0645\u0646\u0679"
        },
        x_months: {
          one: "\u0627\u06CC\u06A9 \u0645\u0627\u06C1",
          other: "%{count} \u0645\u0627\u06C1"
        },
        x_seconds: {
          one: "\u0627\u06CC\u06A9 \u0633\u06CC\u06A9\u0646\u0688",
          other: "%{count} \u0633\u06CC\u06A9\u0646\u0688"
        }
      },
      prompts: {
        day: "\u062F\u0646",
        hour: "\u06AF\u06BE\u0646\u0679\u06C1",
        minute: "\u0645\u0646\u0679",
        month: "\u0645\u0627\u06C1",
        second: "\u0633\u06CC\u06A9\u0646\u0688",
        year: "\u0633\u0627\u0644"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "\u0642\u0628\u0648\u0644 \u06C1\u0648\u0646\u0627 \u0636\u0631\u0648\u0631\u06CC \u06C1\u06D2",
        blank: "\u0644\u0627\u0632\u0645 \u06C1\u06D2",
        confirmation: "%{attribute} \u0645\u06CC\u0644 \u0646\u06C1\u06CC\u06BA \u0631\u06A9\u06BE\u062A\u0627",
        empty: "\u0644\u0627\u0632\u0645 \u06C1\u06D2",
        equal_to: "%{count} \u06A9\u06D2 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2",
        even: "\u062C\u0641\u062A \u06C1\u0648\u0646\u0627 \u0636\u0631\u0648\u0631\u06CC \u06C1\u06D2",
        exclusion: "\u0645\u062E\u0635\u0648\u0635 \u06C1\u06D2",
        greater_than: "%{count} \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2",
        greater_than_or_equal_to: "%{count} \u0633\u06D2 \u0628\u0691\u0627 \u06CC\u0627 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2",
        inclusion: "\u0641\u06C1\u0631\u0633\u062A \u0645\u06CC\u06BA \u0634\u0627\u0645\u0644 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2",
        invalid: "\u0628\u0627\u0637\u0644 \u06C1\u06D2",
        less_than: "%{count} \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2",
        less_than_or_equal_to: "%{count} \u0633\u06D2 \u06A9\u0645 \u06CC\u0627 \u0627\u0633 \u06A9\u06D2 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2",
        not_a_number: "\u0627\u06CC\u06A9 \u0646\u0645\u0628\u0631 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2",
        not_an_integer: "\u0627\u06CC\u06A9 \u0639\u062F\u062F \u0635\u062D\u06CC\u062D \u06C1\u0648\u0646\u0627 \u0636\u0631\u0648\u0631\u06CC \u06C1\u06D2",
        odd: "\u0637\u0627\u0642 \u06C1\u0648\u0646\u0627 \u0636\u0631\u0648\u0631\u06CC \u06C1\u06D2",
        other_than: "%{count} \u06A9\u06D2 \u0639\u0644\u0627\u0648\u06C1 \u06A9\u0633\u06CC \u0627\u0648\u0631 \u06A9\u0627 \u06C1\u0648\u0646\u0627 \u0644\u0627\u0632\u0645\u06CC \u06C1\u06D2",
        present: "\u062E\u0627\u0644\u06CC \u06C1\u0648\u0646\u0627 \u0636\u0631\u0648\u0631\u06CC \u06C1\u06D2",
        taken: "\u067E\u06C1\u0644\u06D2 \u0633\u06D2 \u06C1\u06CC \u0627\u0633\u062A\u0639\u0645\u0627\u0644 \u0645\u06CC\u06BA \u06C1\u06D2",
        too_long: {
          one: "\u0628\u06C1\u062A \u0637\u0648\u06CC\u0644 \u06C1\u06D2 (\u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u0627\u06CC\u06A9 \u062D\u0631\u0641)",
          other: "i\u0628\u06C1\u062A \u0637\u0648\u06CC\u0644 \u06C1\u06D2 (\u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 %{count} \u062D\u0631\u0648\u0641)"
        },
        too_short: {
          one: "\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627 \u06C1\u06D2 (\u06A9\u0645 \u0627\u0632 \u06A9\u0645 \u0627\u06A9\u06CC \u062D\u0631\u0641)",
          other: "\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627 \u06C1\u06D2 (\u06A9\u0645 \u0627\u0632 \u06A9\u0645 %{count} \u062D\u0631\u0648\u0641)"
        },
        wrong_length: {
          one: "\u063A\u0644\u0637 \u0637\u0648\u0627\u0644\u062A (\u0627\u06CC\u06A9 \u062D\u0631\u0641 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u0626\u06D2)",
          other: "\u063A\u0644\u0637 \u0637\u0648\u0627\u0644\u062A (%{count} \u062D\u0631\u0648\u0641 \u06C1\u0648\u0646\u06D2 \u0686\u0627\u06C1\u0626\u06D2)"
        }
      },
      template: {
        body: "\u0645\u0646\u062F\u0631\u062C\u06C1 \u0630\u06CC\u0644 \u0645\u062A\u0646 \u06A9\u06D2 \u0633\u0627\u062A\u06BE \u0645\u0633\u0627\u0626\u0644 \u06C1\u06CC\u06BA:",
        header: {
          one: "\u0627\u06CC\u06A9 \u062E\u0631\u0627\u0628\u06CC \u06A9\u06D2 \u0628\u0627\u0639\u062B \u06CC\u06C1 %{model} \u0645\u062D\u0641\u0648\u0638 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC\u0627 \u062C\u0627 \u0633\u06A9\u0627",
          other: "%{count} \u062E\u0631\u0627\u0628\u06CC\u0648\u06BA \u06A9\u06D2 \u0628\u0627\u0639\u062B \u06CC\u06C1 %{model} \u0645\u062D\u0641\u0648\u0638 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC\u0627 \u062C\u0627 \u0633\u06A9\u0627"
        }
      }
    },
    helpers: {
      select: {
        prompt: "\u0645\u0646\u062A\u062E\u0628 \u06A9\u06CC\u062C\u06CC\u06D2"
      },
      submit: {
        create: "%{model} \u062A\u0634\u06A9\u06CC\u0644 \u062F\u06CC\u06BA",
        submit: "%{model} \u0645\u062D\u0641\u0648\u0638 \u06A9\u0631\u06CC\u06BA",
        update: "\u0627\u067E \u0688\u06CC\u0679 %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "one",
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "Rs"
        }
      },
      format: {
        delimiter: ",",
        precision: 0,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u0628\u0644\u06CC\u0646",
            million: "\u0645\u0644\u06CC\u0646",
            quadrillion: "\u06A9\u0648\u0627\u0688\u0631\u06CC\u0644\u0646",
            thousand: "\u06C1\u0632\u0627\u0631",
            trillion: "\u0679\u0631\u06CC\u0644\u0646",
            unit: "Rs"
          }
        },
        format: {
          delimiter: "",
          precision: 0,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n \u0641\u06CC\u0635\u062F"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u060C \u0627\u0648\u0631 ",
        two_words_connector: " \u0627\u0648\u0631 ",
        words_connector: "\u060C "
      }
    },
    time: {
      am: "\u0635\u0628\u062D",
      formats: {
        default: "%a\u060C %d %b %Y\u060C %p %l:%M %Z",
        long: "%d %B\u060C %Y %p %H:%M",
        short: "%d %b\u060C %H:%M"
      },
      pm: "\u0634\u0627\u0645"
    }
  };
  var uz = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "%{errors}ta hato bor."
        }
      }
    },
    date: {
      abbr_day_names: [
        "Ya",
        "Du",
        "Sh",
        "Ch",
        "Pa",
        "Ju",
        "Sh"
      ],
      abbr_month_names: [
        null,
        "yan.",
        "fev.",
        "mart",
        "apr.",
        "may",
        "iyun",
        "iyul",
        "avg.",
        "sen.",
        "okt.",
        "noy.",
        "dek."
      ],
      day_names: [
        "yakshanba",
        "dushanba",
        "seshanba",
        "chorshanba",
        "payshanba",
        "juma",
        "shanba"
      ],
      formats: {
        default: "%d.%m.%Y",
        long: "%d %B %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "yanvar",
        "fevral",
        "mart",
        "aprel",
        "may",
        "iyun",
        "iyul",
        "avgust",
        "sentyabr",
        "oktyabr",
        "noyabr",
        "dekabr"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          few: "chamasi %{count} soat",
          many: "chamasi %{count} soat",
          one: "chamasi %{count} soat",
          other: "chamasi %{count} soat"
        },
        about_x_months: {
          few: "chamasi %{count} oy",
          many: "chamasi %{count} oy",
          one: "chamasi %{count} oy",
          other: "chamasi %{count} oy"
        },
        about_x_years: {
          few: "chamasi %{count} yil",
          many: "chamasi %{count} yil",
          one: "chamasi %{count} yil",
          other: "chamasi %{count} yil"
        },
        almost_x_years: {
          few: "deyarli %{count} yil",
          many: "deyarli %{count} yil",
          one: "deyarli %{count} yil",
          other: "deyarli %{count} yil"
        },
        half_a_minute: "bir daqiqadan kam",
        less_than_x_minutes: {
          few: "%{count} daqiqadan kam",
          many: "%{count} daqiqadan kam",
          one: "%{count} daqiqadan kam",
          other: "%{count} daqiqadan kam"
        },
        less_than_x_seconds: {
          few: "%{count} soniyadan kam",
          many: "%{count} soniyadan kam",
          one: "%{count} soniyadan kam",
          other: "%{count} soniyadan kam"
        },
        over_x_years: {
          few: "%{count} yildan ziyod",
          many: "%{count} yildan ziyod",
          one: "%{count} yildan ziyod",
          other: "%{count} yildan ziyod"
        },
        x_days: {
          few: "%{count} kun",
          many: "%{count} kun",
          one: "%{count} kun",
          other: "%{count} kun"
        },
        x_minutes: {
          few: "%{count} daqiqa",
          many: "%{count} daqiqa",
          one: "%{count} daqiqa",
          other: "%{count} daqiqa"
        },
        x_months: {
          few: "%{count} oy",
          many: "%{count} oy",
          one: "%{count} oy",
          other: "%{count} oy"
        },
        x_seconds: {
          few: "%{count} soniya",
          many: "%{count} soniya",
          one: "%{count} soniya",
          other: "%{count} soniya"
        }
      },
      prompts: {
        day: "kun",
        hour: "soat",
        minute: "daqiqa",
        month: "oy",
        second: "soniya",
        year: "yil"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "tasdiqlash kerak",
        blank: "bosh bo'lishi mumkin emas",
        confirmation: "tasdiq bilan mos emas",
        empty: "bosh bo'lishi mumkin emas",
        equal_to: "%{count} ga teng",
        even: "juft sonlar mumkin",
        exclusion: "mumkin emas",
        greater_than: "%{count} dan yuqori",
        greater_than_or_equal_to: "%{count} ga teng yoki yuqori",
        inclusion: "kutilmagan natija",
        invalid: "noto'gri",
        less_than: "%{count} dan kam",
        less_than_or_equal_to: "%{count} ga teng yoki kam",
        not_a_number: "son emas",
        not_an_integer: "butun son emas",
        odd: "toq sonlar mumkin",
        taken: "band",
        too_long: {
          few: "uzunligi yetarligidan ortiq (%{count} ta simvoldan yuqori mumkin emas)",
          many: "uzunligi yetarligidan ortiq (%{count} ta simvoldan yuqori mumkin emas)",
          one: "uzunligi yetarligidan ortiq (%{count} ta simvoldan yuqori mumkin emas)",
          other: "uzunligi yetarligidan ortiq (%{count} ta simvoldan yuqori mumkin emas)"
        },
        too_short: {
          few: "uzunligi yetarli emas (%{count} ta simvoldan kam mumkin emas)",
          many: "uzunligi yetarli emas (%{count} ta simvoldan kam mumkin emas)",
          one: "uzunligi yetarli emas (%{count} ta simvoldan kam mumkin emas)",
          other: "uzunligi yetarli emas (%{count} ta simvoldan kam mumkin emas)"
        },
        wrong_length: {
          few: "uzunligi noto'gri (uzunligi %{count} simvolga teng bulishi kerak)",
          many: "uzunligi noto'gri (uzunligi %{count} simvolga teng bulishi kerak)",
          one: "uzunligi noto'gri (uzunligi %{count} simvolga teng bulishi kerak)",
          other: "uzunligi noto'gri (uzunligi %{count} simvolga teng bulishi kerak)"
        }
      },
      template: {
        body: "Quyidagilarda hatolar mavjud:",
        header: {
          few: "%{count} ta hatolar sababli %{model}:ni saqlab bulmadi",
          many: "%{count} ta hatolar sababli %{model}:ni saqlab bulmadi",
          one: "%{count} ta hato sababli %{model}:ni saqlab bulmadi",
          other: "%{count} ta hatolar sababli %{model}:ni saqlab bulmadi"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Tanlang: "
      },
      submit: {
        create: "Yarat %{model}",
        submit: "Saqla %{model}",
        update: "Saqla %{model}"
      }
    },
    number: {
      currency: {
        format: {
          delimiter: " ",
          format: "%n %u",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "so'm."
        }
      },
      format: {
        delimiter: " ",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: {
              few: "milliard",
              many: "milliard",
              one: "milliard",
              other: "milliard"
            },
            million: {
              few: "million",
              many: "million",
              one: "million",
              other: "million"
            },
            quadrillion: {
              few: "kvadrillion",
              many: "kvadrillion",
              one: "kvadrillion",
              other: "kvadrillion"
            },
            thousand: {
              few: "ming",
              many: "ming",
              one: "ming",
              other: "ming"
            },
            trillion: {
              few: "trillion",
              many: "trillion",
              one: "trillion",
              other: "trillion"
            },
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              few: "bayt",
              many: "bayt",
              one: "bayt",
              other: "bayt"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: " va ",
        two_words_connector: " va ",
        words_connector: ", "
      }
    },
    time: {
      am: "ertalab",
      formats: {
        default: "%a, %d %b %Y, %H:%M:%S %z",
        long: "%d %B %Y, %H:%M",
        short: "%d %b, %H:%M"
      },
      pm: "kechasi"
    }
  };
  var vi = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "C\xF3 c\xE1c l\u1ED7i sau: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Kh\xF4ng th\u1EC3 x\xF3a do t\u1ED3n t\u1EA1i m\u1ED9t s\u1ED1 \u0111\u1ED1i t\u01B0\u1EE3ng ph\u1EE5 thu\u1ED9c %{record}",
            has_one: "Kh\xF4ng th\u1EC3 x\xF3a do t\u1ED3n t\u1EA1i \u0111\u1ED1i t\u01B0\u1EE3ng ph\u1EE5 thu\u1ED9c %{record}"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "CN",
        "Th\u1EE9 2",
        "Th\u1EE9 3",
        "Th\u1EE9 4",
        "Th\u1EE9 5",
        "Th\u1EE9 6",
        "Th\u1EE9 7"
      ],
      abbr_month_names: [
        null,
        "Thg 1",
        "Thg 2",
        "Thg 3",
        "Thg 4",
        "Thg 5",
        "Thg 6",
        "Thg 7",
        "Thg 8",
        "Thg 9",
        "Thg 10",
        "Thg 11",
        "Thg 12"
      ],
      day_names: [
        "Ch\u1EE7 nh\u1EADt",
        "Th\u1EE9 hai",
        "Th\u1EE9 ba",
        "Th\u1EE9 t\u01B0",
        "Th\u1EE9 n\u0103m",
        "Th\u1EE9 s\xE1u",
        "Th\u1EE9 b\u1EA3y"
      ],
      formats: {
        default: "%d-%m-%Y",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Th\xE1ng m\u1ED9t",
        "Th\xE1ng hai",
        "Th\xE1ng ba",
        "Th\xE1ng t\u01B0",
        "Th\xE1ng n\u0103m",
        "Th\xE1ng s\xE1u",
        "Th\xE1ng b\u1EA3y",
        "Th\xE1ng t\xE1m",
        "Th\xE1ng ch\xEDn",
        "Th\xE1ng m\u01B0\u1EDDi",
        "Th\xE1ng m\u01B0\u1EDDi m\u1ED9t",
        "Th\xE1ng m\u01B0\u1EDDi hai"
      ],
      order: [
        "day",
        "month",
        "year"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "kho\u1EA3ng %{count} gi\u1EDD",
        about_x_months: "kho\u1EA3ng %{count} th\xE1ng",
        about_x_years: "kho\u1EA3ng %{count} n\u0103m",
        almost_x_years: "g\u1EA7n %{count} n\u0103m",
        half_a_minute: "30 gi\xE2y",
        less_than_x_minutes: "ch\u01B0a t\u1EDBi %{count} ph\xFAt",
        less_than_x_seconds: "ch\u01B0a t\u1EDBi %{count} gi\xE2y",
        over_x_years: "h\u01A1n %{count} n\u0103m",
        x_days: "%{count} ng\xE0y",
        x_minutes: "%{count} ph\xFAt",
        x_months: "%{count} th\xE1ng",
        x_seconds: "%{count} gi\xE2y"
      },
      prompts: {
        day: "Ng\xE0y",
        hour: "Gi\u1EDD",
        minute: "Ph\xFAt",
        month: "Th\xE1ng",
        second: "Gi\xE2y",
        year: "N\u0103m"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "ph\u1EA3i \u0111\u01B0\u1EE3c \u0111\u1ED3ng \xFD",
        blank: "kh\xF4ng th\u1EC3 \u0111\u1EC3 tr\u1EAFng",
        confirmation: "kh\xF4ng kh\u1EDBp v\u1EDBi x\xE1c nh\u1EADn",
        empty: "kh\xF4ng th\u1EC3 r\u1ED7ng",
        equal_to: "ph\u1EA3i b\u1EB1ng %{count}",
        even: "ph\u1EA3i l\xE0 s\u1ED1 ch\u1EB5n",
        exclusion: "\u0111\xE3 \u0111\u01B0\u1EE3c gi\xE0nh tr\u01B0\u1EDBc",
        greater_than: "ph\u1EA3i l\u1EDBn h\u01A1n %{count}",
        greater_than_or_equal_to: "ph\u1EA3i l\u1EDBn h\u01A1n ho\u1EB7c b\u1EB1ng %{count}",
        inclusion: "kh\xF4ng c\xF3 trong danh s\xE1ch",
        invalid: "kh\xF4ng h\u1EE3p l\u1EC7",
        less_than: "ph\u1EA3i nh\u1ECF h\u01A1n %{count}",
        less_than_or_equal_to: "ph\u1EA3i nh\u1ECF h\u01A1n ho\u1EB7c b\u1EB1ng %{count}",
        not_a_number: "kh\xF4ng ph\u1EA3i l\xE0 s\u1ED1",
        not_an_integer: "ph\u1EA3i l\xE0 m\u1ED9t s\u1ED1 nguy\xEAn",
        odd: "ph\u1EA3i l\xE0 s\u1ED1 l\u1EBB",
        other_than: "c\u1EA7n ph\u1EA3i kh\xE1c %{count}",
        present: "c\u1EA7n ph\u1EA3i \u0111\u1EC3 tr\u1EAFng",
        required: "ph\u1EA3i c\xF3",
        taken: "\u0111\xE3 t\u1ED3n t\u1EA1i",
        too_long: "qu\xE1 d\xE0i (t\u1ED1i \u0111a %{count} k\xFD t\u1EF1)",
        too_short: "qu\xE1 ng\u1EAFn (t\u1ED1i thi\u1EC3u %{count} k\xFD t\u1EF1)",
        wrong_length: "\u0111\u1ED9 d\xE0i kh\xF4ng \u0111\xFAng (ph\u1EA3i l\xE0 %{count} k\xFD t\u1EF1)"
      },
      template: {
        body: "C\xF3 l\u1ED7i v\u1EDBi c\xE1c m\u1EE5c sau:",
        header: "%{count} l\u1ED7i ng\u0103n kh\xF4ng cho l\u01B0u %{model} n\xE0y"
      }
    },
    helpers: {
      select: {
        prompt: "Vui l\xF2ng ch\u1ECDn"
      },
      submit: {
        create: "T\u1EA1o %{model}",
        submit: "L\u01B0u %{model}",
        update: "C\u1EADp nh\u1EADt %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      },
      transliterate: {
        rule: {
          \u00C0: "A",
          \u00C1: "A",
          \u00C2: "A",
          \u00C3: "A",
          \u00C8: "E",
          \u00C9: "E",
          \u00CA: "E",
          \u00CC: "I",
          \u00CD: "I",
          \u00D2: "O",
          \u00D3: "O",
          \u00D4: "O",
          \u00D5: "O",
          \u00D9: "U",
          \u00DA: "U",
          \u00DD: "Y",
          \u00E0: "a",
          \u00E1: "a",
          \u00E2: "a",
          \u00E3: "a",
          \u00E8: "e",
          \u00E9: "e",
          \u00EA: "e",
          \u00EC: "i",
          \u00ED: "i",
          \u00F2: "o",
          \u00F3: "o",
          \u00F4: "o",
          \u00F5: "o",
          \u00F9: "u",
          \u00FA: "u",
          \u00FD: "y",
          \u0102: "A",
          \u0103: "a",
          \u0110: "D",
          \u0111: "d",
          \u0128: "I",
          \u0129: "i",
          \u0168: "U",
          \u0169: "u",
          \u01A0: "O",
          \u01A1: "o",
          \u01AF: "U",
          \u01B0: "u",
          \u1EA0: "A",
          \u1EA1: "a",
          \u1EA2: "A",
          \u1EA3: "a",
          \u1EA4: "A",
          \u1EA5: "a",
          \u1EA6: "A",
          \u1EA7: "a",
          \u1EA8: "A",
          \u1EA9: "a",
          \u1EAA: "A",
          \u1EAB: "a",
          \u1EAC: "A",
          \u1EAD: "a",
          \u1EAE: "A",
          \u1EAF: "a",
          \u1EB0: "A",
          \u1EB1: "a",
          \u1EB2: "A",
          \u1EB3: "a",
          \u1EB4: "A",
          \u1EB5: "a",
          \u1EB6: "A",
          \u1EB7: "a",
          \u1EB8: "E",
          \u1EB9: "e",
          \u1EBA: "E",
          \u1EBB: "e",
          \u1EBC: "E",
          \u1EBD: "e",
          \u1EBE: "E",
          \u1EBF: "e",
          \u1EC0: "E",
          \u1EC1: "e",
          \u1EC2: "E",
          \u1EC3: "e",
          \u1EC4: "E",
          \u1EC5: "e",
          \u1EC6: "E",
          \u1EC7: "e",
          \u1EC8: "I",
          \u1EC9: "i",
          \u1ECA: "I",
          \u1ECB: "i",
          \u1ECC: "O",
          \u1ECD: "o",
          \u1ECE: "O",
          \u1ECF: "o",
          \u1ED0: "O",
          \u1ED1: "o",
          \u1ED2: "O",
          \u1ED3: "o",
          \u1ED4: "O",
          \u1ED5: "o",
          \u1ED6: "O",
          \u1ED7: "o",
          \u1ED8: "O",
          \u1ED9: "o",
          \u1EDA: "O",
          \u1EDB: "o",
          \u1EDC: "O",
          \u1EDD: "o",
          \u1EDE: "O",
          \u1EDF: "o",
          \u1EE0: "O",
          \u1EE1: "o",
          \u1EE2: "O",
          \u1EE3: "o",
          \u1EE4: "U",
          \u1EE5: "u",
          \u1EE6: "U",
          \u1EE7: "u",
          \u1EE8: "U",
          \u1EE9: "u",
          \u1EEA: "U",
          \u1EEB: "u",
          \u1EEC: "U",
          \u1EED: "u",
          \u1EEE: "U",
          \u1EEF: "u",
          \u1EF0: "U",
          \u1EF1: "u",
          \u1EF2: "Y",
          \u1EF3: "y",
          \u1EF4: "Y",
          \u1EF5: "y",
          \u1EF6: "Y",
          \u1EF7: "y",
          \u1EF8: "Y",
          \u1EF9: "y"
        }
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ".",
          format: "%n %u",
          precision: 0,
          separator: ",",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "VN\u0110"
        }
      },
      format: {
        delimiter: ".",
        precision: 3,
        separator: ",",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "T\u1EF7",
            million: "Tri\u1EC7u",
            quadrillion: "Tri\u1EC7u t\u1EF7",
            thousand: "Ngh\xECn",
            trillion: "Ngh\xECn t\u1EF7",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Byte"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", v\xE0 ",
        two_words_connector: " v\xE0 ",
        words_connector: ", "
      }
    },
    time: {
      am: "s\xE1ng",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "chi\u1EC1u"
    }
  };
  var wo = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "Validation failed: %{errors}",
          restrict_dependent_destroy: {
            has_many: "Cannot delete record because dependent %{record} exist",
            has_one: "Cannot delete record because a dependent %{record} exists"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "Dib",
        "Alt",
        "Tal",
        "All",
        "Alx",
        "Ajj",
        "Gaw"
      ],
      abbr_month_names: [
        null,
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      day_names: [
        "Dib\xE8er",
        "Altine",
        "Talaata",
        "Allarba",
        "Alxamess",
        "Ajjouma",
        "Gaawu"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%d %B, %Y",
        short: "%d %b"
      },
      month_names: [
        null,
        "Tamkharit",
        "Digui Gamou",
        "Gamou",
        "Raki Gamou",
        "Rakati Gamou",
        "Mamou Kor",
        "Ndeyou Kor",
        "Baraxlou",
        "Kor",
        "Kori",
        "Digui Tabaski",
        "Tabaski"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: {
          one: "about %{count} hour",
          other: "about %{count} hours"
        },
        about_x_months: {
          one: "about %{count} month",
          other: "about %{count} months"
        },
        about_x_years: {
          one: "about %{count} year",
          other: "about %{count} years"
        },
        almost_x_years: {
          one: "almost %{count} year",
          other: "almost %{count} years"
        },
        half_a_minute: "half a minute",
        less_than_x_minutes: {
          one: "less than a minute",
          other: "less than %{count} minutes"
        },
        less_than_x_seconds: {
          one: "less than %{count} second",
          other: "less than %{count} seconds"
        },
        over_x_years: {
          one: "over %{count} year",
          other: "over %{count} years"
        },
        x_days: {
          one: "%{count} day",
          other: "%{count} days"
        },
        x_minutes: {
          one: "%{count} minute",
          other: "%{count} minutes"
        },
        x_months: {
          one: "%{count} month",
          other: "%{count} months"
        },
        x_seconds: {
          one: "%{count} second",
          other: "%{count} seconds"
        },
        x_years: {
          one: "%{count} year",
          other: "%{count} years"
        }
      },
      prompts: {
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        month: "Month",
        second: "Second",
        year: "Year"
      }
    },
    errors: {
      format: "%{attribute} %{message}",
      messages: {
        accepted: "must be accepted",
        blank: "can't be blank",
        confirmation: "doesn't match %{attribute}",
        empty: "can't be empty",
        equal_to: "must be equal to %{count}",
        even: "must be even",
        exclusion: "is reserved",
        greater_than: "must be greater than %{count}",
        greater_than_or_equal_to: "must be greater than or equal to %{count}",
        inclusion: "is not included in the list",
        invalid: "is invalid",
        less_than: "must be less than %{count}",
        less_than_or_equal_to: "must be less than or equal to %{count}",
        not_a_number: "is not a number",
        not_an_integer: "must be an integer",
        odd: "must be odd",
        taken: "has already been taken",
        too_long: {
          one: "is too long (maximum is %{count} character)",
          other: "is too long (maximum is %{count} characters)"
        },
        too_short: {
          one: "is too short (minimum is %{count} character)",
          other: "is too short (minimum is %{count} characters)"
        },
        wrong_length: {
          one: "is the wrong length (should be %{count} character)",
          other: "is the wrong length (should be %{count} characters)"
        }
      },
      template: {
        body: "There were problems with the following fields:",
        header: {
          one: "%{count} error prohibited this %{model} from being saved",
          other: "%{count} errors prohibited this %{model} from being saved"
        }
      }
    },
    helpers: {
      select: {
        prompt: "Please select"
      },
      submit: {
        create: "Create %{model}",
        submit: "Save %{model}",
        update: "Update %{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "Billion",
            million: "Million",
            quadrillion: "Quadrillion",
            thousand: "Thousand",
            trillion: "Trillion",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 3,
          significant: true,
          strip_insignificant_zeros: true
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: ""
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: ", and ",
        two_words_connector: " and ",
        words_connector: ", "
      }
    },
    time: {
      am: "am",
      formats: {
        default: "%a, %d %b %Y %H:%M:%S %z",
        long: "%d %B, %Y %H:%M",
        short: "%d %b %H:%M"
      },
      pm: "pm"
    }
  };
  var zh_CN = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u9A8C\u8BC1\u5931\u8D25\uFF1A%{errors}",
          restrict_dependent_destroy: {
            has_many: "\u7531\u4E8E%{record}\u9700\u8981\u6B64\u8BB0\u5F55\uFF0C\u6240\u4EE5\u65E0\u6CD5\u79FB\u9664\u8BB0\u5F55",
            has_one: "\u7531\u4E8E%{record}\u9700\u8981\u6B64\u8BB0\u5F55\uFF0C\u6240\u4EE5\u65E0\u6CD5\u79FB\u9664\u8BB0\u5F55"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u5468\u65E5",
        "\u5468\u4E00",
        "\u5468\u4E8C",
        "\u5468\u4E09",
        "\u5468\u56DB",
        "\u5468\u4E94",
        "\u5468\u516D"
      ],
      abbr_month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      day_names: [
        "\u661F\u671F\u65E5",
        "\u661F\u671F\u4E00",
        "\u661F\u671F\u4E8C",
        "\u661F\u671F\u4E09",
        "\u661F\u671F\u56DB",
        "\u661F\u671F\u4E94",
        "\u661F\u671F\u516D"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y\u5E74%m\u6708%d\u65E5",
        short: "%m\u6708%d\u65E5"
      },
      month_names: [
        null,
        "\u4E00\u6708",
        "\u4E8C\u6708",
        "\u4E09\u6708",
        "\u56DB\u6708",
        "\u4E94\u6708",
        "\u516D\u6708",
        "\u4E03\u6708",
        "\u516B\u6708",
        "\u4E5D\u6708",
        "\u5341\u6708",
        "\u5341\u4E00\u6708",
        "\u5341\u4E8C\u6708"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u5927\u7EA6%{count}\u5C0F\u65F6",
        about_x_months: "\u5927\u7EA6%{count}\u4E2A\u6708",
        about_x_years: "\u5927\u7EA6%{count}\u5E74",
        almost_x_years: "\u63A5\u8FD1%{count}\u5E74",
        half_a_minute: "\u534A\u5206\u949F",
        less_than_x_minutes: "\u4E0D\u5230%{count}\u5206\u949F",
        less_than_x_seconds: "\u4E0D\u5230%{count}\u79D2",
        over_x_years: "%{count}\u5E74\u591A",
        x_days: "%{count}\u5929",
        x_minutes: "%{count}\u5206\u949F",
        x_months: "%{count}\u4E2A\u6708",
        x_seconds: "%{count}\u79D2",
        x_years: "%{count}\u5E74"
      },
      prompts: {
        day: "\u65E5",
        hour: "\u65F6",
        minute: "\u5206",
        month: "\u6708",
        second: "\u79D2",
        year: "\u5E74"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u5FC5\u987B\u662F\u53EF\u88AB\u63A5\u53D7\u7684",
        blank: "\u4E0D\u80FD\u4E3A\u7A7A\u5B57\u7B26",
        confirmation: "\u4E0E%{attribute}\u4E0D\u5339\u914D",
        empty: "\u4E0D\u80FD\u7559\u7A7A",
        equal_to: "\u5FC5\u987B\u7B49\u4E8E%{count}",
        even: "\u5FC5\u987B\u4E3A\u53CC\u6570",
        exclusion: "\u662F\u4FDD\u7559\u5173\u952E\u5B57",
        greater_than: "\u5FC5\u987B\u5927\u4E8E%{count}",
        greater_than_or_equal_to: "\u5FC5\u987B\u5927\u4E8E\u6216\u7B49\u4E8E%{count}",
        inclusion: "\u4E0D\u5305\u542B\u4E8E\u5217\u8868\u4E2D",
        invalid: "\u662F\u65E0\u6548\u7684",
        less_than: "\u5FC5\u987B\u5C0F\u4E8E%{count}",
        less_than_or_equal_to: "\u5FC5\u987B\u5C0F\u4E8E\u6216\u7B49\u4E8E%{count}",
        model_invalid: "\u9A8C\u8BC1\u5931\u8D25\uFF1A%{errors}",
        not_a_number: "\u4E0D\u662F\u6570\u5B57",
        not_an_integer: "\u5FC5\u987B\u662F\u6574\u6570",
        odd: "\u5FC5\u987B\u4E3A\u5355\u6570",
        other_than: "\u957F\u5EA6\u975E\u6CD5\uFF08\u4E0D\u53EF\u4E3A%{count}\u4E2A\u5B57\u7B26\uFF09",
        present: "\u5FC5\u987B\u662F\u7A7A\u767D",
        required: "\u5FC5\u987B\u5B58\u5728",
        taken: "\u5DF2\u7ECF\u88AB\u4F7F\u7528",
        too_long: "\u8FC7\u957F\uFF08\u6700\u957F\u4E3A%{count}\u4E2A\u5B57\u7B26\uFF09",
        too_short: "\u8FC7\u77ED\uFF08\u6700\u77ED\u4E3A%{count}\u4E2A\u5B57\u7B26\uFF09",
        wrong_length: "\u957F\u5EA6\u975E\u6CD5\uFF08\u5FC5\u987B\u4E3A%{count}\u4E2A\u5B57\u7B26\uFF09"
      },
      template: {
        body: "\u5982\u4E0B\u5B57\u6BB5\u51FA\u73B0\u9519\u8BEF\uFF1A",
        header: "\u6709%{count}\u4E2A\u9519\u8BEF\u53D1\u751F\u5BFC\u81F4\u201C%{model}\u201D\u65E0\u6CD5\u88AB\u4FDD\u5B58\u3002"
      }
    },
    helpers: {
      select: {
        prompt: "\u8BF7\u9009\u62E9"
      },
      submit: {
        create: "\u65B0\u589E%{model}",
        submit: "\u50A8\u5B58%{model}",
        update: "\u66F4\u65B0%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "CN\xA5"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u5341\u4EBF",
            million: "\u767E\u4E07",
            quadrillion: "\u5343\u5146",
            thousand: "\u5343",
            trillion: "\u5146",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: "\u5B57\u8282",
            eb: "EB",
            gb: "GB",
            kb: "KB",
            mb: "MB",
            pb: "PB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u3001",
        two_words_connector: "\u548C",
        words_connector: "\u3001"
      }
    },
    time: {
      am: "\u4E0A\u5348",
      formats: {
        default: "%Y\u5E74%m\u6708%d\u65E5 %A %H:%M:%S %Z",
        long: "%Y\u5E74%m\u6708%d\u65E5 %H:%M",
        short: "%m\u6708%d\u65E5 %H:%M"
      },
      pm: "\u4E0B\u5348"
    }
  };
  var zh_HK = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u9A57\u8B49\u5931\u6557\uFF1A%{errors}",
          restrict_dependent_destroy: {
            has_many: "\u7531\u65BC%{record}\u4F9D\u8CF4\u6B64\u8A18\u9304\uFF0C\u7121\u6CD5\u79FB\u9664",
            has_one: "\u7531\u65BC%{record}\u4F9D\u8CF4\u6B64\u8A18\u9304\uFF0C\u7121\u6CD5\u79FB\u9664"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u9031\u65E5",
        "\u9031\u4E00",
        "\u9031\u4E8C",
        "\u9031\u4E09",
        "\u9031\u56DB",
        "\u9031\u4E94",
        "\u9031\u516D"
      ],
      abbr_month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      day_names: [
        "\u661F\u671F\u65E5",
        "\u661F\u671F\u4E00",
        "\u661F\u671F\u4E8C",
        "\u661F\u671F\u4E09",
        "\u661F\u671F\u56DB",
        "\u661F\u671F\u4E94",
        "\u661F\u671F\u516D"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y\u5E74%m\u6708%d\u65E5",
        short: "%m\u6708%d\u65E5"
      },
      month_names: [
        null,
        "\u4E00\u6708",
        "\u4E8C\u6708",
        "\u4E09\u6708",
        "\u56DB\u6708",
        "\u4E94\u6708",
        "\u516D\u6708",
        "\u4E03\u6708",
        "\u516B\u6708",
        "\u4E5D\u6708",
        "\u5341\u6708",
        "\u5341\u4E00\u6708",
        "\u5341\u4E8C\u6708"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u7D04%{count}\u5C0F\u6642",
        about_x_months: "\u7D04%{count}\u500B\u6708",
        about_x_years: "\u7D04%{count}\u5E74",
        almost_x_years: "\u63A5\u8FD1%{count}\u5E74",
        half_a_minute: "\u534A\u5206\u9418",
        less_than_x_minutes: "\u4E0D\u5230%{count}\u5206\u9418",
        less_than_x_seconds: "\u4E0D\u5230%{count}\u79D2",
        over_x_years: "\u8D85\u904E%{count}\u5E74",
        x_days: "%{count}\u5929",
        x_minutes: "%{count}\u5206\u9418",
        x_months: "%{count}\u500B\u6708",
        x_seconds: "%{count}\u79D2",
        x_years: "%{count}\u5E74"
      },
      prompts: {
        day: "\u65E5",
        hour: "\u6642",
        minute: "\u5206",
        month: "\u6708",
        second: "\u79D2",
        year: "\u5E74"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u5FC5\u5B9A\u8981\u88AB\u63A5\u53D7",
        blank: "\u4E0D\u53EF\u4EE5\u662F\u7A7A\u767D",
        confirmation: "\u8207%{attribute}\u4E0D\u4E00\u81F4",
        empty: "\u4E0D\u53EF\u4EE5\u7559\u7A7A",
        equal_to: "\u5FC5\u9808\u7B49\u65BC%{count}",
        even: "\u5FC5\u9808\u8981\u662F\u96D9\u6578",
        exclusion: "\u662F\u88AB\u4FDD\u7559\u7684\u95DC\u9375\u5B57",
        greater_than: "\u5FC5\u9808\u5927\u65BC%{count}",
        greater_than_or_equal_to: "\u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC%{count}",
        inclusion: "\u4E26\u975E\u53EF\u88AB\u63A5\u53D7\u7684\u5167\u5BB9",
        invalid: "\u662F\u7121\u6548\u7684",
        less_than: "\u5FC5\u9808\u5C0F\u65BC%{count}",
        less_than_or_equal_to: "\u5FC5\u9808\u5C0F\u65BC\u6216\u7B49\u65BC%{count}",
        model_invalid: "\u9A57\u8B49\u5931\u6557\uFF1A%{errors}",
        not_a_number: "\u5FC5\u9808\u662F\u6578\u5B57",
        not_an_integer: "\u5FC5\u9808\u662F\u6574\u6578",
        odd: "\u5FC5\u9808\u662F\u55AE\u6578",
        other_than: "\u4E0D\u53EF\u4EE5\u662F%{count}\u500B\u5B57",
        present: "\u5FC5\u5B9A\u8981\u662F\u7A7A\u767D",
        required: "\u5FC5\u9808\u5B58\u5728",
        taken: "\u5DF2\u88AB\u4F7F\u7528",
        too_long: "\u592A\u9577\uFF08\u6700\u9577\u70BA%{count}\u500B\u5B57\u5143\uFF09",
        too_short: "\u592A\u77ED\uFF08\u6700\u5C11\u70BA%{count}\u500B\u5B57\u5143\uFF09",
        wrong_length: "\u5B57\u6578\u932F\u8AA4\uFF08\u61C9\u70BA%{count}\u500B\u5B57\u5143\uFF09"
      },
      template: {
        body: "\u4EE5\u4E0B\u6B04\u4F4D\u767C\u751F\u554F\u984C\uFF1A",
        header: "\u767C\u751F%{count}\u9805\u932F\u8AA4\uFF0C\u4EE5\u81F4%{model}\u672A\u80FD\u5132\u5B58\u3002"
      }
    },
    helpers: {
      select: {
        prompt: "\u8ACB\u9078\u64C7"
      },
      submit: {
        create: "\u65B0\u589E%{model}",
        submit: "\u5132\u5B58%{model}",
        update: "\u66F4\u65B0%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "HK$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u5341\u5104",
            million: "\u767E\u842C",
            quadrillion: "\u5343\u5146",
            thousand: "\u5343",
            trillion: "\u5146",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u3001",
        two_words_connector: "\u548C",
        words_connector: "\u3001"
      }
    },
    time: {
      am: "\u4E0A\u5348",
      formats: {
        default: "%Y\u5E74%m\u6708%d\u65E5 %A %H:%M:%S %Z",
        long: "%Y\u5E74%m\u6708%d\u65E5 %H:%M",
        short: "%m\u6708%d\u65E5 %H:%M"
      },
      pm: "\u4E0B\u5348"
    }
  };
  var zh_TW = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u6821\u9A57\u5931\u6557\uFF1A%{errors}",
          restrict_dependent_destroy: {
            has_many: "\u7531\u65BC%{record}\u9700\u8981\u6B64\u8A18\u9304\uFF0C\u6240\u4EE5\u7121\u6CD5\u79FB\u9664\u8A18\u9304",
            has_one: "\u7531\u65BC%{record}\u9700\u8981\u6B64\u8A18\u9304\uFF0C\u6240\u4EE5\u7121\u6CD5\u79FB\u9664\u8A18\u9304"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u9031\u65E5",
        "\u9031\u4E00",
        "\u9031\u4E8C",
        "\u9031\u4E09",
        "\u9031\u56DB",
        "\u9031\u4E94",
        "\u9031\u516D"
      ],
      abbr_month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      day_names: [
        "\u661F\u671F\u65E5",
        "\u661F\u671F\u4E00",
        "\u661F\u671F\u4E8C",
        "\u661F\u671F\u4E09",
        "\u661F\u671F\u56DB",
        "\u661F\u671F\u4E94",
        "\u661F\u671F\u516D"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y\u5E74%m\u6708%d\u65E5",
        short: "%m\u6708%d\u65E5"
      },
      month_names: [
        null,
        "\u4E00\u6708",
        "\u4E8C\u6708",
        "\u4E09\u6708",
        "\u56DB\u6708",
        "\u4E94\u6708",
        "\u516D\u6708",
        "\u4E03\u6708",
        "\u516B\u6708",
        "\u4E5D\u6708",
        "\u5341\u6708",
        "\u5341\u4E00\u6708",
        "\u5341\u4E8C\u6708"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u5927\u7D04%{count}\u5C0F\u6642",
        about_x_months: "\u5927\u7D04%{count}\u500B\u6708",
        about_x_years: "\u5927\u7D04%{count}\u5E74",
        almost_x_years: "\u63A5\u8FD1%{count}\u5E74",
        half_a_minute: "\u534A\u5206\u9418",
        less_than_x_minutes: "\u4E0D\u5230%{count}\u5206\u9418",
        less_than_x_seconds: "\u4E0D\u5230%{count}\u79D2",
        over_x_years: "%{count}\u5E74\u591A",
        x_days: "%{count}\u5929",
        x_minutes: "%{count}\u5206\u9418",
        x_months: "%{count}\u500B\u6708",
        x_seconds: "%{count}\u79D2",
        x_years: "%{count}\u5E74"
      },
      prompts: {
        day: "\u65E5",
        hour: "\u6642",
        minute: "\u5206",
        month: "\u6708",
        second: "\u79D2",
        year: "\u5E74"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u5FC5\u9808\u662F\u53EF\u88AB\u63A5\u53D7\u7684",
        blank: "\u4E0D\u80FD\u70BA\u7A7A\u767D",
        confirmation: "\u8207%{attribute}\u9808\u4E00\u81F4",
        empty: "\u4E0D\u80FD\u7559\u7A7A",
        equal_to: "\u5FC5\u9808\u7B49\u65BC%{count}",
        even: "\u5FC5\u9808\u662F\u5076\u6578",
        exclusion: "\u662F\u88AB\u4FDD\u7559\u7684\u95DC\u9375\u5B57",
        greater_than: "\u5FC5\u9808\u5927\u65BC%{count}",
        greater_than_or_equal_to: "\u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC%{count}",
        inclusion: "\u6C92\u6709\u5305\u542B\u5728\u5217\u8868\u4E2D",
        invalid: "\u662F\u7121\u6548\u7684",
        less_than: "\u5FC5\u9808\u5C0F\u65BC%{count}",
        less_than_or_equal_to: "\u5FC5\u9808\u5C0F\u65BC\u6216\u7B49\u65BC%{count}",
        model_invalid: "\u6821\u9A57\u5931\u6557\uFF1A%{errors}",
        not_a_number: "\u4E0D\u662F\u6578\u5B57",
        not_an_integer: "\u5FC5\u9808\u662F\u6574\u6578",
        odd: "\u5FC5\u9808\u662F\u5947\u6578",
        other_than: "\u4E0D\u53EF\u4EE5\u662F%{count}\u500B\u5B57",
        present: "\u5FC5\u9808\u662F\u7A7A\u767D",
        required: "\u5FC5\u9808\u5B58\u5728",
        taken: "\u5DF2\u7D93\u88AB\u4F7F\u7528",
        too_long: "\u904E\u9577\uFF08\u6700\u9577\u662F%{count}\u500B\u5B57\uFF09",
        too_short: "\u904E\u77ED\uFF08\u6700\u77ED\u662F%{count}\u500B\u5B57\uFF09",
        wrong_length: "\u5B57\u6578\u932F\u8AA4\uFF08\u5FC5\u9808\u662F%{count}\u500B\u5B57\uFF09"
      },
      template: {
        body: "\u4EE5\u4E0B\u6B04\u4F4D\u767C\u751F\u554F\u984C\uFF1A",
        header: "\u6709%{count}\u500B\u932F\u8AA4\u767C\u751F\u4F7F\u5F97\u300C%{model}\u300D\u7121\u6CD5\u88AB\u5132\u5B58\u3002"
      }
    },
    helpers: {
      select: {
        prompt: "\u8ACB\u9078\u64C7"
      },
      submit: {
        create: "\u65B0\u589E%{model}",
        submit: "\u5132\u5B58%{model}",
        update: "\u66F4\u65B0%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u%n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "NT$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u5341\u5104",
            million: "\u767E\u842C",
            quadrillion: "\u5343\u5146",
            thousand: "\u5343",
            trillion: "\u5146",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "\u4F4D\u5143\u7D44",
              other: "\u4F4D\u5143\u7D44"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u3001",
        two_words_connector: "\u548C",
        words_connector: "\u3001"
      }
    },
    time: {
      am: "\u4E0A\u5348",
      formats: {
        default: "%Y\u5E74%m\u6708%d\u65E5 %A %H:%M:%S %Z",
        long: "%Y\u5E74%m\u6708%d\u65E5 %H:%M",
        short: "%m\u6708%d\u65E5 %H:%M"
      },
      pm: "\u4E0B\u5348"
    }
  };
  var zh_YUE = {
    activerecord: {
      errors: {
        messages: {
          record_invalid: "\u9A57\u8B49\u5931\u6557\uFF1A%{errors}",
          restrict_dependent_destroy: {
            has_many: "\u5514\u53EF\u4EE5\u522A\u9664\uFF0C\u56E0\u70BA%{record}\u8981\u7528\u4F62",
            has_one: "\u5514\u53EF\u4EE5\u522A\u9664\uFF0C\u56E0\u70BA%{record}\u8981\u7528\u4F62"
          }
        }
      }
    },
    date: {
      abbr_day_names: [
        "\u9031\u65E5",
        "\u9031\u4E00",
        "\u9031\u4E8C",
        "\u9031\u4E09",
        "\u9031\u56DB",
        "\u9031\u4E94",
        "\u9031\u516D"
      ],
      abbr_month_names: [
        null,
        "1\u6708",
        "2\u6708",
        "3\u6708",
        "4\u6708",
        "5\u6708",
        "6\u6708",
        "7\u6708",
        "8\u6708",
        "9\u6708",
        "10\u6708",
        "11\u6708",
        "12\u6708"
      ],
      day_names: [
        "\u661F\u671F\u65E5",
        "\u661F\u671F\u4E00",
        "\u661F\u671F\u4E8C",
        "\u661F\u671F\u4E09",
        "\u661F\u671F\u56DB",
        "\u661F\u671F\u4E94",
        "\u661F\u671F\u516D"
      ],
      formats: {
        default: "%Y-%m-%d",
        long: "%Y\u5E74%b%d\u65E5",
        short: "%b%d\u65E5"
      },
      month_names: [
        null,
        "\u4E00\u6708",
        "\u4E8C\u6708",
        "\u4E09\u6708",
        "\u56DB\u6708",
        "\u4E94\u6708",
        "\u516D\u6708",
        "\u4E03\u6708",
        "\u516B\u6708",
        "\u4E5D\u6708",
        "\u5341\u6708",
        "\u5341\u4E00\u6708",
        "\u5341\u4E8C\u6708"
      ],
      order: [
        "year",
        "month",
        "day"
      ]
    },
    datetime: {
      distance_in_words: {
        about_x_hours: "\u5927\u6982%{count}\u500B\u9418",
        about_x_months: "\u5927\u6982%{count}\u500B\u6708",
        about_x_years: "\u5927\u6982%{count}\u5E74",
        almost_x_years: "\u5DEE\u5514\u591A%{count}\u5E74",
        half_a_minute: "\u534A\u5206\u9418",
        less_than_x_minutes: "\u5514\u5920%{count}\u5206\u9418",
        less_than_x_seconds: "\u5514\u5920%{count}\u79D2",
        over_x_years: "\u8D85\u904E%{count}\u5E74",
        x_days: "%{count}\u65E5",
        x_minutes: "%{count}\u5206\u9418",
        x_months: "%{count}\u500B\u6708",
        x_seconds: "%{count}\u79D2",
        x_years: "%{count}\u5E74"
      },
      prompts: {
        day: "\u65E5",
        hour: "\u9EDE",
        minute: "\u5206",
        month: "\u6708",
        second: "\u79D2",
        year: "\u5E74"
      }
    },
    errors: {
      format: "%{attribute}%{message}",
      messages: {
        accepted: "\u4E00\u5B9A\u8981\u88AB\u63A5\u53D7",
        blank: "\u5514\u53EF\u4EE5\u7A7A\u767D",
        confirmation: "\u8207%{attribute}\u5514\u593E",
        empty: "\u5514\u53EF\u4EE5\u6F0F\u7A7A",
        equal_to: "\u8981\u7B49\u65BC%{count}",
        even: "\u8981\u4FC2\u96D9\u6578",
        exclusion: "\u5514\u7528\u5F97",
        greater_than: "\u8981\u5927\u904E%{count}",
        greater_than_or_equal_to: "\u8981\u5927\u904E\u6216\u8005\u7B49\u65BC%{count}",
        inclusion: "\u5514\u4FC2\u53EF\u88AB\u63A5\u53D7\u5605\u5167\u5BB9",
        invalid: "\u7121\u6548",
        less_than: "\u8981\u7D30\u904E%{count}",
        less_than_or_equal_to: "\u8981\u7D30\u904E\u6216\u8005\u7B49\u65BC%{count}",
        model_invalid: "\u9A57\u8B49\u5931\u6557\uFF1A%{errors}",
        not_a_number: "\u5514\u4FC2\u4E00\u500B\u6578\u5B57",
        not_an_integer: "\u8981\u4FC2\u6574\u6578",
        odd: "\u8981\u4FC2\u55AE\u6578",
        other_than: "\u5514\u53EF\u4EE5\u4FC2%{count} \u500B\u5B57",
        present: "\u4E00\u5B9A\u8981\u7A7A\u767D",
        required: "\u5FC5\u9808\u5B58\u5728",
        taken: "\u5DF2\u7D93\u7528\u7DCA",
        too_long: "\u592A\u9577\uFF08\u6700\u591A%{count}\u500B\u5B57\uFF09",
        too_short: "\u592A\u77ED\uFF08\u6700\u5C11%{count}\u500B\u5B57\uFF09",
        wrong_length: "\u5514\u5571\u5B57\u6578\uFF08\u8981\u4FC2%{count}\u500B\u5B57\uFF09"
      },
      template: {
        body: "\u5462\u5572\u6709\u554F\u984C\uFF1A",
        header: "\u6709%{count}\u500B\u554F\u984C\uFF0C%{model}\u5132\u5B58\u5514\u5230\u3002"
      }
    },
    helpers: {
      select: {
        prompt: "\u8ACB\u55BA\u5EA6\u63C0"
      },
      submit: {
        create: "\u65B0\u589E%{model}",
        submit: "\u5132\u5B58%{model}",
        update: "\u66F4\u65B0%{model}"
      }
    },
    i18n: {
      plural: {
        keys: [
          "other"
        ]
      }
    },
    number: {
      currency: {
        format: {
          delimiter: ",",
          format: "%u %n",
          precision: 2,
          separator: ".",
          significant: false,
          strip_insignificant_zeros: false,
          unit: "HK$"
        }
      },
      format: {
        delimiter: ",",
        precision: 3,
        separator: ".",
        significant: false,
        strip_insignificant_zeros: false
      },
      human: {
        decimal_units: {
          format: "%n %u",
          units: {
            billion: "\u5341\u5104",
            million: "\u767E\u842C",
            quadrillion: "\u5343\u5146",
            thousand: "\u5343",
            trillion: "\u5146",
            unit: ""
          }
        },
        format: {
          delimiter: "",
          precision: 1,
          significant: false,
          strip_insignificant_zeros: false
        },
        storage_units: {
          format: "%n %u",
          units: {
            byte: {
              one: "Byte",
              other: "Bytes"
            },
            gb: "GB",
            kb: "KB",
            mb: "MB",
            tb: "TB"
          }
        }
      },
      percentage: {
        format: {
          delimiter: "",
          format: "%n%"
        }
      },
      precision: {
        format: {
          delimiter: ""
        }
      }
    },
    support: {
      array: {
        last_word_connector: "\u3001",
        two_words_connector: "\u540C",
        words_connector: "\u3001"
      }
    },
    time: {
      am: "\u4E0A\u665D",
      formats: {
        default: "%Y\u5E74%m\u6708%d\u865F %A %H:%M:%S %Z",
        long: "%Y\u5E74%m\u6708%d\u865F %H:%M",
        short: "%m\u6708%d\u865F %H:%M"
      },
      pm: "\u4E0B\u665D"
    }
  };
  var zh_CN2 = {
    devise: {
      failure: {
        expired: "\u7531\u4E8E\u4E0D\u6D3B\u8DC3\uFF0C\u4F60\u7684\u8D26\u6237\u5DF2\u8FC7\u671F\u3002\u8BF7\u8054\u7CFB\u7AD9\u70B9\u7BA1\u7406\u5458\u3002",
        session_limited: "\u4F60\u7684\u767B\u5F55\u51ED\u636E\u5DF2\u5728\u53E6\u4E00\u4E2A\u6D4F\u89C8\u5668\u4E0A\u88AB\u4F7F\u7528\u3002\u8BF7\u91CD\u65B0\u767B\u5F55\u4EE5\u5728\u6B64\u6D4F\u89C8\u5668\u7EE7\u7EED\u3002"
      },
      invalid_captcha: "\u9A8C\u8BC1\u7801\u65E0\u6548\u3002",
      invalid_security_question: "\u5B89\u5168\u95EE\u9898\u7B54\u6848\u65E0\u6548\u3002",
      paranoid_verification_code: {
        show: {
          submit: "\u63D0\u4EA4",
          submit_verification_code: "\u63D0\u4EA4\u9A8C\u8BC1\u7801",
          verification_code: "\u9A8C\u8BC1\u7801"
        },
        updated: "\u63A5\u53D7\u9A8C\u8BC1\u7801"
      },
      paranoid_verify: {
        code_required: "\u8BF7\u8F93\u5165\u6211\u4EEC\u652F\u6301\u56E2\u961F\u63D0\u4F9B\u7684\u4EE3\u7801"
      },
      password_expired: {
        change_required: "\u4F60\u7684\u5BC6\u7801\u5DF2\u8FC7\u671F\uFF0C\u8BF7\u66F4\u65B0\u5BC6\u7801\u3002",
        show: {
          change_my_password: "\u66F4\u6539\u5BC6\u7801",
          current_password: "\u5F53\u524D\u5BC6\u7801",
          new_password: "\u65B0\u5BC6\u7801",
          new_password_confirmation: "\u786E\u8BA4\u65B0\u5BC6\u7801",
          renew_your_password: "\u66F4\u65B0\u4F60\u7684\u5BC6\u7801"
        },
        updated: "\u4F60\u7684\u65B0\u5BC6\u7801\u5DF2\u4FDD\u5B58\u3002"
      }
    },
    errors: {
      messages: {
        equal_to_current_password: "\u5FC5\u987B\u4E0E\u5F53\u524D\u5BC6\u7801\u4E0D\u540C\u3002",
        equal_to_email: "\u5FC5\u987B\u4E0E\u7535\u5B50\u90AE\u4EF6\u5730\u5740\u4E0D\u540C\u3002",
        password_complexity: {
          digit: {
            one: "\u5FC5\u987B\u5305\u542B\u81F3\u5C111\u4E2A\u6570\u5B57",
            other: "\u5FC5\u987B\u5305\u542B\u81F3\u5C11%{count}\u4E2A\u6570\u5B57"
          },
          lower: {
            one: "\u5FC5\u987B\u5305\u542B\u81F3\u5C111\u4E2A\u5C0F\u5199\u5B57\u6BCD",
            other: "\u5FC5\u987B\u5305\u542B\u81F3\u5C11%{count}\u4E2A\u5C0F\u5199\u5B57\u6BCD"
          },
          symbol: {
            one: `\u5FC5\u987B\u5305\u542B\u81F3\u5C111\u4E2A\u7279\u6B8A\u7B26\u53F7\uFF08!"#$%&'()*+,-./:;<=>?@[\\]^_\u2018{|}~)`,
            other: `\u5FC5\u987B\u5305\u542B\u81F3\u5C11%{count}\u4E2A\u7279\u6B8A\u7B26\u53F7\uFF08!"#$%&'()*+,-./:;<=>?@[\\]^_\u2018{|}~\uFF09`
          },
          upper: {
            one: "\u5FC5\u987B\u5305\u542B\u81F3\u5C111\u4E2A\u5927\u5199\u5B57\u6BCD",
            other: "\u5FC5\u987B\u5305\u542B\u81F3\u5C11%{count}\u4E2A\u5927\u5199\u5B57\u6BCD"
          }
        },
        taken_in_past: "\u66FE\u88AB\u4F7F\u7528\u8FC7\u3002"
      }
    }
  };
  var zh_TW2 = {
    devise: {
      failure: {
        expired: "\u4F60\u7684\u5E33\u865F\u56E0\u904E\u4E45\u6C92\u4F7F\u7528\u800C\u5DF2\u7D93\u904E\u671F\uFF0C\u8ACB\u6D3D\u7DB2\u7AD9\u7BA1\u7406\u54E1\u3002",
        session_limited: "\u4F60\u7684\u767B\u5165\u6191\u8B49\u5DF2\u5728\u53E6\u4E00\u500B\u700F\u89BD\u5668\u4E0A\u88AB\u4F7F\u7528\uFF0C\u8ACB\u91CD\u65B0\u767B\u5165\u4EE5\u5728\u6B64\u700F\u89BD\u5668\u7E7C\u7E8C\u4F7F\u7528\u3002"
      },
      invalid_captcha: "\u8F38\u5165\u7684\u9A57\u8B49\u78BC\u7121\u6548\u3002",
      invalid_security_question: "\u5B89\u5168\u554F\u984C\u7B54\u6848\u7121\u6548\u3002",
      paranoid_verification_code: {
        show: {
          submit: "\u9001\u51FA",
          submit_verification_code: "\u9001\u51FA\u9A57\u8B49\u78BC",
          verification_code: "\u9A57\u8B49\u78BC"
        },
        updated: "\u63A5\u53D7\u9A57\u8B49\u78BC"
      },
      paranoid_verify: {
        code_required: "\u8ACB\u8F38\u5165\u7531\u6211\u5011\u5BA2\u670D\u5718\u968A\u63D0\u4F9B\u7684\u4EE3\u78BC"
      },
      password_expired: {
        change_required: "\u4F60\u7684\u5BC6\u78BC\u5DF2\u7D93\u904E\u671F\uFF0C\u8ACB\u66F4\u65B0\u5BC6\u78BC\u3002",
        show: {
          change_my_password: "\u66F4\u6539\u6211\u7684\u5BC6\u78BC",
          current_password: "\u76EE\u524D\u5BC6\u78BC",
          new_password: "\u65B0\u5BC6\u78BC",
          new_password_confirmation: "\u78BA\u8A8D\u65B0\u5BC6\u78BC",
          renew_your_password: "\u66F4\u65B0\u4F60\u7684\u5BC6\u78BC"
        },
        updated: "\u4F60\u7684\u65B0\u5BC6\u78BC\u5DF2\u5132\u5B58"
      }
    },
    errors: {
      messages: {
        equal_to_current_password: "\u5FC5\u9808\u8207\u76EE\u524D\u5BC6\u78BC\u4E0D\u540C\u3002",
        equal_to_email: "\u5FC5\u9808\u8207\u96FB\u5B50\u90F5\u4EF6\u5730\u5740\u4E0D\u540C\u3002",
        password_complexity: {
          digit: {
            one: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11\u4E00\u500B\u6578\u5B57",
            other: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11 %{count} \u500B\u6578\u5B57"
          },
          lower: {
            one: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11\u4E00\u500B\u5C0F\u5BEB\u5B57\u6BCD",
            other: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11 %{count} \u500B\u5C0F\u5BEB\u5B57\u6BCD"
          },
          symbol: {
            one: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11\u4E00\u500B\u7279\u6B8A\u7B26\u865F",
            other: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11 %{count} \u500B\u7279\u6B8A\u7B26\u865F"
          },
          upper: {
            one: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11\u4E00\u500B\u5927\u5BEB\u5B57\u6BCD",
            other: "\u5FC5\u9808\u5305\u542B\u81F3\u5C11 %{count} \u500B\u5927\u5BEB\u5B57\u6BCD"
          }
        },
        taken_in_past: "\u66FE\u88AB\u4F7F\u7528\u904E\u3002"
      }
    }
  };
  var locales_default = {
    af,
    ar,
    az,
    be,
    bg,
    bn,
    bs,
    by,
    ca,
    cs,
    cy,
    da,
    de,
    "de-AT": de_AT,
    "de-CH": de_CH,
    "de-DE": de_DE,
    dz,
    el,
    "el-CY": el_CY,
    en,
    "en-AU": en_AU,
    "en-CA": en_CA,
    "en-CY": en_CY,
    "en-GB": en_GB,
    "en-IE": en_IE,
    "en-IN": en_IN,
    "en-NZ": en_NZ,
    "en-TT": en_TT,
    "en-US": en_US,
    "en-ZA": en_ZA,
    eo,
    es,
    "es-419": es_419,
    "es-AR": es_AR,
    "es-CL": es_CL,
    "es-CO": es_CO,
    "es-CR": es_CR,
    "es-EC": es_EC,
    "es-ES": es_ES,
    "es-MX": es_MX,
    "es-NI": es_NI,
    "es-PA": es_PA,
    "es-PE": es_PE,
    "es-US": es_US,
    "es-VE": es_VE,
    et,
    eu,
    fa,
    fi,
    fr,
    "fr-CA": fr_CA,
    "fr-CH": fr_CH,
    "fr-FR": fr_FR,
    fy,
    gd,
    gl,
    he,
    hi,
    "hi-IN": hi_IN,
    hr,
    hsb,
    hu,
    id,
    is,
    it,
    "it-CH": it_CH,
    ja,
    ka,
    kk,
    km,
    kn,
    ko,
    lb,
    lo,
    lt,
    lv,
    mg,
    mk,
    ml,
    mn,
    "mr-IN": mr_IN,
    ms,
    nb,
    ne,
    nl,
    nn,
    oc,
    or,
    pa,
    "pap-AW": pap_AW,
    "pap-CW": pap_CW,
    pl,
    pt,
    "pt-BR": pt_BR,
    rm,
    ro,
    ru,
    sc,
    sk,
    sl,
    sq,
    sr,
    st,
    sv,
    "sv-FI": sv_FI,
    "sv-SE": sv_SE,
    sw,
    ta,
    te,
    th,
    tl,
    tr,
    tt,
    ug,
    uk,
    ur,
    uz,
    vi,
    wo,
    "zh-CN": zh_CN,
    "zh-HK": zh_HK,
    "zh-TW": zh_TW,
    "zh-YUE": zh_YUE,
    zh_CN: zh_CN2,
    zh_TW: zh_TW2
  };
})();
//# sourceMappingURL=locales.js.map
